// wrap-start.frag.js
(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['lodash'], factory);
    } else if (typeof exports === 'object') {
        var _ = require('lodash');
        module.exports = factory(_);
    } else {
        // change "myLib" to whatever your library is called
        root.EL = factory(root._);
    }
}(this, function (_) {

    
/**
 * @license almond 0.3.2 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice,
        jsSuffixRegExp = /\.js$/;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name) {
            name = name.split('/');
            lastIndex = name.length - 1;

            // If wanting node ID compatibility, strip .js from end
            // of IDs. Have to do this here, and not in nameToUrl
            // because node allows either .js or non .js to map
            // to same file.
            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
            }

            // Starts with a '.' so need the baseName
            if (name[0].charAt(0) === '.' && baseParts) {
                //Convert baseName to array, and lop off the last part,
                //so that . matches that 'directory' and not name of the baseName's
                //module. For instance, baseName of 'one/two/three', maps to
                //'one/two/three.js', but we want the directory, 'one/two' for
                //this normalization.
                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                name = normalizedBaseParts.concat(name);
            }

            //start trimDots
            for (i = 0; i < name.length; i++) {
                part = name[i];
                if (part === '.') {
                    name.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    // If at the start, or previous value is still ..,
                    // keep them so that when converted to a path it may
                    // still work when converted to a path, even though
                    // as an ID it is less than ideal. In larger point
                    // releases, may be better to just kick out an error.
                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {
                        continue;
                    } else if (i > 0) {
                        name.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
            //end trimDots

            name = name.join('/');
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            var args = aps.call(arguments, 0);

            //If first arg is not require('string'), and there is only
            //one arg, it is the array form without a callback. Insert
            //a null so that the following concat is correct.
            if (typeof args[0] !== 'string' && args.length === 1) {
                args.push(null);
            }
            return req.apply(undef, args.concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relName) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            callbackType = typeof callback,
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (callbackType === 'undefined' || callbackType === 'function') {
            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback ? callback.apply(defined[name], args) : undefined;

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (config.deps) {
                req(config.deps, config.callback);
            }
            if (!callback) {
                return;
            }

            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        return req(cfg);
    };

    /**
     * Expose module registry for debugging and tooling
     */
    requirejs._defined = defined;

    define = function (name, deps, callback) {
        if (typeof name !== 'string') {
            throw new Error('See almond README: incorrect module build, no module name');
        }

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

define("../../../node_modules/almond/almond", function(){});

/**
 * @license almond 0.3.2 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */

//[The "BSD license"]
// Copyright (c) 2012 Terence Parr
// Copyright (c) 2012 Sam Harwell
// Copyright (c) 2014 Eric Vergnaud
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

//
// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

//
// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///

/*
 * [The "BSD license"]
 *  Copyright (c) 2012 Terence Parr
 *  Copyright (c) 2012 Sam Harwell
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  3. The name of the author may not be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 *  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 *  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// [The "BSD license"]
//  Copyright (c) 2013 Terence Parr
//  Copyright (c) 2013 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///

// [The "BSD license"]
//  Copyright (c) 2013 Terence Parr
//  Copyright (c) 2013 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//[The "BSD license"]
// Copyright (c) 2013 Terence Parr
// Copyright (c) 2013 Sam Harwell
// Copyright (c) 2014 Eric Vergnaud
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//[The "BSD license"]

// Copyright (c) 2013 Terence Parr

// Copyright (c) 2013 Sam Harwell

// Copyright (c) 2014 Eric Vergnaud

// 1. Redistributions of source code must retain the above copyright

// 2. Redistributions in binary form must reproduce the above copyright

//
// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  this SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  this SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///

//
// [The "BSD license"]
//  Copyright (c) 2013 Terence Parr
//  Copyright (c) 2013 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///

//
// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//
// This enumeration defines the prediction modes available in ANTLR 4 along with
// utility methods for analyzing configuration sets for conflicts and/or
// ambiguities.

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.

//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.

// Compute the error recovery set for the current rule. During
// rule invocation, the parser pushes the set of tokens that can
// follow that rule reference on the stack; this amounts to
// computing FIRST of what follows the rule reference in the
// enclosing rule. See LinearApproximator.FIRST().
// This local follow set only includes tokens
// from within the rule; i.e., the FIRST computation done by
// ANTLR stops at the end of a rule.
//
// EXAMPLE
//
// When you find a "no viable alt exception", the input is not
// consistent with any of the alternatives for rule r. The best
// thing to do is to consume tokens until you see something that
// can legally follow a call to r//or* any rule that called r.
// You don't want the exact set of viable next tokens because the
// input might just be missing a token--you might consume the
// rest of the input looking for one of the missing tokens.
//
// Consider grammar:
//
// a : '[' b ']'
// | '(' b ')'
// ;
// b : c '^' INT ;
// c : ID
// | INT
// ;
//
// At each rule invocation, the set of tokens that could follow
// that rule is pushed on a stack. Here are the various
// context-sensitive follow sets:
//
// FOLLOW(b1_in_a) = FIRST(']') = ']'
// FOLLOW(b2_in_a) = FIRST(')') = ')'
// FOLLOW(c_in_b) = FIRST('^') = '^'
//
// Upon erroneous input "[]", the call chain is
//
// a -> b -> c
//
// and, hence, the follow context stack is:
//
// depth follow set start of rule execution
// 0 <EOF> a (from main())
// 1 ']' b
// 2 '^' c
//
// Notice that ')' is not included, because b would have to have
// been called from a different context in rule a for ')' to be
// included.
//
// For error recovery, we cannot consider FOLLOW(c)
// (context-sensitive or otherwise). We need the combined set of
// all context-sensitive FOLLOW sets--the set of all tokens that
// could follow any reference in the call chain. We need to
// resync to one of those tokens. Note that FOLLOW(c)='^' and if
// we resync'd to that token, we'd consume until EOF. We need to
// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.
// In this case, for input "[]", LA(1) is ']' and in the set, so we would
// not consume anything. After printing an error, rule c would
// return normally. Rule b would not find the required '^' though.
// At this point, it gets a mismatched token error and throws an
// exception (since LA(1) is not in the viable following token
// set). The rule exception handler tries to recover, but finds
// the same recovery set and doesn't consume anything. Rule b
// exits normally returning to rule a. Now it finds the ']' (and
// with the successful match exits errorRecovery mode).
//
// So, you can see that the parser walks up the call chain looking
// for the token that was a member of the recovery set.
//
// Errors are not generated in errorRecovery mode.
//
// ANTLR's error recovery mechanism is based upon original ideas:
//
// "Algorithms + Data Structures = Programs" by Niklaus Wirth
//
// and
//
// "A note on error recovery in recursive descent parsers":
// http://portal.acm.org/citation.cfm?id=947902.947905
//
// Later, Josef Grosch had some good ideas:
//
// "Efficient and Comfortable Error Recovery in Recursive Descent
// Parsers":
// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip
//
// Like Grosch I implement context-sensitive FOLLOW sets that are combined
// at run-time upon error to avoid overhead during parsing.
//

// 
//  [The "BSD license"]
//   Copyright (c) 2012 Terence Parr
//   Copyright (c) 2012 Sam Harwell
//   Copyright (c) 2014 Eric Vergnaud
//   All rights reserved.
// 
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions
//   are met:
// 
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. The name of the author may not be used to endorse or promote products
//      derived from this software without specific prior written permission.
// 
//   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// 

// [The "BSD license"]
//  Copyright (c) 2012 Terence Parr
//  Copyright (c) 2012 Sam Harwell
//  Copyright (c) 2014 Eric Vergnaud
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
//  this SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//  this SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

(function(e,t){if(typeof define=="function"&&define.amd)define('../ANTLR.min',["lodash"],t);else if(typeof exports=="object"){var n=require("lodash");module.exports=t(n)}else e.ANTLR=t(e._)})(this,function(e){var t,n,r;return function(e){function v(e,t){return h.call(e,t)}function m(e,t){var n,r,i,s,o,u,a,f,c,h,p,v,m=t&&t.split("/"),g=l.map,y=g&&g["*"]||{};if(e){e=e.split("/"),o=e.length-1,l.nodeIdCompat&&d.test(e[o])&&(e[o]=e[o].replace(d,"")),e[0].charAt(0)==="."&&m&&(v=m.slice(0,m.length-1),e=v.concat(e));for(c=0;c<e.length;c++){p=e[c];if(p===".")e.splice(c,1),c-=1;else if(p===".."){if(c===0||c===1&&e[2]===".."||e[c-1]==="..")continue;c>0&&(e.splice(c-1,2),c-=2)}}e=e.join("/")}if((m||y)&&g){n=e.split("/");for(c=n.length;c>0;c-=1){r=n.slice(0,c).join("/");if(m)for(h=m.length;h>0;h-=1){i=g[m.slice(0,h).join("/")];if(i){i=i[r];if(i){s=i,u=c;break}}}if(s)break;!a&&y&&y[r]&&(a=y[r],f=c)}!s&&a&&(s=a,u=f),s&&(n.splice(0,u,s),e=n.join("/"))}return e}function g(t,n){return function(){var r=p.call(arguments,0);return typeof r[0]!="string"&&r.length===1&&r.push(null),s.apply(e,r.concat([t,n]))}}function y(e){return function(t){return m(t,e)}}function b(e){return function(t){a[e]=t}}function w(t){if(v(f,t)){var n=f[t];delete f[t],c[t]=!0,i.apply(e,n)}if(!v(a,t)&&!v(c,t))throw new Error("No "+t);return a[t]}function E(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function S(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice,d=/\.js$/;o=function(e,t){var n,r=E(e),i=r[0];return e=r[1],i&&(i=m(i,t),n=w(i)),i?n&&n.normalize?e=n.normalize(e,y(t)):e=m(e,t):(e=m(e,t),r=E(e),i=r[0],e=r[1],i&&(n=w(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:n}},u={require:function(e){return g(e)},exports:function(e){var t=a[e];return typeof t!="undefined"?t:a[e]={}},module:function(e){return{id:e,uri:"",exports:a[e],config:S(e)}}},i=function(t,n,r,i){var s,l,h,p,d,m=[],y=typeof r,E;i=i||t;if(y==="undefined"||y==="function"){n=!n.length&&r.length?["require","exports","module"]:n;for(d=0;d<n.length;d+=1){p=o(n[d],i),l=p.f;if(l==="require")m[d]=u.require(t);else if(l==="exports")m[d]=u.exports(t),E=!0;else if(l==="module")s=m[d]=u.module(t);else if(v(a,l)||v(f,l)||v(c,l))m[d]=w(l);else{if(!p.p)throw new Error(t+" missing "+l);p.p.load(p.n,g(i,!0),b(l),{}),m[d]=a[l]}}h=r?r.apply(a[t],m):undefined;if(t)if(s&&s.exports!==e&&s.exports!==a[t])a[t]=s.exports;else if(h!==e||!E)a[t]=h}else t&&(a[t]=r)},t=n=s=function(t,n,r,a,f){if(typeof t=="string")return u[t]?u[t](n):w(o(t,n).f);if(!t.splice){l=t,l.deps&&s(l.deps,l.callback);if(!n)return;n.splice?(t=n,n=r,r=null):t=e}return n=n||function(){},typeof r=="function"&&(r=a,a=f),a?i(e,t,n,r):setTimeout(function(){i(e,t,n,r)},4),s},s.config=function(e){return s(e)},t._defined=a,r=function(e,t,n){if(typeof e!="string")throw new Error("See almond README: incorrect module build, no module name");t.splice||(n=t,t=[]),!v(a,e)&&!v(f,e)&&(f[e]=[e,t,n])},r.amd={jQuery:!0}}(),r("../../../../node_modules/almond/almond",function(){}),r("Utils",["require","exports","module"],function(e,t,n){function r(e){return"["+e.join(", ")+"]"}function i(e,t){return e.equals(t)}function s(e){return e.hashString()}function o(e,t){return this.data={},this.hashFunction=e||s,this.equalsFunction=t||i,this}function u(){return this.data=[],this}function a(){return this.data={},this}function f(){return this}function l(e,t){return e=e.replace("	","\\t"),e=e.replace("\n","\\n"),e=e.replace("\r","\\r"),t&&(e=e.replace(" ","·")),e}String.prototype.hashCode=function(e){var t=0;if(this.length===0)return t;for(var n=0;n<this.length;n++){var r=this.charCodeAt(n);t=(t<<5)-t+r,t&=t}return t},Object.defineProperty(o.prototype,"length",{get:function(){return this.values().length}}),o.prototype.add=function(e){var t=this.hashFunction(e),n="hash_"+t.hashCode();if(n in this.data){var r,i=this.data[n];for(r=0;r<i.length;r++)if(this.equalsFunction(e,i[r]))return i[r];return i.push(e),e}return this.data[n]=[e],e},o.prototype.contains=function(e){var t=this.hashFunction(e),n=t.hashCode();if(n in this.data){var r,i=this.data[n];for(r=0;r<i.length;r++)if(this.equalsFunction(e,i[r]))return!0}return!1},o.prototype.values=function(){var e=[];for(var t in this.data)t.indexOf("hash_")===0&&(e=e.concat(this.data[t]));return e},o.prototype.toString=function(){return r(this.values())},u.prototype.add=function(e){this.data[e]=!0},u.prototype.or=function(e){var t=this;Object.keys(e.data).map(function(e){t.add(e)})},u.prototype.remove=function(e){delete this.data[e]},u.prototype.contains=function(e){return this.data[e]===!0},u.prototype.values=function(){return Object.keys(this.data)},u.prototype.minValue=function(){return Math.min.apply(null,this.values())},u.prototype.hashString=function(){return this.values().toString()},u.prototype.equals=function(e){return e instanceof u?this.hashString()===e.hashString():!1},Object.defineProperty(u.prototype,"length",{get:function(){return this.values().length}}),u.prototype.toString=function(){return"{"+this.values().join(", ")+"}"},a.prototype.get=function(e){return e="k-"+e,e in this.data?this.data[e]:null},a.prototype.put=function(e,t){e="k-"+e,this.data[e]=t},a.prototype.values=function(){var e=this.data,t=Object.keys(this.data);return t.map(function(t){return e[t]})},f.prototype.get=function(e,t){var n=this[e]||null;return n===null?null:n[t]||null},f.prototype.set=function(e,t,n){var r=this[e]||null;r===null&&(r={},this[e]=r),r[t]=n},t.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"},t.titleCase=function(e){return e.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1)})},t.Set=o,t.BitSet=u,t.AltDict=a,t.DoubleDict=f,t.escapeWhitespace=l,t.arrayToString=r}),r("Token",["require","exports","module"],function(e,t,n){function r(){return this.source=null,this.type=null,this.channel=null,this.start=null,this.stop=null,this.tokenIndex=null,this.line=null,this.column=null,this._text=null,this}function i(e,t,n,s,o){return r.call(this),this.source=e!==undefined?e:i.EMPTY_SOURCE,this.type=t!==undefined?t:null,this.channel=n!==undefined?n:r.DEFAULT_CHANNEL,this.start=s!==undefined?s:-1,this.stop=o!==undefined?o:-1,this.tokenIndex=-1,this.source[0]!==null?(this.line=e[0].line,this.column=e[0].column):this.column=-1,this}r.INVALID_TYPE=0,r.EPSILON=-2,r.MIN_USER_TOKEN_TYPE=1,r.EOF=-1,r.DEFAULT_CHANNEL=0,r.HIDDEN_CHANNEL=1,Object.defineProperty(r.prototype,"text",{get:function(){return this._text},set:function(e){this._text=e}}),r.prototype.getTokenSource=function(){return this.source[0]},r.prototype.getInputStream=function(){return this.source[1]},i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.EMPTY_SOURCE=[null,null],i.prototype.clone=function(){var e=new i(this.source,this.type,this.channel,this.start,this.stop);return e.tokenIndex=this.tokenIndex,e.line=this.line,e.column=this.column,e.text=this.text,e},Object.defineProperty(i.prototype,"text",{get:function(){if(this._text!==null)return this._text;var e=this.getInputStream();if(e===null)return null;var t=e.size;return this.start<t&&this.stop<t?e.getText(this.start,this.stop):"<EOF>"},set:function(e){this._text=e}}),i.prototype.toString=function(){var e=this.text;return e!==null?e=e.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t"):e="<no text>","[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+e+"',<"+this.type+">"+(this.channel>0?",channel="+this.channel:"")+","+this.line+":"+this.column+"]"},t.Token=r,t.CommonToken=i}),r("atn/ATNState",["require","exports","module"],function(e,t,n){function i(){return this.atn=null,this.stateNumber=i.INVALID_STATE_NUMBER,this.stateType=null,this.ruleIndex=0,this.epsilonOnlyTransitions=!1,this.transitions=[],this.nextTokenWithinRule=null,this}function s(){return i.call(this),this.stateType=i.BASIC,this}function o(){return i.call(this),this.decision=-1,this.nonGreedy=!1,this}function u(){return o.call(this),this.endState=null,this}function a(){return u.call(this),this.stateType=i.BLOCK_START,this}function f(){return i.call(this),this.stateType=i.BLOCK_END,this.startState=null,this}function l(){return i.call(this),this.stateType=i.RULE_STOP,this}function c(){return i.call(this),this.stateType=i.RULE_START,this.stopState=null,this.isPrecedenceRule=!1,this}function h(){return o.call(this),this.stateType=i.PLUS_LOOP_BACK,this}function p(){return u.call(this),this.stateType=i.PLUS_BLOCK_START,this.loopBackState=null,this}function d(){return u.call(this),this.stateType=i.STAR_BLOCK_START,this}function v(){return i.call(this),this.stateType=i.STAR_LOOP_BACK,this}function m(){return o.call(this),this.stateType=i.STAR_LOOP_ENTRY,this.loopBackState=null,this.precedenceRuleDecision=null,this}function g(){return i.call(this),this.stateType=i.LOOP_END,this.loopBackState=null,this}function y(){return o.call(this),this.stateType=i.TOKEN_START,this}var r=4;i.INVALID_TYPE=0,i.BASIC=1,i.RULE_START=2,i.BLOCK_START=3,i.PLUS_BLOCK_START=4,i.STAR_BLOCK_START=5,i.TOKEN_START=6,i.RULE_STOP=7,i.BLOCK_END=8,i.STAR_LOOP_BACK=9,i.STAR_LOOP_ENTRY=10,i.PLUS_LOOP_BACK=11,i.LOOP_END=12,i.serializationNames=["INVALID","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","BLOCK_END","STAR_LOOP_BACK","STAR_LOOP_ENTRY","PLUS_LOOP_BACK","LOOP_END"],i.INVALID_STATE_NUMBER=-1,i.prototype.toString=function(){return this.stateNumber},i.prototype.equals=function(e){return e instanceof i?this.stateNumber===e.stateNumber:!1},i.prototype.isNonGreedyExitState=function(){return!1},i.prototype.addTransition=function(e,t){t===undefined&&(t=-1),this.transitions.length===0?this.epsilonOnlyTransitions=e.isEpsilon:this.epsilonOnlyTransitions!==e.isEpsilon&&(this.epsilonOnlyTransitions=!1),t===-1?this.transitions.push(e):this.transitions.splice(t,1,e)},s.prototype=Object.create(i.prototype),s.prototype.constructor=s,o.prototype=Object.create(i.prototype),o.prototype.constructor=o,u.prototype=Object.create(o.prototype),u.prototype.constructor=u,a.prototype=Object.create(u.prototype),a.prototype.constructor=a,f.prototype=Object.create(i.prototype),f.prototype.constructor=f,l.prototype=Object.create(i.prototype),l.prototype.constructor=l,c.prototype=Object.create(i.prototype),c.prototype.constructor=c,h.prototype=Object.create(o.prototype),h.prototype.constructor=h,p.prototype=Object.create(u.prototype),p.prototype.constructor=p,d.prototype=Object.create(u.prototype),d.prototype.constructor=d,v.prototype=Object.create(i.prototype),v.prototype.constructor=v,m.prototype=Object.create(o.prototype),m.prototype.constructor=m,g.prototype=Object.create(i.prototype),g.prototype.constructor=g,y.prototype=Object.create(o.prototype),y.prototype.constructor=y,t.ATNState=i,t.BasicState=s,t.DecisionState=o,t.BlockStartState=u,t.BlockEndState=f,t.LoopEndState=g,t.RuleStartState=c,t.RuleStopState=l,t.TokensStartState=y,t.PlusLoopbackState=h,t.StarLoopbackState=v,t.StarLoopEntryState=m,t.PlusBlockStartState=p,t.StarBlockStartState=d,t.BasicBlockStartState=a}),r("atn/SemanticContext",["require","exports","module","./../Utils"],function(e,t,n){function i(){return this}function s(e,t,n){return i.call(this),this.ruleIndex=e===undefined?-1:e,this.predIndex=t===undefined?-1:t,this.isCtxDependent=n===undefined?!1:n,this}function o(e){i.call(this),this.precedence=e===undefined?0:e}function u(e,t){i.call(this);var n=new r;e instanceof u?e.opnds.map(function(e){n.add(e)}):n.add(e),t instanceof u?t.opnds.map(function(e){n.add(e)}):n.add(t);var s=o.filterPrecedencePredicates(n);if(s.length>0){var a=null;s.map(function(e){if(a===null||e.precedence<a.precedence)a=e}),n.add(a)}return this.opnds=n.values(),this}function a(e,t){i.call(this);var n=new r;e instanceof a?e.opnds.map(function(e){n.add(e)}):n.add(e),t instanceof a?t.opnds.map(function(e){n.add(e)}):n.add(t);var s=o.filterPrecedencePredicates(n);if(s.length>0){var u=s.sort(function(e,t){return e.compareTo(t)}),f=u[u.length-1];n.add(f)}return this.opnds=n.values(),this}var r=e("./../Utils").Set;i.prototype.evaluate=function(e,t){},i.prototype.evalPrecedence=function(e,t){return this},i.andContext=function(e,t){if(e===null||e===i.NONE)return t;if(t===null||t===i.NONE)return e;var n=new u(e,t);return n.opnds.length===1?n.opnds[0]:n},i.orContext=function(e,t){if(e===null)return t;if(t===null)return e;if(e===i.NONE||t===i.NONE)return i.NONE;var n=new a(e,t);return n.opnds.length===1?n.opnds[0]:n},s.prototype=Object.create(i.prototype),s.prototype.constructor=s,i.NONE=new s,s.prototype.evaluate=function(e,t){var n=this.isCtxDependent?t:null;return e.sempred(n,this.ruleIndex,this.predIndex)},s.prototype.hashString=function(){return""+this.ruleIndex+"/"+this.predIndex+"/"+this.isCtxDependent},s.prototype.equals=function(e){return this===e?!0:e instanceof s?this.ruleIndex===e.ruleIndex&&this.predIndex===e.predIndex&&this.isCtxDependent===e.isCtxDependent:!1},s.prototype.toString=function(){return"{"+this.ruleIndex+":"+this.predIndex+"}?"},o.prototype=Object.create(i.prototype),o.prototype.constructor=o,o.prototype.evaluate=function(e,t){return e.precpred(t,this.precedence)},o.prototype.evalPrecedence=function(e,t){return e.precpred(t,this.precedence)?i.NONE:null},o.prototype.compareTo=function(e){return this.precedence-e.precedence},o.prototype.hashString=function(){return"31"},o.prototype.equals=function(e){return this===e?!0:e instanceof o?this.precedence===e.precedence:!1},o.prototype.toString=function(){return"{"+this.precedence+">=prec}?"},o.filterPrecedencePredicates=function(e){var t=[];return e.values().map(function(e){e instanceof o&&t.push(e)}),t},u.prototype=Object.create(i.prototype),u.prototype.constructor=u,u.prototype.equals=function(e){return this===e?!0:e instanceof u?this.opnds===e.opnds:!1},u.prototype.hashString=function(){return""+this.opnds+"/AND"},u.prototype.evaluate=function(e,t){for(var n=0;n<this.opnds.length;n++)if(!this.opnds[n].evaluate(e,t))return!1;return!0},u.prototype.evalPrecedence=function(e,t){var n=!1,r=[];for(var s=0;s<this.opnds.length;s++){var o=this.opnds[s],u=o.evalPrecedence(e,t);n|=u!==o;if(u===null)return null;u!==i.NONE&&r.push(u)}if(!n)return this;if(r.length===0)return i.NONE;var a=null;return r.map(function(e){a=a===null?e:SemanticPredicate.andContext(a,e)}),a},u.prototype.toString=function(){var e="";return this.opnds.map(function(t){e+="&& "+t.toString()}),e.length>3?e.slice(3):e},a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.prototype.constructor=function(e){return this===e?!0:e instanceof a?this.opnds===e.opnds:!1},a.prototype.hashString=function(){return""+this.opnds+"/OR"},a.prototype.evaluate=function(e,t){for(var n=0;n<this.opnds.length;n++)if(this.opnds[n].evaluate(e,t))return!0;return!1},a.prototype.evalPrecedence=function(e,t){var n=!1,r=[];for(var s=0;s<this.opnds.length;s++){var o=this.opnds[s],u=o.evalPrecedence(e,t);n|=u!==o;if(u===i.NONE)return i.NONE;u!==null&&r.push(u)}if(!n)return this;if(r.length===0)return null;var a=null;return r.map(function(e){return a===null?e:i.orContext(a,e)}),a},u.prototype.toString=function(){var e="";return this.opnds.map(function(t){e+="|| "+t.toString()}),e.length>3?e.slice(3):e},t.SemanticContext=i,t.PrecedencePredicate=o,t.Predicate=s}),r("atn/ATNConfig",["require","exports","module","./ATNState","./SemanticContext"],function(e,t,n){function s(e,t){if(e===null){var n={state:null,alt:null,context:null,semanticContext:null};return t&&(n.reachesIntoOuterContext=0),n}var r={};return r.state=e.state||null,r.alt=e.alt||null,r.context=e.context||null,r.semanticContext=e.semanticContext||null,t&&(r.reachesIntoOuterContext=e.reachesIntoOuterContext||0,r.precedenceFilterSuppressed=e.precedenceFilterSuppressed||!1),r}function o(e,t){return this.checkContext(e,t),e=s(e),t=s(t,!0),this.state=e.state!==null?e.state:t.state,this.alt=e.alt!==null?e.alt:t.alt,this.context=e.context!==null?e.context:t.context,this.semanticContext=e.semanticContext!==null?e.semanticContext:t.semanticContext!==null?t.semanticContext:i.NONE,this.reachesIntoOuterContext=t.reachesIntoOuterContext,this.precedenceFilterSuppressed=t.precedenceFilterSuppressed,this}function u(e,t){o.call(this,e,t);var n=e.lexerActionExecutor||null;return this.lexerActionExecutor=n||(t!==null?t.lexerActionExecutor:null),this.passedThroughNonGreedyDecision=t!==null?this.checkNonGreedyDecision(t,this.state):!1,this}var r=e("./ATNState").DecisionState,i=e("./SemanticContext").SemanticContext;o.prototype.checkContext=function(e,t){(e.context===null||e.context===undefined)&&(t===null||t.context===null||t.context===undefined)&&(this.context=null)},o.prototype.equals=function(e){return this===e?!0:e instanceof o?this.state.stateNumber===e.state.stateNumber&&this.alt===e.alt&&(this.context===null?e.context===null:this.context.equals(e.context))&&this.semanticContext.equals(e.semanticContext)&&this.precedenceFilterSuppressed===e.precedenceFilterSuppressed:!1},o.prototype.shortHashString=function(){return""+this.state.stateNumber+"/"+this.alt+"/"+this.semanticContext},o.prototype.hashString=function(){return""+this.state.stateNumber+"/"+this.alt+"/"+(this.context===null?"":this.context.hashString())+"/"+this.semanticContext.hashString()},o.prototype.toString=function(){return"("+this.state+","+this.alt+(this.context!==null?",["+this.context.toString()+"]":"")+(this.semanticContext!==i.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext>0?",up="+this.reachesIntoOuterContext:"")+")"},u.prototype=Object.create(o.prototype),u.prototype.constructor=u,u.prototype.hashString=function(){return""+this.state.stateNumber+this.alt+this.context+this.semanticContext+(this.passedThroughNonGreedyDecision?1:0)+this.lexerActionExecutor},u.prototype.equals=function(e){return this===e?!0:e instanceof u?this.passedThroughNonGreedyDecision!==e.passedThroughNonGreedyDecision?!1:(this.lexerActionExecutor?!this.lexerActionExecutor.equals(e.lexerActionExecutor):!e.lexerActionExecutor)?!1:o.prototype.equals.call(this,e):!1},u.prototype.checkNonGreedyDecision=function(e,t){return e.passedThroughNonGreedyDecision||t instanceof r&&t.nonGreedy},t.ATNConfig=o,t.LexerATNConfig=u}),r("IntervalSet",["require","exports","module","./Token"],function(e,t,n){function i(e,t){return this.start=e,this.stop=t,this}function s(){this.intervals=null,this.readOnly=!1}var r=e("./Token").Token;i.prototype.contains=function(e){return e>=this.start&&e<this.stop},i.prototype.toString=function(){return this.start===this.stop-1?this.start.toString():this.start.toString()+".."+(this.stop-1).toString()},Object.defineProperty(i.prototype,"length",{get:function(){return this.stop-this.start}}),s.prototype.first=function(e){return this.intervals===null||this.intervals.length===0?r.INVALID_TYPE:this.intervals[0].start},s.prototype.addOne=function(e){this.addInterval(new i(e,e+1))},s.prototype.addRange=function(e,t){this.addInterval(new i(e,t+1))},s.prototype.addInterval=function(e){if(this.intervals===null)this.intervals=[],this.intervals.push(e);else{for(var t=0;t<this.intervals.length;t++){var n=this.intervals[t];if(e.stop<n.start){this.intervals.splice(t,0,e);return}if(e.stop===n.start){this.intervals[t].start=e.start;return}if(e.start<=n.stop){this.intervals[t]=new i(Math.min(n.start,e.start),Math.max(n.stop,e.stop)),this.reduce(t);return}}this.intervals.push(e)}},s.prototype.addSet=function(e){if(e.intervals!==null)for(var t=0;t<e.intervals.length;t++){var n=e.intervals[t];this.addInterval(new i(n.start,n.stop))}return this},s.prototype.reduce=function(e){if(e<this.intervalslength-1){var t=this.intervals[e],n=this.intervals[e+1];t.stop>=n.stop?(this.intervals.pop(e+1),this.reduce(e)):t.stop>=n.start&&(this.intervals[e]=new i(t.start,n.stop),this.intervals.pop(e+1))}},s.prototype.complement=function(e,t){var n=new s;n.addInterval(new i(e,t+1));for(var r=0;r<this.intervals.length;r++)n.removeRange(this.intervals[r]);return n},s.prototype.contains=function(e){if(this.intervals===null)return!1;for(var t=0;t<this.intervals.length;t++)if(this.intervals[t].contains(e))return!0;return!1},Object.defineProperty(s.prototype,"length",{get:function(){var e=0;return this.intervals.map(function(t){e+=t.length}),e}}),s.prototype.removeRange=function(e){if(e.start===e.stop-1)this.removeOne(e.start);else if(this.intervals!==null){var t=0;for(var n=0;n<this.intervals.length;n++){var r=this.intervals[t];if(e.stop<=r.start)return;if(e.start>r.start&&e.stop<r.stop){this.intervals[t]=new i(r.start,e.start);var s=new i(e.stop,r.stop);this.intervals.splice(t,0,s);return}e.start<=r.start&&e.stop>=r.stop?(this.intervals.splice(t,1),t-=1):e.start<r.stop?this.intervals[t]=new i(r.start,e.start):e.stop<r.stop&&(this.intervals[t]=new i(e.stop,r.stop)),t+=1}}},s.prototype.removeOne=function(e){if(this.intervals!==null)for(var t=0;t<this.intervals.length;t++){var n=this.intervals[t];if(e<n.start)return;if(e===n.start&&e===n.stop-1){this.intervals.splice(t,1);return}if(e===n.start){this.intervals[t]=new i(n.start+1,n.stop);return}if(e===n.stop-1){this.intervals[t]=new i(n.start,n.stop-1);return}if(e<n.stop-1){var r=new i(n.start,e);n.start=e+1,this.intervals.splice(t,0,r);return}}},s.prototype.toString=function(e,t,n){return e=e||null,t=t||null,n=n||!1,this.intervals===null?"{}":e!==null||t!==null?this.toTokenString(e,t):n?this.toCharString():this.toIndexString()},s.prototype.toCharString=function(){var e=[];for(var t=0;t<this.intervals.length;t++){var n=this.intervals[t];n.stop===n.start+1?n.start===r.EOF?e.push("<EOF>"):e.push("'"+String.fromCharCode(n.start)+"'"):e.push("'"+String.fromCharCode(n.start)+"'..'"+String.fromCharCode(n.stop-1)+"'")}return e.length>1?"{"+e.join(", ")+"}":e[0]},s.prototype.toIndexString=function(){var e=[];for(var t=0;t<this.intervals.length;t++){var n=this.intervals[t];n.stop===n.start+1?n.start===r.EOF?e.push("<EOF>"):e.push(n.start.toString()):e.push(n.start.toString()+".."+(n.stop-1).toString())}return e.length>1?"{"+e.join(", ")+"}":e[0]},s.prototype.toTokenString=function(e,t){var n=[];for(var r=0;r<this.intervals.length;r++){var i=this.intervals[r];for(var s=i.start;s<i.stop;s++)n.push(this.elementName(e,t,s))}return n.length>1?"{"+n.join(", ")+"}":n[0]},s.prototype.elementName=function(e,t,n){return n===r.EOF?"<EOF>":n===r.EPSILON?"<EPSILON>":e[n]||t[n]},t.Interval=i,t.IntervalSet=s}),r("atn/Transition",["require","exports","module","./../Token","./../IntervalSet","./../IntervalSet","./SemanticContext","./SemanticContext"],function(e,t,n){function a(e){if(e===undefined||e===null)throw"target cannot be null.";return this.target=e,this.isEpsilon=!1,this.label=null,this}function f(e,t){return a.call(this,e),this.label_=t,this.label=this.makeLabel(),this.serializationType=a.ATOM,this}function l(e,t,n,r){return a.call(this,e),this.ruleIndex=t,this.precedence=n,this.followState=r,this.serializationType=a.RULE,this.isEpsilon=!0,this}function c(e,t){return a.call(this,e),this.serializationType=a.EPSILON,this.isEpsilon=!0,this.outermostPrecedenceReturn=t,this}function h(e,t,n){return a.call(this,e),this.serializationType=a.RANGE,this.start=t,this.stop=n,this.label=this.makeLabel(),this}function p(e){return a.call(this,e),this}function d(e,t,n,r){return p.call(this,e),this.serializationType=a.PREDICATE,this.ruleIndex=t,this.predIndex=n,this.isCtxDependent=r,this.isEpsilon=!0,this}function v(e,t,n,r){return a.call(this,e),this.serializationType=a.ACTION,this.ruleIndex=t,this.actionIndex=n===undefined?-1:n,this.isCtxDependent=r===undefined?!1:r,this.isEpsilon=!0,this}function m(e,t){return a.call(this,e),this.serializationType=a.SET,t!==undefined&&t!==null?this.label=t:(this.label=new s,this.label.addOne(r.INVALID_TYPE)),this}function g(e,t){return m.call(this,e,t),this.serializationType=a.NOT_SET,this}function y(e){return a.call(this,e),this.serializationType=a.WILDCARD,this}function b(e,t){return p.call(this,e),this.serializationType=a.PRECEDENCE,this.precedence=t,this.isEpsilon=!0,this}var r=e("./../Token").Token,i=e("./../IntervalSet").Interval,s=e("./../IntervalSet").IntervalSet,o=e("./SemanticContext").Predicate,u=e("./SemanticContext").PrecedencePredicate;a.EPSILON=1,a.RANGE=2,a.RULE=3,a.PREDICATE=4,a.ATOM=5,a.ACTION=6,a.SET=7,a.NOT_SET=8,a.WILDCARD=9,a.PRECEDENCE=10,a.serializationNames=["INVALID","EPSILON","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE"],a.serializationTypes={EpsilonTransition:a.EPSILON,RangeTransition:a.RANGE,RuleTransition:a.RULE,PredicateTransition:a.PREDICATE,AtomTransition:a.ATOM,ActionTransition:a.ACTION,SetTransition:a.SET,NotSetTransition:a.NOT_SET,WildcardTransition:a.WILDCARD,PrecedencePredicateTransition:a.PRECEDENCE},f.prototype=Object.create(a.prototype),f.prototype.constructor=f,f.prototype.makeLabel=function(){var e=new s;return e.addOne(this.label_),e},f.prototype.matches=function(e,t,n){return this.label_===e},f.prototype.toString=function(){return this.label_},l.prototype=Object.create(a.prototype),l.prototype.constructor=l,l.prototype.matches=function(e,t,n){return!1},c.prototype=Object.create(a.prototype),c.prototype.constructor=c,c.prototype.matches=function(e,t,n){return!1},c.prototype.toString=function(){return"epsilon"},h.prototype=Object.create(a.prototype),h.prototype.constructor=h,h.prototype.makeLabel=function(){var e=new s;return e.addRange(this.start,this.stop),e},h.prototype.matches=function(e,t,n){return e>=this.start&&e<=this.stop},h.prototype.toString=function(){return"'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'"},p.prototype=Object.create(a.prototype),p.prototype.constructor=p,d.prototype=Object.create(p.prototype),d.prototype.constructor=d,d.prototype.matches=function(e,t,n){return!1},d.prototype.getPredicate=function(){return new o(this.ruleIndex,this.predIndex,this.isCtxDependent)},d.prototype.toString=function(){return"pred_"+this.ruleIndex+":"+this.predIndex},v.prototype=Object.create(a.prototype),v.prototype.constructor=v,v.prototype.matches=function(e,t,n){return!1},v.prototype.toString=function(){return"action_"+this.ruleIndex+":"+this.actionIndex},m.prototype=Object.create(a.prototype),m.prototype.constructor=m,m.prototype.matches=function(e,t,n){return this.label.contains(e)},m.prototype.toString=function(){return this.label.toString()},g.prototype=Object.create(m.prototype),g.prototype.constructor=g,g.prototype.matches=function(e,t,n){return e>=t&&e<=n&&!m.prototype.matches.call(this,e,t,n)},g.prototype.toString=function(){return"~"+m.prototype.toString.call(this)},y.prototype=Object.create(a.prototype),y.prototype.constructor=y,y.prototype.matches=function(e,t,n){return e>=t&&e<=n},y.prototype.toString=function(){return"."},b.prototype=Object.create(p.prototype),b.prototype.constructor=b,b.prototype.matches=function(e,t,n){return!1},b.prototype.getPredicate=function(){return new u(this.precedence)},b.prototype.toString=function(){return this.precedence+" >= _p"},t.Transition=a,t.AtomTransition=f,t.SetTransition=m,t.NotSetTransition=g,t.RuleTransition=l,t.ActionTransition=v,t.EpsilonTransition=c,t.RangeTransition=h,t.WildcardTransition=y,t.PredicateTransition=d,t.PrecedencePredicateTransition=b,t.AbstractPredicateTransition=p}),r("tree/Tree",["require","exports","module","./../Token","./../IntervalSet","../Utils"],function(e,t,n){function u(){return this}function a(){return u.call(this),this}function f(){return a.call(this),this}function l(){return f.call(this),this}function c(){return f.call(this),this}function h(){return c.call(this),this}function p(){return this}function v(){return this}function m(e){return c.call(this),this.parentCtx=null,this.symbol=e,this}function g(e){return m.call(this,e),this}function y(){return this}var r=e("./../Token").Token,i=e("./../IntervalSet").Interval,s=new i(-1,-2),o=e("../Utils");a.prototype=Object.create(u.prototype),a.prototype.constructor=a,f.prototype=Object.create(a.prototype),f.prototype.constructor=f,l.prototype=Object.create(f.prototype),l.prototype.constructor=l,c.prototype=Object.create(f.prototype),c.prototype.constructor=c,h.prototype=Object.create(c.prototype),h.prototype.constructor=h,p.prototype.visit=function(e){if(o.isArray(e)){var t=this;return e.map(function(e){return d(t,e)})}return d(this,e)},p.prototype.visitTerminal=function(e){},p.prototype.visitErrorNode=function(e){};var d=function(e,t){if(t.parser===undefined)return;var n=t.parser.ruleNames[t.ruleIndex],r="visit"+o.titleCase(n);return e[r](t)};v.prototype.visitTerminal=function(e){},v.prototype.visitErrorNode=function(e){},v.prototype.enterEveryRule=function(e){},v.prototype.exitEveryRule=function(e){},m.prototype=Object.create(c.prototype),m.prototype.constructor=m,m.prototype.getChild=function(e){return null},m.prototype.getSymbol=function(){return this.symbol},m.prototype.getParent=function(){return this.parentCtx},m.prototype.getPayload=function(){return this.symbol},m.prototype.getSourceInterval=function(){if(this.symbol===null)return s;var e=this.symbol.tokenIndex;return new i(e,e)},m.prototype.getChildCount=function(){return 0},m.prototype.accept=function(e){return e.visitTerminal(this)},m.prototype.getText=function(){return this.symbol.text},m.prototype.toString=function(){return this.symbol.type===r.EOF?"<EOF>":this.symbol.text},g.prototype=Object.create(m.prototype),g.prototype.constructor=g,g.prototype.isErrorNode=function(){return!0},g.prototype.accept=function(e){return e.visitErrorNode(this)},y.prototype.walk=function(e,t){var n=t instanceof h||t.isErrorNode!==undefined&&t.isErrorNode();if(n)e.visitErrorNode(t);else if(t instanceof c)e.visitTerminal(t);else{this.enterRule(e,t);for(var r=0;r<t.getChildCount();r++){var i=t.getChild(r);this.walk(e,i)}this.exitRule(e,t)}},y.prototype.enterRule=function(e,t){var n=t.getRuleContext();e.enterEveryRule(n),n.enterRule(e)},y.prototype.exitRule=function(e,t){var n=t.getRuleContext();n.exitRule(e),e.exitEveryRule(n)},y.DEFAULT=new y,t.RuleNode=l,t.ErrorNode=h,t.TerminalNode=c,t.ErrorNodeImpl=g,t.TerminalNodeImpl=m,t.ParseTreeListener=v,t.ParseTreeVisitor=p,t.ParseTreeWalker=y,t.INVALID_INTERVAL=s}),r("tree/Trees",["require","exports","module","./../Utils","./../Token","./Tree","./Tree","./Tree"],function(e,t,n){function a(){}var r=e("./../Utils"),i=e("./../Token").Token,s=e("./Tree").RuleNode,o=e("./Tree").ErrorNode,u=e("./Tree").TerminalNode;a.toStringTree=function(e,t,n){t=t||null,n=n||null,n!==null&&(t=n.ruleNames);var i=a.getNodeText(e,t);i=r.escapeWhitespace(i,!1);var s=e.getChildCount();if(s===0)return i;var o="("+i+" ";s>0&&(i=a.toStringTree(e.getChild(0),t),o=o.concat(i));for(var u=1;u<s;u++)i=a.toStringTree(e.getChild(u),t),o=o.concat(" "+i);return o=o.concat(")"),o},a.getNodeText=function(e,t,n){t=t||null,n=n||null,n!==null&&(t=n.ruleNames);if(t!==null){if(e instanceof s)return t[e.getRuleContext().ruleIndex];if(e instanceof o)return e.toString();if(e instanceof u&&e.symbol!==null)return e.symbol.text}var r=e.getPayload();return r instanceof i?r.text:e.getPayload().toString()},a.getChildren=function(e){var t=[];for(var n=0;n<e.getChildCount();n++)t.push(e.getChild(n));return t},a.getAncestors=function(e){var t=[];e=e.getParent();while(e!==null)t=[e].concat(t),e=e.getParent();return t},a.findAllTokenNodes=function(e,t){return a.findAllNodes(e,t,!0)},a.findAllRuleNodes=function(e,t){return a.findAllNodes(e,t,!1)},a.findAllNodes=function(e,t,n){var r=[];return a._findAllNodes(e,t,n,r),r},a._findAllNodes=function(e,t,n,r){console.log("finding all node"),n&&e instanceof u?e.symbol.type===t&&r.push(e):!n&&e.isARuleContext===!0&&e.ruleIndex===t&&r.push(e);for(var i=0;i<e.getChildCount();i++)a._findAllNodes(e.getChild(i),t,n,r)},a.descendants=function(e){var t=[e];for(var n=0;n<e.getChildCount();n++)t=t.concat(a.descendants(e.getChild(n)));return t},t.Trees=a}),r("RuleContext",["require","exports","module","./tree/Tree","./tree/Tree","./tree/Trees"],function(e,t,n){function o(e,t){return r.call(this),this.parentCtx=e||null,this.isARuleContext=!0,this.invokingState=t||-1,this}var r=e("./tree/Tree").RuleNode,i=e("./tree/Tree").INVALID_INTERVAL,s=e("./tree/Trees").Trees;o.prototype=Object.create(r.prototype),o.prototype.constructor=o,o.prototype.depth=function(){var e=0,t=this;while(t!==null)t=t.parentCtx,e+=1;return e},o.prototype.isEmpty=function(){return this.invokingState===-1},o.prototype.getSourceInterval=function(){return i},o.prototype.getRuleContext=function(){return this},o.prototype.getPayload=function(){return this},o.prototype.getText=function(){return this.getChildCount()===0?"":this.children.map(function(e){return e.getText()}).join("")},o.prototype.getChild=function(e){return null},o.prototype.getChildCount=function(){return 0},o.prototype.accept=function(e){return e.visitChildren(this)},o.prototype.toStringTree=function(e,t){return s.toStringTree(this,e,t)},o.prototype.toString=function(e,t){e=e||null,t=t||null;var n=this,r="[";while(n!==null&&n!==t){if(e===null)n.isEmpty()||(r+=n.invokingState);else{var i=n.ruleIndex,s=i>=0&&i<e.length?e[i]:""+i;r+=s}n.parentCtx!==null&&(e!==null||!n.parentCtx.isEmpty())&&(r+=" "),n=n.parentCtx}return r+="]",r},t.RuleContext=o}),r("PredictionContext",["require","exports","module","./RuleContext"],function(e,t,n){function i(e){this.cachedHashString=e}function s(e,t){return""+e+t}function o(){return""}function u(){return this.cache={},this}function a(e,t){var n=e!==null?s(e,t):o();i.call(this,n),this.parentCtx=e,this.returnState=t}function f(){return a.call(this,null,i.EMPTY_RETURN_STATE),this}function l(e,t){var n=s(e,t);return i.call(this,n),this.parents=e,this.returnStates=t,this}function c(e,t){if(t===undefined||t===null)t=r.EMPTY;if(t.parentCtx===null||t===r.EMPTY)return i.EMPTY;var n=c(e,t.parentCtx),s=e.states[t.invokingState],o=s.transitions[0];return a.create(n,o.followState.stateNumber)}function h(e,t){var n="";return e.map(function(e){n+=e}),t.map(function(e){n+=e}),n}function p(e,t,n,r){if(e===t)return e;if(e instanceof a&&t instanceof a)return d(e,t,n,r);if(n){if(e instanceof f)return e;if(t instanceof f)return t}return e instanceof a&&(e=new l([e.getParent()],[e.returnState])),t instanceof a&&(t=new l([t.getParent()],[t.returnState])),m(e,t,n,r)}function d(e,t,n,r){if(r!==null){var i=r.get(e,t);if(i!==null)return i;i=r.get(t,e);if(i!==null)return i}var s=v(e,t,n);if(s!==null)return r!==null&&r.set(e,t,s),s;if(e.returnState===t.returnState){var o=p(e.parentCtx,t.parentCtx,n,r);if(o===e.parentCtx)return e;if(o===t.parentCtx)return t;var u=a.create(o,e.returnState);return r!==null&&r.set(e,t,u),u}var f=null;if(e===t||e.parentCtx!==null&&e.parentCtx===t.parentCtx)f=e.parentCtx;if(f!==null){var c=[e.returnState,t.returnState];e.returnState>t.returnState&&(c[0]=t.returnState,c[1]=e.returnState);var h=[f,f],d=new l(h,c);return r!==null&&r.set(e,t,d),d}var c=[e.returnState,t.returnState],h=[e.parentCtx,t.parentCtx];e.returnState>t.returnState&&(c[0]=t.returnState,c[1]=e.returnState,h=[t.parentCtx,e.parentCtx]);var m=new l(h,c);return r!==null&&r.set(e,t,m),m}function v(e,t,n){if(n){if(e===i.EMPTY)return i.EMPTY;if(t===i.EMPTY)return i.EMPTY}else{if(e===i.EMPTY&&t===i.EMPTY)return i.EMPTY;if(e===i.EMPTY){var r=[t.returnState,i.EMPTY_RETURN_STATE],s=[t.parentCtx,null];return new l(s,r)}if(t===i.EMPTY){var r=[e.returnState,i.EMPTY_RETURN_STATE],s=[e.parentCtx,null];return new l(s,r)}}return null}function m(e,t,n,r){if(r!==null){var s=r.get(e,t);if(s!==null)return s;s=r.get(t,e);if(s!==null)return s}var o=0,u=0,f=0,c=[],h=[];while(o<e.returnStates.length&&u<t.returnStates.length){var d=e.parents[o],v=t.parents[u];if(e.returnStates[o]===t.returnStates[u]){var m=e.returnStates[o],y=m===i.EMPTY_RETURN_STATE&&d===null&&v===null,b=d!==null&&v!==null&&d===v;if(y||b)h[f]=d,c[f]=m;else{var w=p(d,v,n,r);h[f]=w,c[f]=m}o+=1,u+=1}else e.returnStates[o]<t.returnStates[u]?(h[f]=d,c[f]=e.returnStates[o],o+=1):(h[f]=v,c[f]=t.returnStates[u],u+=1);f+=1}if(o<e.returnStates.length)for(var E=o;E<e.returnStates.length;E++)h[f]=e.parents[E],c[f]=e.returnStates[E],f+=1;else for(var E=u;E<t.returnStates.length;E++)h[f]=t.parents[E],c[f]=t.returnStates[E],f+=1;if(f<h.length){if(f===1){var S=a.create(h[0],c[0]);return r!==null&&r.set(e,t,S),S}h=h.slice(0,f),c=c.slice(0,f)}var x=new l(h,c);return x===e?(r!==null&&r.set(e,t,e),e):x===t?(r!==null&&r.set(e,t,t),t):(g(h),r!==null&&r.set(e,t,x),x)}function g(e){var t={};for(var n=0;n<e.length;n++){var r=e[n];r in t||(t[r]=r)}for(var i=0;i<e.length;i++)e[i]=t[e[i]]}function y(e,t,n){if(e.isEmpty())return e;var r=n[e]||null;if(r!==null)return r;r=t.get(e);if(r!==null)return n[e]=r,r;var s=!1,o=[];for(var u=0;u<o.length;u++){var f=y(e.getParent(u),t,n);if(s||f!==e.getParent(u)){if(!s){o=[];for(var c=0;c<e.length;c++)o[c]=e.getParent(c);s=!0}o[u]=f}}if(!s)return t.add(e),n[e]=e,e;var h=null;return o.length===0?h=i.EMPTY:o.length===1?h=a.create(o[0],e.getReturnState(0)):h=new l(o,e.returnStates),t.add(h),n[h]=h,n[e]=h,h}function b(e,t,n){if(t===null)return t=[],b(e,t,n);if(n===null)return n={},b(e,t,n);if(e===null||n[e]!==null)return t;n[e]=e,t.push(e);for(var r=0;r<e.length;r++)b(e.getParent(r),t,n);return t}var r=e("./RuleContext").RuleContext;i.EMPTY=null,i.EMPTY_RETURN_STATE=2147483647,i.globalNodeCount=1,i.id=i.globalNodeCount,i.prototype.isEmpty=function(){return this===i.EMPTY},i.prototype.hasEmptyPath=function(){return this.getReturnState(this.length-1)===i.EMPTY_RETURN_STATE},i.prototype.hashString=function(){return this.cachedHashString},u.prototype.add=function(e){if(e===i.EMPTY)return i.EMPTY;var t=this.cache[e]||null;return t!==null?t:(this.cache[e]=e,e)},u.prototype.get=function(e){return this.cache[e]||null},Object.defineProperty(u.prototype,"length",{get:function(){return this.cache.length}}),a.prototype=Object.create(i.prototype),a.prototype.contructor=a,a.create=function(e,t){return t===i.EMPTY_RETURN_STATE&&e===null?i.EMPTY:new a(e,t)},Object.defineProperty(a.prototype,"length",{get:function(){return 1}}),a.prototype.getParent=function(e){return this.parentCtx},a.prototype.getReturnState=function(e){return this.returnState},a.prototype.equals=function(e){return this===e?!0:e instanceof a?this.hashString()!==e.hashString()?!1:this.returnState!==e.returnState?!1:this.parentCtx==null?e.parentCtx==null:this.parentCtx.equals(e.parentCtx):!1},a.prototype.hashString=function(){return this.cachedHashString},a.prototype.toString=function(){var e=this.parentCtx===null?"":this.parentCtx.toString();return e.length===0?this.returnState===this.EMPTY_RETURN_STATE?"$":""+this.returnState:""+this.returnState+" "+e},f.prototype=Object.create(a.prototype),f.prototype.constructor=f,f.prototype.isEmpty=function(){return!0},f.prototype.getParent=function(e){return null},f.prototype.getReturnState=function(e){return this.returnState},f.prototype.equals=function(e){return this===e},f.prototype.toString=function(){return"$"},i.EMPTY=new f,l.prototype=Object.create(i.prototype),l.prototype.constructor=l,l.prototype.isEmpty=function(){return this.returnStates[0]===i.EMPTY_RETURN_STATE},Object.defineProperty(l.prototype,"length",{get:function(){return this.returnStates.length}}),l.prototype.getParent=function(e){return this.parents[e]},l.prototype.getReturnState=function(e){return this.returnStates[e]},l.prototype.equals=function(e){return this===e?!0:e instanceof l?this.hashString!==e.hashString()?!1:this.returnStates===e.returnStates&&this.parents===e.parents:!1},l.prototype.toString=function(){if(this.isEmpty())return"[]";var e="[";for(var t=0;t<this.returnStates.length;t++){t>0&&(e+=", ");if(this.returnStates[t]===i.EMPTY_RETURN_STATE){e+="$";continue}e+=this.returnStates[t],this.parents[t]!==null?e=e+" "+this.parents[t]:e+="null"}return e+"]"},t.merge=p,t.PredictionContext=i,t.PredictionContextCache=u,t.SingletonPredictionContext=a,t.predictionContextFromRuleContext=c,t.getCachedPredictionContext=y}),r("LL1Analyzer",["require","exports","module","./Utils","./Utils","./Token","./atn/ATNConfig","./IntervalSet","./IntervalSet","./atn/ATNState","./atn/Transition","./atn/Transition","./atn/Transition","./atn/Transition","./PredictionContext"],function(e,t,n){function y(e){this.atn=e}var r=e("./Utils").Set,i=e("./Utils").BitSet,s=e("./Token").Token,o=e("./atn/ATNConfig").ATNConfig,u=e("./IntervalSet").Interval,a=e("./IntervalSet").IntervalSet,f=e("./atn/ATNState").RuleStopState,l=e("./atn/Transition").RuleTransition,c=e("./atn/Transition").NotSetTransition,h=e("./atn/Transition").WildcardTransition,p=e("./atn/Transition").AbstractPredicateTransition,d=e("./PredictionContext"),v=d.predictionContextFromRuleContext,m=d.PredictionContext,g=d.SingletonPredictionContext;y.HIT_PRED=s.INVALID_TYPE,y.prototype.getDecisionLookahead=function(e){if(e===null)return null;var t=e.transitions.length,n=[];for(var s=0;s<t;s++){n[s]=new a;var o=new r,u=!1;this._LOOK(e.transition(s).target,null,m.EMPTY,n[s],o,new i,u,!1);if(n[s].length===0||n[s].contains(y.HIT_PRED))n[s]=null}return n},y.prototype.LOOK=function(e,t,n){var s=new a,o=!0;n=n||null;var u=n!==null?v(e.atn,n):null;return this._LOOK(e,t,u,s,new r,new i,o,!0),s},y.prototype._LOOK=function(e,t,n,r,i,u,a,d){var v=new o({state:e,alt:0,context:n},null);if(i.contains(v))return;i.add(v);if(e===t){if(n===null){r.addOne(s.EPSILON);return}if(n.isEmpty()&&d){r.addOne(s.EOF);return}}if(e instanceof f){if(n===null){r.addOne(s.EPSILON);return}if(n.isEmpty()&&d){r.addOne(s.EOF);return}if(n!==m.EMPTY){for(var b=0;b<n.length;b++){var w=this.atn.states[n.getReturnState(b)],E=u.contains(w.ruleIndex);try{u.remove(w.ruleIndex),this._LOOK(w,t,n.getParent(b),r,i,u,a,d)}finally{E&&u.add(w.ruleIndex)}}return}}for(var S=0;S<e.transitions.length;S++){var x=e.transitions[S];if(x.constructor===l){if(u.contains(x.target.ruleIndex))continue;var T=g.create(n,x.followState.stateNumber);try{u.add(x.target.ruleIndex),this._LOOK(x.target,t,T,r,i,u,a,d)}finally{u.remove(x.target.ruleIndex)}}else if(x instanceof p)a?this._LOOK(x.target,t,n,r,i,u,a,d):r.addOne(y.HIT_PRED);else if(x.isEpsilon)this._LOOK(x.target,t,n,r,i,u,a,d);else if(x.constructor===h)r.addRange(s.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);else{var N=x.label;N!==null&&(x instanceof c&&(N=N.complement(s.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),r.addSet(N))}}},t.LL1Analyzer=y}),r("atn/ATN",["require","exports","module","./../LL1Analyzer","./../IntervalSet","./../Token"],function(e,t,n){function s(e,t){return this.grammarType=e,this.maxTokenType=t,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[],this}var r=e("./../LL1Analyzer").LL1Analyzer,i=e("./../IntervalSet").IntervalSet;s.prototype.nextTokensInContext=function(e,t){var n=new r(this);return n.LOOK(e,null,t)},s.prototype.nextTokensNoContext=function(e){return e.nextTokenWithinRule!==null?e.nextTokenWithinRule:(e.nextTokenWithinRule=this.nextTokensInContext(e,null),e.nextTokenWithinRule.readOnly=!0,e.nextTokenWithinRule)},s.prototype.nextTokens=function(e,t){return t===undefined?this.nextTokensNoContext(e):this.nextTokensInContext(e,t)},s.prototype.addState=function(e){e!==null&&(e.atn=this,e.stateNumber=this.states.length),this.states.push(e)},s.prototype.removeState=function(e){this.states[e.stateNumber]=null},s.prototype.defineDecisionState=function(e){return this.decisionToState.push(e),e.decision=this.decisionToState.length-1,e.decision},s.prototype.getDecisionState=function(e){return this.decisionToState.length===0?null:this.decisionToState[e]};var o=e("./../Token").Token;s.prototype.getExpectedTokens=function(e,t){if(e<0||e>=this.states.length)throw"Invalid state number.";var n=this.states[e],r=this.nextTokens(n);if(!r.contains(o.EPSILON))return r;var s=new i;s.addSet(r),s.removeOne(o.EPSILON);while(t!==null&&t.invokingState>=0&&r.contains(o.EPSILON)){var u=this.states[t.invokingState],a=u.transitions[0];r=this.nextTokens(a.followState),s.addSet(r),s.removeOne(o.EPSILON),t=t.parentCtx}return r.contains(o.EPSILON)&&s.addOne(o.EOF),s},s.INVALID_ALT_NUMBER=0,t.ATN=s}),r("atn/ATNType",["require","exports","module"],function(e,t,n){function r(){}r.LEXER=0,r.PARSER=1,t.ATNType=r}),r("atn/ATNDeserializationOptions",["require","exports","module"],function(e,t,n){function r(e){return e===undefined&&(e=null),this.readOnly=!1,this.verifyATN=e===null?!0:e.verifyATN,this.generateRuleBypassTransitions=e===null?!1:e.generateRuleBypassTransitions,this}r.defaultOptions=new r,r.defaultOptions.readOnly=!0,t.ATNDeserializationOptions=r}),r("atn/LexerAction",["require","exports","module"],function(e,t,n){function r(){}function i(e){return this.actionType=e,this.isPositionDependent=!1,this}function s(){return i.call(this,r.SKIP),this}function o(e){return i.call(this,r.TYPE),this.type=e,this}function u(e){return i.call(this,r.PUSH_MODE),this.mode=e,this}function a(){return i.call(this,r.POP_MODE),this}function f(){return i.call(this,r.MORE),this}function l(e){return i.call(this,r.MODE),this.mode=e,this}function c(e,t){return i.call(this,r.CUSTOM),this.ruleIndex=e,this.actionIndex=t,this.isPositionDependent=!0,this}function h(e){return i.call(this,r.CHANNEL),this.channel=e,this}function p(e,t){return i.call(this,t.actionType),this.offset=e,this.action=t,this.isPositionDependent=!0,this}r.CHANNEL=0,r.CUSTOM=1,r.MODE=2,r.MORE=3,r.POP_MODE=4,r.PUSH_MODE=5,r.SKIP=6,r.TYPE=7,i.prototype.hashString=function(){return""+this.actionType},i.prototype.equals=function(e){return this===e},s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.INSTANCE=new s,s.prototype.execute=function(e){e.skip()},s.prototype.toString=function(){return"skip"},o.prototype=Object.create(i.prototype),o.prototype.constructor=o,o.prototype.execute=function(e){e.type=this.type},o.prototype.hashString=function(){return""+this.actionType+this.type},o.prototype.equals=function(e){return this===e?!0:e instanceof o?this.type===e.type:!1},o.prototype.toString=function(){return"type("+this.type+")"},u.prototype=Object.create(i.prototype),u.prototype.constructor=u,u.prototype.execute=function(e){e.pushMode(this.mode)},u.prototype.hashString=function(){return""+this.actionType+this.mode},u.prototype.equals=function(e){return this===e?!0:e instanceof u?this.mode===e.mode:!1},u.prototype.toString=function(){return"pushMode("+this.mode+")"},a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.INSTANCE=new a,a.prototype.execute=function(e){e.popMode()},a.prototype.toString=function(){return"popMode"},f.prototype=Object.create(i.prototype),f.prototype.constructor=f,f.INSTANCE=new f,f.prototype.execute=function(e){e.more()},f.prototype.toString=function(){return"more"},l.prototype=Object.create(i.prototype),l.prototype.constructor=l,l.prototype.execute=function(e){e.mode(this.mode)},l.prototype.hashString=function(){return""+this.actionType+this.mode},l.prototype.equals=function(e){return this===e?!0:e instanceof l?this.mode===e.mode:!1},l.prototype.toString=function(){return"mode("+this.mode+")"},c.prototype=Object.create(i.prototype),c.prototype.constructor=c,c.prototype.execute=function(e){e.action(null,this.ruleIndex,this.actionIndex)},c.prototype.hashString=function(){return""+this.actionType+this.ruleIndex+this.actionIndex},c.prototype.equals=function(e){return this===e?!0:e instanceof c?this.ruleIndex===e.ruleIndex&&this.actionIndex===e.actionIndex:!1},h.prototype=Object.create(i.prototype),h.prototype.constructor=h,h.prototype.execute=function(e){e._channel=this.channel},h.prototype.hashString=function(){return""+this.actionType+this.channel},h.prototype.equals=function(e){return this===e?!0:e instanceof h?this.channel===e.channel:!1},h.prototype.toString=function(){return"channel("+this.channel+")"},p.prototype=Object.create(i.prototype),p.prototype.constructor=p,p.prototype.execute=function(e){this.action.execute(e)},p.prototype.hashString=function(){return""+this.actionType+this.offset+this.action},p.prototype.equals=function(e){return this===e?!0:e instanceof p?this.offset===e.offset&&this.action===e.action:!1},t.LexerActionType=r,t.LexerSkipAction=s,t.LexerChannelAction=h,t.LexerCustomAction=c,t.LexerIndexedCustomAction=p,t.LexerMoreAction=f,t.LexerTypeAction=o,t.LexerPushModeAction=u,t.LexerPopModeAction=a,t.LexerModeAction=l}),r("atn/ATNDeserializer",["require","exports","module","./../Token","./ATN","./ATNType","./ATNState","./Transition","./../IntervalSet","./../IntervalSet","./ATNDeserializationOptions","./LexerAction"],function(e,t,n){function G(e,t){var n=[];return n[e-1]=t,n.map(function(e){return t})}function Y(e){if(e===undefined||e===null)e=B.defaultOptions;return this.deserializationOptions=e,this.stateFactories=null,this.actionFactories=null,this}function Z(){var e=[];for(var t=0;t<256;t++)e[t]=(t+256).toString(16).substr(1).toUpperCase();return e}var r=e("./../Token").Token,i=e("./ATN").ATN,s=e("./ATNType").ATNType,o=e("./ATNState"),u=o.ATNState,a=o.BasicState,f=o.DecisionState,l=o.BlockStartState,c=o.BlockEndState,h=o.LoopEndState,p=o.RuleStartState,d=o.RuleStopState,v=o.TokensStartState,m=o.PlusLoopbackState,g=o.StarLoopbackState,y=o.StarLoopEntryState,b=o.PlusBlockStartState,w=o.StarBlockStartState,E=o.BasicBlockStartState,S=e("./Transition"),x=S.Transition,T=S.AtomTransition,N=S.SetTransition,C=S.NotSetTransition,k=S.RuleTransition,L=S.RangeTransition,A=S.ActionTransition,O=S.EpsilonTransition,M=S.WildcardTransition,_=S.PredicateTransition,D=S.PrecedencePredicateTransition,P=e("./../IntervalSet").IntervalSet,H=e("./../IntervalSet").Interval,B=e("./ATNDeserializationOptions").ATNDeserializationOptions,j=e("./LexerAction"),F=j.LexerActionType,I=j.LexerSkipAction,q=j.LexerChannelAction,R=j.LexerCustomAction,U=j.LexerMoreAction,z=j.LexerTypeAction,W=j.LexerPushModeAction,X=j.LexerPopModeAction,V=j.LexerModeAction,$="AADB8D7E-AEEF-4415-AD2B-8204D6CF042E",J=[$],K=3,Q=$;Y.prototype.isFeatureSupported=function(e,t){var n=J.index(e);if(n<0)return!1;var r=J.index(t);return r>=n},Y.prototype.deserialize=function(e){this.reset(e),this.checkVersion(),this.checkUUID();var t=this.readATN();this.readStates(t),this.readRules(t),this.readModes(t);var n=this.readSets(t);return this.readEdges(t,n),this.readDecisions(t),this.readLexerActions(t),this.markPrecedenceDecisions(t),this.verifyATN(t),this.deserializationOptions.generateRuleBypassTransitions&&t.grammarType===s.PARSER&&(this.generateRuleBypassTransitions(t),this.verifyATN(t)),t},Y.prototype.reset=function(e){var t=function(e){var t=e.charCodeAt(0);return t>1?t-2:-1},n=e.split("").map(t);n[0]=e.charCodeAt(0),this.data=n,this.pos=0},Y.prototype.checkVersion=function(){var e=this.readInt();if(e!==K)throw"Could not deserialize ATN with version "+e+" (expected "+K+")."},Y.prototype.checkUUID=function(){var e=this.readUUID();if(J.indexOf(e)<0)throw"Could not deserialize ATN with UUID: "+e+" (expected "+Q+" or a legacy UUID).",e,Q;this.uuid=e},Y.prototype.readATN=function(){var e=this.readInt(),t=this.readInt();return new i(e,t)},Y.prototype.readStates=function(e){var t,n,r,i=[],s=[],o=this.readInt();for(var a=0;a<o;a++){var f=this.readInt();if(f===u.INVALID_TYPE){e.addState(null);continue}var c=this.readInt();c===65535&&(c=-1);var h=this.stateFactory(f,c);if(f===u.LOOP_END){var p=this.readInt();i.push([h,p])}else if(h instanceof l){var d=this.readInt();s.push([h,d])}e.addState(h)}for(t=0;t<i.length;t++)n=i[t],n[0].loopBackState=e.states[n[1]];for(t=0;t<s.length;t++)n=s[t],n[0].endState=e.states[n[1]];var v=this.readInt();for(t=0;t<v;t++)r=this.readInt(),e.states[r].nonGreedy=!0;var m=this.readInt();for(t=0;t<m;t++)r=this.readInt(),e.states[r].isPrecedenceRule=!0},Y.prototype.readRules=function(e){var t,n=this.readInt();e.grammarType===s.LEXER&&(e.ruleToTokenType=G(n,0)),e.ruleToStartState=G(n,0);for(t=0;t<n;t++){var i=this.readInt(),o=e.states[i];e.ruleToStartState[t]=o;if(e.grammarType===s.LEXER){var u=this.readInt();u===65535&&(u=r.EOF),e.ruleToTokenType[t]=u}}e.ruleToStopState=G(n,0);for(t=0;t<e.states.length;t++){var a=e.states[t];if(!(a instanceof d))continue;e.ruleToStopState[a.ruleIndex]=a,e.ruleToStartState[a.ruleIndex].stopState=a}},Y.prototype.readModes=function(e){var t=this.readInt();for(var n=0;n<t;n++){var r=this.readInt();e.modeToStartState.push(e.states[r])}},Y.prototype.readSets=function(e){var t=[],n=this.readInt();for(var r=0;r<n;r++){var i=new P;t.push(i);var s=this.readInt(),o=this.readInt();o!==0&&i.addOne(-1);for(var u=0;u<s;u++){var a=this.readInt(),f=this.readInt();i.addRange(a,f)}}return t},Y.prototype.readEdges=function(e,t){var n,r,i,s,o,u=this.readInt();for(n=0;n<u;n++){var a=this.readInt(),f=this.readInt(),c=this.readInt(),h=this.readInt(),p=this.readInt(),d=this.readInt();s=this.edgeFactory(e,c,a,f,h,p,d,t);var v=e.states[a];v.addTransition(s)}for(n=0;n<e.states.length;n++){i=e.states[n];for(r=0;r<i.transitions.length;r++){var w=i.transitions[r];if(!(w instanceof k))continue;var E=-1;e.ruleToStartState[w.target.ruleIndex].isPrecedenceRule&&w.precedence===0&&(E=w.target.ruleIndex),s=new O(w.followState,E),e.ruleToStopState[w.target.ruleIndex].addTransition(s)}}for(n=0;n<e.states.length;n++){i=e.states[n];if(i instanceof l){if(i.endState===null)throw"IllegalState";if(i.endState.startState!==null)throw"IllegalState";i.endState.startState=i}if(i instanceof m)for(r=0;r<i.transitions.length;r++)o=i.transitions[r].target,o instanceof b&&(o.loopBackState=i);else if(i instanceof g)for(r=0;r<i.transitions.length;r++)o=i.transitions[r].target,o instanceof y&&(o.loopBackState=i)}},Y.prototype.readDecisions=function(e){var t=this.readInt();for(var n=0;n<t;n++){var r=this.readInt(),i=e.states[r];e.decisionToState.push(i),i.decision=n}},Y.prototype.readLexerActions=function(e){if(e.grammarType===s.LEXER){var t=this.readInt();e.lexerActions=G(t,null);for(var n=0;n<t;n++){var r=this.readInt(),i=this.readInt();i===65535&&(i=-1);var o=this.readInt();o===65535&&(o=-1);var u=this.lexerActionFactory(r,i,o);e.lexerActions[n]=u}}},Y.prototype.generateRuleBypassTransitions=function(e){var t,n=e.ruleToStartState.length;for(t=0;t<n;t++)e.ruleToTokenType[t]=e.maxTokenType+t+1;for(t=0;t<n;t++)this.generateRuleBypassTransition(e,t)},Y.prototype.generateRuleBypassTransition=function(e,t){var n,r,i=new E;i.ruleIndex=t,e.addState(i);var s=new c;s.ruleIndex=t,e.addState(s),i.endState=s,e.defineDecisionState(i),s.startState=i;var o=null,u=null;if(e.ruleToStartState[t].isPrecedenceRule){u=null;for(n=0;n<e.states.length;n++){r=e.states[n];if(this.stateIsEndStateFor(r,t)){u=r,o=r.loopBackState.transitions[0];break}}if(o===null)throw"Couldn't identify final state of the precedence rule prefix section."}else u=e.ruleToStopState[t];for(n=0;n<e.states.length;n++){r=e.states[n];for(var f=0;f<r.transitions.length;f++){var l=r.transitions[f];if(l===o)continue;l.target===u&&(l.target=s)}}var h=e.ruleToStartState[t],p=h.transitions.length;while(p>0)i.addTransition(h.transitions[p-1]),h.transitions=h.transitions.slice(-1);e.ruleToStartState[t].addTransition(new O(i)),s.addTransition(new O(u));var d=new a;e.addState(d),d.addTransition(new T(s,e.ruleToTokenType[t])),i.addTransition(new O(d))},Y.prototype.stateIsEndStateFor=function(e,t){if(e.ruleIndex!==t)return null;if(e instanceof y){var n=e.transitions[e.transitions.length-1].target;return n instanceof h?n.epsilonOnlyTransitions&&n.transitions[0].target instanceof d?e:null:null}return null},Y.prototype.markPrecedenceDecisions=function(e){for(var t=0;t<e.states.length;t++){var n=e.states[t];if(!(n instanceof y))continue;if(e.ruleToStartState[n.ruleIndex].isPrecedenceRule){var r=n.transitions[n.transitions.length-1].target;r instanceof h&&r.epsilonOnlyTransitions&&r.transitions[0].target instanceof d&&(n.precedenceRuleDecision=!0)}}},Y.prototype.verifyATN=function(e){if(!this.deserializationOptions.verifyATN)return;for(var t=0;t<e.states.length;t++){var n=e.states[t];if(n===null)continue;this.checkCondition(n.epsilonOnlyTransitions||n.transitions.length<=1);if(n instanceof b)this.checkCondition(n.loopBackState!==null);else if(n instanceof y){this.checkCondition(n.loopBackState!==null),this.checkCondition(n.transitions.length===2);if(n.transitions[0].target instanceof w)this.checkCondition(n.transitions[1].target instanceof h),this.checkCondition(!n.nonGreedy);else{if(!(n.transitions[0].target instanceof h))throw"IllegalState";this.checkCondition(n.transitions[1].target instanceof w),this.checkCondition(n.nonGreedy)}}else n instanceof g?(this.checkCondition(n.transitions.length===1),this.checkCondition(n.transitions[0].target instanceof y)):n instanceof h?this.checkCondition(n.loopBackState!==null):n instanceof p?this.checkCondition(n.stopState!==null):n instanceof l?this.checkCondition(n.endState!==null):n instanceof c?this.checkCondition(n.startState!==null):n instanceof f?this.checkCondition(n.transitions.length<=1||n.decision>=0):this.checkCondition(n.transitions.length<=1||n instanceof d)}},Y.prototype.checkCondition=function(e,t){if(!e){if(t===undefined||t===null)t="IllegalState";throw t}},Y.prototype.readInt=function(){return this.data[this.pos++]},Y.prototype.readInt32=function(){var e=this.readInt(),t=this.readInt();return e|t<<16},Y.prototype.readLong=function(){var e=this.readInt32(),t=this.readInt32();return e&4294967295|t<<32};var et=Z();Y.prototype.readUUID=function(){var e=[];for(var t=7;t>=0;t--){var n=this.readInt();e[2*t+1]=n&255,e[2*t]=n>>8&255}return et[e[0]]+et[e[1]]+et[e[2]]+et[e[3]]+"-"+et[e[4]]+et[e[5]]+"-"+et[e[6]]+et[e[7]]+"-"+et[e[8]]+et[e[9]]+"-"+et[e[10]]+et[e[11]]+et[e[12]]+et[e[13]]+et[e[14]]+et[e[15]]},Y.prototype.edgeFactory=function(e,t,n,i,s,o,u,a){var f=e.states[i];switch(t){case x.EPSILON:return new O(f);case x.RANGE:return u!==0?new L(f,r.EOF,o):new L(f,s,o);case x.RULE:return new k(e.states[s],o,u,f);case x.PREDICATE:return new _(f,s,o,u!==0);case x.PRECEDENCE:return new D(f,s);case x.ATOM:return u!==0?new T(f,r.EOF):new T(f,s);case x.ACTION:return new A(f,s,o,u!==0);case x.SET:return new N(f,a[s]);case x.NOT_SET:return new C(f,a[s]);case x.WILDCARD:return new M(f);default:throw"The specified transition type: "+t+" is not valid."}},Y.prototype.stateFactory=function(e,t){if(this.stateFactories===null){var n=[];n[u.INVALID_TYPE]=null,n[u.BASIC]=function(){return new a},n[u.RULE_START]=function(){return new p},n[u.BLOCK_START]=function(){return new E},n[u.PLUS_BLOCK_START]=function(){return new b},n[u.STAR_BLOCK_START]=function(){return new w},n[u.TOKEN_START]=function(){return new v},n[u.RULE_STOP]=function(){return new d},n[u.BLOCK_END]=function(){return new c},n[u.STAR_LOOP_BACK]=function(){return new g},n[u.STAR_LOOP_ENTRY]=function(){return new y},n[u.PLUS_LOOP_BACK]=function(){return new m},n[u.LOOP_END]=function(){return new h},this.stateFactories=n}if(e>this.stateFactories.length||this.stateFactories[e]===null)throw"The specified state type "+e+" is not valid.";var r=this.stateFactories[e]();if(r!==null)return r.ruleIndex=t,r},Y.prototype.lexerActionFactory=function(e,t,n){if(this.actionFactories===null){var r=[];r[F.CHANNEL]=function(e,t){return new q(e)},r[F.CUSTOM]=function(e,t){return new R(e,t)},r[F.MODE]=function(e,t){return new V(e)},r[F.MORE]=function(e,t){return U.INSTANCE},r[F.POP_MODE]=function(e,t){return X.INSTANCE},r[F.PUSH_MODE]=function(e,t){return new W(e)},r[F.SKIP]=function(e,t){return I.INSTANCE},r[F.TYPE]=function(e,t){return new z(e)},this.actionFactories=r}if(e>this.actionFactories.length||this.actionFactories[e]===null)throw"The specified lexer action type "+e+" is not valid.";return this.actionFactories[e](t,n)},t.ATNDeserializer=Y}),r("error/ErrorListener",["require","exports","module"],function(e,t,n){function r(){return this}function i(){return r.call(this),this}function s(e){r.call(this);if(e===null)throw"delegates";return this.delegates=e,this}r.prototype.syntaxError=function(e,t,n,r,i,s){},r.prototype.reportAmbiguity=function(e,t,n,r,i,s,o){},r.prototype.reportAttemptingFullContext=function(e,t,n,r,i,s){},r.prototype.reportContextSensitivity=function(e,t,n,r,i,s){},i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.INSTANCE=new i,i.prototype.syntaxError=function(e,t,n,r,i,s){console.error("line "+n+":"+r+" "+i)},s.prototype=Object.create(r.prototype),s.prototype.constructor=s,s.prototype.syntaxError=function(e,t,n,r,i,s){this.delegates.map(function(o){o.syntaxError(e,t,n,r,i,s)})},s.prototype.reportAmbiguity=function(e,t,n,r,i,s,o){this.delegates.map(function(u){u.reportAmbiguity(e,t,n,r,i,s,o)})},s.prototype.reportAttemptingFullContext=function(e,t,n,r,i,s){this.delegates.map(function(o){o.reportAttemptingFullContext(e,t,n,r,i,s)})},s.prototype.reportContextSensitivity=function(e,t,n,r,i,s){this.delegates.map(function(o){o.reportContextSensitivity(e,t,n,r,i,s)})},t.ErrorListener=r,t.ConsoleErrorListener=i,t.ProxyErrorListener=s}),r("Recognizer",["require","exports","module","./Token","./error/ErrorListener","./error/ErrorListener"],function(e,t,n){function o(){return this._listeners=[i.INSTANCE],this._interp=null,this._stateNumber=-1,this}var r=e("./Token").Token,i=e("./error/ErrorListener").ConsoleErrorListener,s=e("./error/ErrorListener").ProxyErrorListener;o.tokenTypeMapCache={},o.ruleIndexMapCache={},o.prototype.checkVersion=function(e){var t="4.5.2";t!==e&&console.log("ANTLR runtime and generated code versions disagree: "+t+"!="+e)},o.prototype.addErrorListener=function(e){this._listeners.push(e)},o.prototype.removeErrorListeners=function(){this._listeners=[]},o.prototype.getTokenTypeMap=function(){var e=this.getTokenNames();if(e===null)throw"The current recognizer does not provide a list of token names.";var t=this.tokenTypeMapCache[e];return t===undefined&&(t=e.reduce(function(e,t,n){e[t]=n}),t.EOF=r.EOF,this.tokenTypeMapCache[e]=t),t},o.prototype.getRuleIndexMap=function(){var e=this.getRuleNames();if(e===null)throw"The current recognizer does not provide a list of rule names.";var t=this.ruleIndexMapCache[e];return t===undefined&&(t=e.reduce(function(e,t,n){e[t]=n}),this.ruleIndexMapCache[e]=t),t},o.prototype.getTokenType=function(e){var t=this.getTokenTypeMap()[e];return t!==undefined?t:r.INVALID_TYPE},o.prototype.getErrorHeader=function(e){var t=e.getOffendingToken().line,n=e.getOffendingToken().column;return"line "+t+":"+n},o.prototype.getTokenErrorDisplay=function(e){if(e===null)return"<no token>";var t=e.text;return t===null&&(e.type===r.EOF?t="<EOF>":t="<"+e.type+">"),t=t.replace("\n","\\n").replace("\r","\\r").replace("	","\\t"),"'"+t+"'"},o.prototype.getErrorListenerDispatch=function(){return new s(this._listeners)},o.prototype.sempred=function(e,t,n){return!0},o.prototype.precpred=function(e,t){return!0},Object.defineProperty(o.prototype,"state",{get:function(){return this._stateNumber},set:function(e){this._stateNumber=e}}),t.Recognizer=o}),r("CommonTokenFactory",["require","exports","module","./Token"],function(e,t,n){function i(){return this}function s(e){return i.call(this),this.copyText=e===undefined?!1:e,this}var r=e("./Token").CommonToken;s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.DEFAULT=new s,s.prototype.create=function(e,t,n,i,s,o,u,a){var f=new r(e,t,i,s,o);return f.line=u,f.column=a,n!==null?f.text=n:this.copyText&&e[1]!==null&&(f.text=e[1].getText(s,o)),f},s.prototype.createThin=function(e,t){var n=new r(null,e);return n.text=t,n},t.CommonTokenFactory=s}),r("error/Errors",["require","exports","module","./../atn/Transition"],function(e,t,n){function i(e){Error.call(this);if(!Error.captureStackTrace)var t=(new Error).stack;else Error.captureStackTrace(this,i);return this.message=e.message,this.recognizer=e.recognizer,this.input=e.input,this.ctx=e.ctx,this.offendingToken=null,this.offendingState=-1,this.recognizer!==null&&(this.offendingState=this.recognizer.state),this}function s(e,t,n,r){return i.call(this,{message:"",recognizer:e,input:t,ctx:null}),this.startIndex=n,this.deadEndConfigs=r,this}function o(e,t,n,r,s,o){o=o||e._ctx,r=r||e.getCurrentToken(),n=n||e.getCurrentToken(),t=t||e.getInputStream(),i.call(this,{message:"",recognizer:e,input:t,ctx:o}),this.deadEndConfigs=s,this.startToken=n,this.offendingToken=r}function u(e){i.call(this,{message:"",recognizer:e,input:e.getInputStream(),ctx:e._ctx}),this.offendingToken=e.getCurrentToken()}function a(e,t,n){i.call(this,{message:this.formatMessage(t,n||null),recognizer:e,input:e.getInputStream(),ctx:e._ctx});var s=e._interp.atn.states[e.state],o=s.transitions[0];return o instanceof r?(this.ruleIndex=o.ruleIndex,this.predicateIndex=o.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=t,this.offendingToken=e.getCurrentToken(),this}function f(){return Error.call(this),Error.captureStackTrace(this,f),this}var r=e("./../atn/Transition").PredicateTransition;i.prototype=Object.create(Error.prototype),i.prototype.constructor=i,i.prototype.getExpectedTokens=function(){return this.recognizer!==null?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null},i.prototype.toString=function(){return this.message},s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.prototype.toString=function(){var e="";return this.startIndex>=0&&this.startIndex<this.input.size&&(e=this.input.getText((this.startIndex,this.startIndex))),"LexerNoViableAltException"+e},o.prototype=Object.create(i.prototype),o.prototype.constructor=o,u.prototype=Object.create(i.prototype),u.prototype.constructor=u,a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.prototype.formatMessage=function(e,t){return t!==null?t:"failed predicate: {"+e+"}?"},f.prototype=Object.create(Error.prototype),f.prototype.constructor=f,t.RecognitionException=i,t.NoViableAltException=o,t.LexerNoViableAltException=s,t.InputMismatchException=u,t.FailedPredicateException=a}),r("Lexer",["require","exports","module","./Token","./Recognizer","./CommonTokenFactory","./error/Errors"],function(e,t,n){function u(){return this}function a(e){return i.call(this),this._input=e,this._factory=s.DEFAULT,this._tokenFactorySourcePair=[this,e],this._interp=null,this._token=null,this._tokenStartCharIndex=-1,this._tokenStartLine=-1,this._tokenStartColumn=-1,this._hitEOF=!1,this._channel=r.DEFAULT_CHANNEL,this._type=r.INVALID_TYPE,this._modeStack=[],this._mode=a.DEFAULT_MODE,this._text=null,this}var r=e("./Token").Token,i=e("./Recognizer").Recognizer,s=e("./CommonTokenFactory").CommonTokenFactory,o=e("./error/Errors").LexerNoViableAltException;a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.DEFAULT_MODE=0,a.MORE=-2,a.SKIP=-3,a.DEFAULT_TOKEN_CHANNEL=r.DEFAULT_CHANNEL,a.HIDDEN=r.HIDDEN_CHANNEL,a.MIN_CHAR_VALUE="\0",a.MAX_CHAR_VALUE="￾",a.prototype.reset=function(){this._input!==null&&this._input.seek(0),this._token=null,this._type=r.INVALID_TYPE,this._channel=r.DEFAULT_CHANNEL,this._tokenStartCharIndex=-1,this._tokenStartColumn=-1,this._tokenStartLine=-1,this._text=null,this._hitEOF=!1,this._mode=a.DEFAULT_MODE,this._modeStack=[],this._interp.reset()},a.prototype.nextToken=function(){if(this._input===null)throw"nextToken requires a non-null input stream.";var e=this._input.mark();try{for(;;){if(this._hitEOF)return this.emitEOF(),this._token;this._token=null,this._channel=r.DEFAULT_CHANNEL,this._tokenStartCharIndex=this._input.index,this._tokenStartColumn=this._interp.column,this._tokenStartLine=this._interp.line,this._text=null;var t=!1;for(;;){this._type=r.INVALID_TYPE;var n=a.SKIP;try{n=this._interp.match(this._input,this._mode)}catch(i){this.notifyListeners(i),this.recover(i)}this._input.LA(1)===r.EOF&&(this._hitEOF=!0),this._type===r.INVALID_TYPE&&(this._type=n);if(this._type===a.SKIP){t=!0;break}if(this._type!==a.MORE)break}if(t)continue;return this._token===null&&this.emit(),this._token}}finally{this._input.release(e)}},a.prototype.skip=function(){this._type=a.SKIP},a.prototype.more=function(){this._type=a.MORE},a.prototype.mode=function(e){this._mode=e},a.prototype.pushMode=function(e){this._interp.debug&&console.log("pushMode "+e),this._modeStack.push(this._mode),this.mode(e)},a.prototype.popMode=function(){if(this._modeStack.length===0)throw"Empty Stack";return this._interp.debug&&console.log("popMode back to "+this._modeStack.slice(0,-1)),this.mode(this._modeStack.pop()),this._mode},Object.defineProperty(a.prototype,"inputStream",{get:function(){return this._input},set:function(e){this._input=null,this._tokenFactorySourcePair=[this,this._input],this.reset(),this._input=e,this._tokenFactorySourcePair=[this,this._input]}}),Object.defineProperty(a.prototype,"sourceName",{get:function(){return this._input.sourceName}}),a.prototype.emitToken=function(e){this._token=e},a.prototype.emit=function(){var e=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);return this.emitToken(e),e},a.prototype.emitEOF=function(){var e=this.column,t=this.line,n=this._factory.create(this._tokenFactorySourcePair,r.EOF,null,r.DEFAULT_CHANNEL,this._input.index,this._input.index-1,t,e);return this.emitToken(n),n},Object.defineProperty(a.prototype,"type",{get:function(){return this.type},set:function(e){this._type=e}}),Object.defineProperty(a.prototype,"line",{get:function(){return this._interp.line},set:function(e){this._interp.line=e}}),Object.defineProperty(a.prototype,"column",{get:function(){return this._interp.column},set:function(e){this._interp.column=e}}),a.prototype.getCharIndex=function(){return this._input.index},Object.defineProperty(a.prototype,"text",{get:function(){return this._text!==null?this._text:this._interp.getText(this._input)},set:function(e){this._text=e}}),a.prototype.getAllTokens=function(){var e=[],t=this.nextToken();while(t.type!==r.EOF)e.push(t),t=this.nextToken();return e},a.prototype.notifyListeners=function(e){var t=this._tokenStartCharIndex,n=this._input.index,r=this._input.getText(t,n),i="token recognition error at: '"+this.getErrorDisplay(r)+"'",s=this.getErrorListenerDispatch();s.syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,i,e)},a.prototype.getErrorDisplay=function(e){var t=[];for(var n=0;n<e.length;n++)t.push(e[n]);return t.join("")},a.prototype.getErrorDisplayForChar=function(e){return e.charCodeAt(0)===r.EOF?"<EOF>":e==="\n"?"\\n":e==="	"?"\\t":e==="\r"?"\\r":e},a.prototype.getCharErrorDisplay=function(e){return"'"+this.getErrorDisplayForChar(e)+"'"},a.prototype.recover=function(e){this._input.LA(1)!==r.EOF&&(e instanceof o?this._interp.consume(this._input):this._input.consume())},t.Lexer=a}),r("atn/ATNConfigSet",["require","exports","module","./ATN","./../Utils","./SemanticContext","./../PredictionContext"],function(e,t,n){function a(e){return e.shortHashString()}function f(e,t){return e===t?!0:e===null||t===null?!1:e.state.stateNumber===t.state.stateNumber&&e.alt===t.alt&&e.semanticContext.equals(t.semanticContext)}function l(e){return this.configLookup=new s(a,f),this.fullCtx=e===undefined?!0:e,this.readOnly=!1,this.configs=[],this.uniqueAlt=0,this.conflictingAlts=null,this.hasSemanticContext=!1,this.dipsIntoOuterContext=!1,this.cachedHashString="-1",this}function c(){return l.call(this),this.configLookup=new s,this}var r=e("./ATN").ATN,i=e("./../Utils"),s=i.Set,o=e("./SemanticContext").SemanticContext,u=e("./../PredictionContext").merge;l.prototype.add=function(e,t){t===undefined&&(t=null);if(this.readOnly)throw"This set is readonly";e.semanticContext!==o.NONE&&(this.hasSemanticContext=!0),e.reachesIntoOuterContext>0&&(this.dipsIntoOuterContext=!0);var n=this.configLookup.add(e);if(n===e)return this.cachedHashString="-1",this.configs.push(e),!0;var r=!this.fullCtx,i=u(n.context,e.context,r,t);return n.reachesIntoOuterContext=Math.max(n.reachesIntoOuterContext,e.reachesIntoOuterContext),e.precedenceFilterSuppressed&&(n.precedenceFilterSuppressed=!0),n.context=i,!0},l.prototype.getStates=function(){var e=new s;for(var t=0;t<this.configs.length;t++)e.add(this.configs[t].state);return e},l.prototype.getPredicates=function(){var e=[];for(var t=0;t<this.configs.length;t++){var n=this.configs[t].semanticContext;n!==o.NONE&&e.push(n.semanticContext)}return e},Object.defineProperty(l.prototype,"items",{get:function(){return this.configs}}),l.prototype.optimizeConfigs=function(e){if(this.readOnly)throw"This set is readonly";if(this.configLookup.length===0)return;for(var t=0;t<this.configs.length;t++){var n=this.configs[t];n.context=e.getCachedContext(n.context)}},l.prototype.addAll=function(e){for(var t=0;t<e.length;t++)this.add(e[t]);return!1},l.prototype.equals=function(e){return this===e?!0:e instanceof l?this.configs!==null&&this.configs.equals(e.configs)&&this.fullCtx===e.fullCtx&&this.uniqueAlt===e.uniqueAlt&&this.conflictingAlts===e.conflictingAlts&&this.hasSemanticContext===e.hasSemanticContext&&this.dipsIntoOuterContext===e.dipsIntoOuterContext:!1},l.prototype.hashString=function(){return this.readOnly?(this.cachedHashString==="-1"&&(this.cachedHashString=this.hashConfigs()),this.cachedHashString):this.hashConfigs()},l.prototype.hashConfigs=function(){var e="";return this.configs.map(function(t){e+=t.toString()}),e},Object.defineProperty(l.prototype,"length",{get:function(){return this.configs.length}}),l.prototype.isEmpty=function(){return this.configs.length===0},l.prototype.contains=function(e){if(this.configLookup===null)throw"This method is not implemented for readonly sets.";return this.configLookup.contains(e)},l.prototype.containsFast=function(e){if(this.configLookup===null)throw"This method is not implemented for readonly sets.";return this.configLookup.containsFast(e)},l.prototype.clear=function(){if(this.readOnly)throw"This set is readonly";this.configs=[],this.cachedHashString="-1",this.configLookup=new s},l.prototype.setReadonly=function(e){this.readOnly=e,e&&(this.configLookup=null)},l.prototype.toString=function(){return i.arrayToString(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==r.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(this.conflictingAlts!==null?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"")},c.prototype=Object.create(l.prototype),c.prototype.constructor=c,t.ATNConfigSet=l,t.OrderedATNConfigSet=c}),r("dfa/DFAState",["require","exports","module","./../atn/ATNConfigSet","./../Utils"],function(e,t,n){function o(e,t){return this.alt=t,this.pred=e,this}function u(e,t){return e===null&&(e=-1),t===null&&(t=new r),this.stateNumber=e,this.configs=t,this.edges=null,this.isAcceptState=!1,this.prediction=0,this.lexerActionExecutor=null,this.requiresFullContext=!1,this.predicates=null,this}var r=e("./../atn/ATNConfigSet").ATNConfigSet,i=e("./../Utils"),s=i.Set;o.prototype.toString=function(){return"("+this.pred+", "+this.alt+")"},u.prototype.getAltSet=function(){var e=new s;if(this.configs!==null)for(var t=0;t<this.configs.length;t++){var n=this.configs[t];e.add(n.alt)}return e.length===0?null:e},u.prototype.equals=function(e){return this===e?!0:e instanceof u?this.configs.equals(e.configs):!1},u.prototype.toString=function(){return""+this.stateNumber+":"+this.hashString()},u.prototype.hashString=function(){return""+this.configs+(this.isAcceptState?"=>"+(this.predicates!==null?this.predicates:this.prediction):"")},t.DFAState=u,t.PredPrediction=o}),r("atn/ATNSimulator",["require","exports","module","./../dfa/DFAState","./ATNConfigSet","./../PredictionContext"],function(e,t,n){function o(e,t){return this.atn=e,this.sharedContextCache=t,this}var r=e("./../dfa/DFAState").DFAState,i=e("./ATNConfigSet").ATNConfigSet,s=e("./../PredictionContext").getCachedPredictionContext;o.ERROR=new r(2147483647,new i),o.prototype.getCachedContext=function(e){if(this.sharedContextCache===null)return e;var t={};return s(e,this.sharedContextCache,t)},t.ATNSimulator=o}),r("atn/LexerActionExecutor",["require","exports","module","./LexerAction"],function(e,t,n){function i(e){return this.lexerActions=e===null?[]:e,this._hashString=e.toString(),this}var r=e("./LexerAction").LexerIndexedCustomAction;i.append=function(e,t){if(e===null)return new i([t]);var n=e.lexerActions.concat([t]);return new i(n)},i.prototype.fixOffsetBeforeMatch=function(e){var t=null;for(var n=0;n<this.lexerActions.length;n++)this.lexerActions[n].isPositionDependent&&!(this.lexerActions[n]instanceof r)&&(t===null&&(t=this.lexerActions.concat([])),t[n]=new r(e,this.lexerActions[n]));return t===null?this:new i(t)},i.prototype.execute=function(e,t,n){var i=!1,s=t.index;try{for(var o=0;o<this.lexerActions.length;o++){var u=this.lexerActions[o];if(u instanceof r){var a=u.offset;t.seek(n+a),u=u.action,i=n+a!==s}else u.isPositionDependent&&(t.seek(s),i=!1);u.execute(e)}}finally{i&&t.seek(s)}},i.prototype.hashString=function(){return this._hashString},i.prototype.equals=function(e){return this===e?!0:e instanceof i?this._hashString===e._hashString&&this.lexerActions===e.lexerActions:!1},t.LexerActionExecutor=i}),r("atn/LexerATNSimulator",["require","exports","module","./../Token","./../Lexer","./ATN","./ATNSimulator","./../dfa/DFAState","./ATNConfigSet","./ATNConfigSet","./../PredictionContext","./../PredictionContext","./ATNState","./ATNConfig","./Transition","./LexerActionExecutor","./../error/Errors"],function(e,t,n){function g(e){e.index=-1,e.line=0,e.column=-1,e.dfaState=null}function y(){return g(this),this}function b(e,t,n,r){return o.call(this,t,r),this.decisionToDFA=n,this.recog=e,this.startIndex=-1,this.line=1,this.column=0,this.mode=i.DEFAULT_MODE,this.prevAccept=new y,this}var r=e("./../Token").Token,i=e("./../Lexer").Lexer,s=e("./ATN").ATN,o=e("./ATNSimulator").ATNSimulator,u=e("./../dfa/DFAState").DFAState,a=e("./ATNConfigSet").ATNConfigSet,f=e("./ATNConfigSet").OrderedATNConfigSet,l=e("./../PredictionContext").PredictionContext,c=e("./../PredictionContext").SingletonPredictionContext,h=e("./ATNState").RuleStopState,p=e("./ATNConfig").LexerATNConfig,d=e("./Transition").Transition,v=e("./LexerActionExecutor").LexerActionExecutor,m=e("./../error/Errors").LexerNoViableAltException;y.prototype.reset=function(){g(this)},b.prototype=Object.create(o.prototype),b.prototype.constructor=b,b.debug=!1,b.dfa_debug=!1,b.MIN_DFA_EDGE=0,b.MAX_DFA_EDGE=127,b.match_calls=0,b.prototype.copyState=function(e){this.column=e.column,this.line=e.line,this.mode=e.mode,this.startIndex=e.startIndex},b.prototype.match=function(e,t){this.match_calls+=1,this.mode=t;var n=e.mark();try{this.startIndex=e.index,this.prevAccept.reset();var r=this.decisionToDFA[t];return r.s0===null?this.matchATN(e):this.execATN(e,r.s0)}finally{e.release(n)}},b.prototype.reset=function(){this.prevAccept.reset(),this.startIndex=-1,this.line=1,this.column=0,this.mode=i.DEFAULT_MODE},b.prototype.matchATN=function(e){var t=this.atn.modeToStartState[this.mode];this.debug&&console.log("matchATN mode "+this.mode+" start: "+t);var n=this.mode,r=this.computeStartState(e,t),i=r.hasSemanticContext;r.hasSemanticContext=!1;var s=this.addDFAState(r);i||(this.decisionToDFA[this.mode].s0=s);var o=this.execATN(e,s);return this.debug&&console.log("DFA after matchATN: "+this.decisionToDFA[n].toLexerString()),o},b.prototype.execATN=function(e,t){this.debug&&console.log("start state closure="+t.configs),t.isAcceptState&&this.captureSimState(this.prevAccept,e,t);var n=e.LA(1),i=t;for(;;){this.debug&&console.log("execATN loop starting closure: "+i.configs);var s=this.getExistingTargetState(i,n);s===null&&(s=this.computeTargetState(e,i,n));if(s===o.ERROR)break;n!==r.EOF&&this.consume(e);if(s.isAcceptState){this.captureSimState(this.prevAccept,e,s);if(n===r.EOF)break}n=e.LA(1),i=s}return this.failOrAccept(this.prevAccept,e,i.configs,n)},b.prototype.getExistingTargetState=function(e,t){if(e.edges===null||t<b.MIN_DFA_EDGE||t>b.MAX_DFA_EDGE)return null;var n=e.edges[t-b.MIN_DFA_EDGE];return n===undefined&&(n=null),this.debug&&n!==null&&console.log("reuse state "+e.stateNumber+" edge to "+n.stateNumber),n},b.prototype.computeTargetState=function(e,t,n){var r=new f;return this.getReachableConfigSet(e,t.configs,r,n),r.items.length===0?(r.hasSemanticContext||this.addDFAEdge(t,n,o.ERROR),o.ERROR):this.addDFAEdge(t,n,null,r)},b.prototype.failOrAccept=function(e,t,n,i){if(this.prevAccept.dfaState!==null){var s=e.dfaState.lexerActionExecutor;return this.accept(t,s,this.startIndex,e.index,e.line,e.column),e.dfaState.prediction}if(i===r.EOF&&t.index===this.startIndex)return r.EOF;throw new m(this.recog,t,this.startIndex,n)},b.prototype.getReachableConfigSet=function(e,t,n,i){var o=s.INVALID_ALT_NUMBER;for(var u=0;u<t.items.length;u++){var a=t.items[u],f=a.alt===o;if(f&&a.passedThroughNonGreedyDecision)continue;this.debug&&console.log("testing %s at %s\n",this.getTokenName(i),a.toString(this.recog,!0));for(var l=0;l<a.state.transitions.length;l++){var c=a.state.transitions[l],h=this.getReachableTarget(c,i);if(h!==null){var d=a.lexerActionExecutor;d!==null&&(d=d.fixOffsetBeforeMatch(e.index-this.startIndex));var v=i===r.EOF,m=new p({state:h,lexerActionExecutor:d},a);this.closure(e,m,n,f,!0,v)&&(o=a.alt)}}}},b.prototype.accept=function(e,t,n,r,i,s){this.debug&&console.log("ACTION %s\n",t),e.seek(r),this.line=i,this.column=s,t!==null&&this.recog!==null&&t.execute(this.recog,e,n)},b.prototype.getReachableTarget=function(e,t){return e.matches(t,0,65534)?e.target:null},b.prototype.computeStartState=function(e,t){var n=l.EMPTY,r=new f;for(var i=0;i<t.transitions.length;i++){var s=t.transitions[i].target,o=new p({state:s,alt:i+1,context:n},null);this.closure(e,o,r,!1,!1,!1)}return r},b.prototype.closure=function(e,t,n,r,i,s){var o=null;this.debug&&console.log("closure("+t.toString(this.recog,!0)+")");if(t.state instanceof h){this.debug&&(this.recog!==null?console.log("closure at %s rule stop %s\n",this.recog.getRuleNames()[t.state.ruleIndex],t):console.log("closure at rule stop %s\n",t));if(t.context===null||t.context.hasEmptyPath()){if(t.context===null||t.context.isEmpty())return n.add(t),!0;n.add(new p({state:t.state,context:l.EMPTY},t)),r=!0}if(t.context!==null&&!t.context.isEmpty())for(var u=0;u<t.context.length;u++)if(t.context.getReturnState(u)!==l.EMPTY_RETURN_STATE){var a=t.context.getParent(u),f=this.atn.states[t.context.getReturnState(u)];o=new p({state:f,context:a},t),r=this.closure(e,o,n,r,i,s)}return r}t.state.epsilonOnlyTransitions||(!r||!t.passedThroughNonGreedyDecision)&&n.add(t);for(var c=0;c<t.state.transitions.length;c++){var d=t.state.transitions[c];o=this.getEpsilonTarget(e,t,d,n,i,s),o!==null&&(r=this.closure(e,o,n,r,i,s))}return r},b.prototype.getEpsilonTarget=function(e,t,n,i,s,o){var u=null;if(n.serializationType===d.RULE){var a=c.create(t.context,n.followState.stateNumber);u=new p({state:n.target,context:a},t)}else{if(n.serializationType===d.PRECEDENCE)throw"Precedence predicates are not supported in lexers.";if(n.serializationType===d.PREDICATE)this.debug&&console.log("EVAL rule "+n.ruleIndex+":"+n.predIndex),i.hasSemanticContext=!0,this.evaluatePredicate(e,n.ruleIndex,n.predIndex,s)&&(u=new p({state:n.target},t));else if(n.serializationType===d.ACTION)if(t.context===null||t.context.hasEmptyPath()){var f=v.append(t.lexerActionExecutor,this.atn.lexerActions[n.actionIndex]);u=new p({state:n.target,lexerActionExecutor:f},t)}else u=new p({state:n.target},t);else n.serializationType===d.EPSILON?u=new p({state:n.target},t):(n.serializationType===d.ATOM||n.serializationType===d.RANGE||n.serializationType===d.SET)&&o&&n.matches(r.EOF,0,65535)&&(u=new p({state:n.target},t))}return u},b.prototype.evaluatePredicate=function(e,t,n,r){if(this.recog===null)return!0;if(!r)return this.recog.sempred(null,t,n);var i=this.column,s=this.line,o=e.index,u=e.mark();try{return this.consume(e),this.recog.sempred(null,t,n)}finally{this.column=i,this.line=s,e.seek(o),e.release(u)}},b.prototype.captureSimState=function(e,t,n){e.index=t.index,e.line=this.line,e.column=this.column,e.dfaState=n},b.prototype.addDFAEdge=function(e,t,n,r){n===undefined&&(n=null),r===undefined&&(r=null);if(n===null&&r!==null){var i=r.hasSemanticContext;r.hasSemanticContext=!1,n=this.addDFAState(r);if(i)return n}return t<b.MIN_DFA_EDGE||t>b.MAX_DFA_EDGE?n:(this.debug&&console.log("EDGE "+e+" -> "+n+" upon "+t),e.edges===null&&(e.edges=[]),e.edges[t-b.MIN_DFA_EDGE]=n,n)},b.prototype.addDFAState=function(e){var t=new u(null,e),n=null;for(var r=0;r<e.items.length;r++){var i=e.items[r];if(i.state instanceof h){n=i;break}}n!==null&&(t.isAcceptState=!0,t.lexerActionExecutor=n.lexerActionExecutor,t.prediction=this.atn.ruleToTokenType[n.state.ruleIndex]);var s=t.hashString(),o=this.decisionToDFA[this.mode],a=o.states[s]||null;if(a!==null)return a;var f=t;return f.stateNumber=o.states.length,e.setReadonly(!0),f.configs=e,o.states[s]=f,f},b.prototype.getDFA=function(e){return this.decisionToDFA[e]},b.prototype.getText=function(e){return e.getText(this.startIndex,e.index-1)},b.prototype.consume=function(e){var t=e.LA(1);t==="\n".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,e.consume()},b.prototype.getTokenName=function(e){return e===-1?"EOF":"'"+String.fromCharCode(e)+"'"},t.LexerATNSimulator=b}),r("atn/PredictionMode",["require","exports","module","./../Utils","./../Utils","./../Utils","./ATN","./ATNState","./ATNConfigSet","./ATNConfig","./SemanticContext"],function(e,t,n){function c(){return this}var r=e("./../Utils").Set,i=e("./../Utils").BitSet,s=e("./../Utils").AltDict,o=e("./ATN").ATN,u=e("./ATNState").RuleStopState,a=e("./ATNConfigSet").ATNConfigSet,f=e("./ATNConfig").ATNConfig,l=e("./SemanticContext").SemanticContext;c.SLL=0,c.LL=1,c.LL_EXACT_AMBIG_DETECTION=2,c.hasSLLConflictTerminatingPrediction=function(e,t){if(c.allConfigsInRuleStopStates(t))return!0;if(e===c.SLL&&t.hasSemanticContext){var n=new a;for(var r=0;r<t.items.length;r++){var i=t.items[r];i=new f({semanticContext:l.NONE},i),n.add(i)}t=n}var s=c.getConflictingAltSubsets(t);return c.hasConflictingAltSet(s)&&!c.hasStateAssociatedWithOneAlt(t)},c.hasConfigInRuleStopState=function(e){for(var t=0;t<e.items.length;t++){var n=e.items[t];if(n.state instanceof u)return!0}return!1},c.allConfigsInRuleStopStates=function(e){for(var t=0;t<e.items.length;t++){var n=e.items[t];if(!(n.state instanceof u))return!1}return!0},c.resolvesToJustOneViableAlt=function(e){return c.getSingleViableAlt(e)},c.allSubsetsConflict=function(e){return!c.hasNonConflictingAltSet(e)},c.hasNonConflictingAltSet=function(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.length===1)return!0}return!1},c.hasConflictingAltSet=function(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.length>1)return!0}return!1},c.allSubsetsEqual=function(e){var t=null;for(var n=0;n<e.length;n++){var r=e[n];if(t===null)t=r;else if(r!==t)return!1}return!0},c.getUniqueAlt=function(e){var t=c.getAlts(e);return t.length===1?t.minValue():o.INVALID_ALT_NUMBER},c.getAlts=function(e){var t=new i;return e.map(function(e){t.or(e)}),t},c.getConflictingAltSubsets=function(e){var t={};for(var n=0;n<e.items.length;n++){var r=e.items[n],s="key_"+r.state.stateNumber+"/"+r.context,o=t[s]||null;o===null&&(o=new i,t[s]=o),o.add(r.alt)}var u=[];for(var a in t){if(a.indexOf("key_")!==0)continue;u.push(t[a])}return u},c.getStateToAltMap=function(e){var t=new s;return e.items.map(function(e){var n=t.get(e.state);n===null&&(n=new i,t.put(e.state,n)),n.add(e.alt)}),t},c.hasStateAssociatedWithOneAlt=function(e){var t=c.getStateToAltMap(e).values();for(var n=0;n<t.length;n++)if(t[n].length===1)return!0;return!1},c.getSingleViableAlt=function(e){var t=null;for(var n=0;n<e.length;n++){var r=e[n],i=r.minValue();if(t===null)t=i;else if(t!==i)return o.INVALID_ALT_NUMBER}return t},t.PredictionMode=c}),r("ParserRuleContext",["require","exports","module","./RuleContext","./tree/Tree","./IntervalSet"],function(e,t,n){function l(e,t){e=e||null,t=t||null,r.call(this,e,t),this.ruleIndex=-1,this.children=null,this.start=null,this.stop=null,this.exception=null}function c(e,t,n){return l.call(e,t),this.ruleIndex=n,this}var r=e("./RuleContext").RuleContext,i=e("./tree/Tree"),s=i.INVALID_INTERVAL,o=i.TerminalNode,u=i.TerminalNodeImpl,a=i.ErrorNodeImpl,f=e("./IntervalSet").Interval;l.prototype=Object.create(r.prototype),l.prototype.constructor=l,l.prototype.copyFrom=function(e){this.parentCtx=e.parentCtx,this.invokingState=e.invokingState,this.children=null,this.start=e.start,this.stop=e.stop},l.prototype.enterRule=function(e){},l.prototype.exitRule=function(e){},l.prototype.addChild=function(e){return this.children===null&&(this.children=[]),this.children.push(e),e},l.prototype.removeLastChild=function(){this.children!==null&&this.children.pop()},l.prototype.addTokenNode=function(e){var t=new u(e);return this.addChild(t),t.parentCtx=this,t},l.prototype.addErrorNode=function(e){var t=new a(e);return this.addChild(t),t.parentCtx=this,t},l.prototype.getChild=function(e,t){t=t||null;if(t===null)return this.children.length>=e?this.children[e]:null;for(var n=0;n<this.children.length;n++){var r=this.children[n];if(r instanceof t){if(e===0)return r;e-=1}}return null},l.prototype.getToken=function(e,t){for(var n=0;n<this.children.length;n++){var r=this.children[n];if(r instanceof o&&r.symbol.type===e){if(t===0)return r;t-=1}}return null},l.prototype.getTokens=function(e){if(this.children===null)return[];var t=[];for(var n=0;n<this.children.length;n++){var r=this.children[n];r instanceof o&&r.symbol.type===e&&t.push(r)}return t},l.prototype.getTypedRuleContext=function(e,t){return this.getChild(t,e)},l.prototype.getTypedRuleContexts=function(e){if(this.children===null)return[];var t=[];for(var n=0;n<this.children.length;n++){var r=this.children[n];r instanceof e&&t.push(r)}return t},l.prototype.getChildCount=function(){return this.children===null?0:this.children.length},l.prototype.getSourceInterval=function(){return this.start===null||this.stop===null?s:new f(this.start.tokenIndex,this.stop.tokenIndex)},r.EMPTY=new l,c.prototype=Object.create(l.prototype),c.prototype.constructor=c,t.ParserRuleContext=l}),r("atn/ParserATNSimulator",["require","exports","module","./../Utils","./ATN","./ATNConfig","./ATNConfigSet","./../Token","./../dfa/DFAState","./../dfa/DFAState","./ATNSimulator","./PredictionMode","./../RuleContext","./../ParserRuleContext","./SemanticContext","./ATNState","./ATNState","./../PredictionContext","./../IntervalSet","./Transition","./../error/Errors","./../PredictionContext","./../PredictionContext"],function(e,t,n){function _(e,t,n,r){return d.call(this,t,r),this.parser=e,this.decisionToDFA=n,this.predictionMode=v.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this}var r=e("./../Utils"),i=r.Set,s=r.BitSet,o=r.DoubleDict,u=e("./ATN").ATN,a=e("./ATNConfig").ATNConfig,f=e("./ATNConfigSet").ATNConfigSet,l=e("./../Token").Token,h=e("./../dfa/DFAState").DFAState,p=e("./../dfa/DFAState").PredPrediction,d=e("./ATNSimulator").ATNSimulator,v=e("./PredictionMode").PredictionMode,m=e("./../RuleContext").RuleContext,g=e("./../ParserRuleContext").ParserRuleContext,y=e("./SemanticContext").SemanticContext,b=e("./ATNState").StarLoopEntryState,w=e("./ATNState").RuleStopState,E=e("./../PredictionContext").PredictionContext,S=e("./../IntervalSet").Interval,x=e("./Transition"),T=x.Transition,N=x.SetTransition,C=x.NotSetTransition,k=x.RuleTransition,L=x.ActionTransition,A=e("./../error/Errors").NoViableAltException,O=e("./../PredictionContext").SingletonPredictionContext,M=e("./../PredictionContext").predictionContextFromRuleContext;_.prototype=Object.create(d.prototype),_.prototype.constructor=_,_.prototype.debug=!1,_.prototype.debug_list_atn_decisions=!1,_.prototype.dfa_debug=!1,_.prototype.retry_debug=!1,_.prototype.reset=function(){},_.prototype.adaptivePredict=function(e,t,n){(this.debug||this.debug_list_atn_decisions)&&console.log("adaptivePredict decision "+t+" exec LA(1)=="+this.getLookaheadName(e)+" line "+e.LT(1).line+":"+e.LT(1).column),this._input=e,this._startIndex=e.index,this._outerContext=n;var r=this.decisionToDFA[t];this._dfa=r;var i=e.mark(),s=e.index;try{var o;r.precedenceDfa?o=r.getPrecedenceStartState(this.parser.getPrecedence()):o=r.s0;if(o===null){n===null&&(n=m.EMPTY),(this.debug||this.debug_list_atn_decisions)&&console.log("predictATN decision "+r.decision+" exec LA(1)=="+this.getLookaheadName(e)+", outerContext="+n.toString(this.parser.ruleNames)),!r.precedenceDfa&&r.atnStartState instanceof b&&r.atnStartState.precedenceRuleDecision&&r.setPrecedenceDfa(!0);var u=!1,a=this.computeStartState(r.atnStartState,m.EMPTY,u);r.precedenceDfa?(a=this.applyPrecedenceFilter(a),o=this.addDFAState(r,new h(null,a)),r.setPrecedenceStartState(this.parser.getPrecedence(),o)):(o=this.addDFAState(r,new h(null,a)),r.s0=o)}var f=this.execATN(r,o,e,s,n);return this.debug&&console.log("DFA after predictATN: "+r.toString(this.parser.literalNames)),f}finally{this._dfa=null,this.mergeCache=null,e.seek(s),e.release(i)}},_.prototype.execATN=function(e,t,n,r,i){(this.debug||this.debug_list_atn_decisions)&&console.log("execATN decision "+e.decision+" exec LA(1)=="+this.getLookaheadName(n)+" line "+n.LT(1).line+":"+n.LT(1).column);var s,o=t;this.debug&&console.log("s0 = "+t);var a=n.LA(1);for(;;){var f=this.getExistingTargetState(o,a);f===null&&(f=this.computeTargetState(e,o,a));if(f===d.ERROR){var c=this.noViableAlt(n,i,o.configs,r);n.seek(r),s=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(o.configs,i);if(s!==u.INVALID_ALT_NUMBER)return s;throw c}if(f.requiresFullContext&&this.predictionMode!==v.SLL){var h=null;if(f.predicates!==null){this.debug&&console.log("DFA state has preds in DFA sim LL failover");var p=n.index;p!==r&&n.seek(r),h=this.evalSemanticContext(f.predicates,i,!0);if(h.length===1)return this.debug&&console.log("Full LL avoided"),h.minValue();p!==r&&n.seek(p)}this.dfa_debug&&console.log("ctx sensitive state "+i+" in "+f);var m=!0,g=this.computeStartState(e.atnStartState,i,m);return this.reportAttemptingFullContext(e,h,f.configs,r,n.index),s=this.execATNWithFullContext(e,f,g,n,r,i),s}if(f.isAcceptState){if(f.predicates===null)return f.prediction;var y=n.index;n.seek(r);var b=this.evalSemanticContext(f.predicates,i,!0);if(b.length===0)throw this.noViableAlt(n,i,f.configs,r);return b.length===1?b.minValue():(this.reportAmbiguity(e,f,r,y,!1,b,f.configs),b.minValue())}o=f,a!==l.EOF&&(n.consume(),a=n.LA(1))}},_.prototype.getExistingTargetState=function(e,t){var n=e.edges;return n===null?null:n[t+1]||null},_.prototype.computeTargetState=function(e,t,n){var i=this.computeReachSet(t.configs,n,!1);if(i===null)return this.addDFAEdge(e,t,n,d.ERROR),d.ERROR;var s=new h(null,i),o=this.getUniqueAlt(i);if(this.debug){var a=v.getConflictingAltSubsets(i);console.log("SLL altSubSets="+r.arrayToString(a)+", previous="+t.configs+", configs="+i+", predict="+o+", allSubsetsConflict="+v.allSubsetsConflict(a)+", conflictingAlts="+this.getConflictingAlts(i))}return o!==u.INVALID_ALT_NUMBER?(s.isAcceptState=!0,s.configs.uniqueAlt=o,s.prediction=o):v.hasSLLConflictTerminatingPrediction(this.predictionMode,i)&&(s.configs.conflictingAlts=this.getConflictingAlts(i),s.requiresFullContext=!0,s.isAcceptState=!0,s.prediction=s.configs.conflictingAlts.minValue()),s.isAcceptState&&s.configs.hasSemanticContext&&(this.predicateDFAState(s,this.atn.getDecisionState(e.decision)),s.predicates!==null&&(s.prediction=u.INVALID_ALT_NUMBER)),s=this.addDFAEdge(e,t,n,s),s},_.prototype.predicateDFAState=function(e,t){var n=t.transitions.length,r=this.getConflictingAltsOrUniqueAlt(e.configs),i=this.getPredsForAmbigAlts(r,e.configs,n);i!==null?(e.predicates=this.getPredicatePredictions(r,i),e.prediction=u.INVALID_ALT_NUMBER):e.prediction=r.minValue()},_.prototype.execATNWithFullContext=function(e,t,n,r,i,s){(this.debug||this.debug_list_atn_decisions)&&console.log("execATNWithFullContext "+n);var o=!0,a=!1,f=null,c=n;r.seek(i);var h=r.LA(1),p=-1;for(;;){f=this.computeReachSet(c,h,o);if(f===null){var d=this.noViableAlt(r,s,c,i);r.seek(i);var m=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(c,s);if(m!==u.INVALID_ALT_NUMBER)return m;throw d}var g=v.getConflictingAltSubsets(f);this.debug&&console.log("LL altSubSets="+g+", predict="+v.getUniqueAlt(g)+", resolvesToJustOneViableAlt="+v.resolvesToJustOneViableAlt(g)),f.uniqueAlt=this.getUniqueAlt(f);if(f.uniqueAlt!==u.INVALID_ALT_NUMBER){p=f.uniqueAlt;break}if(this.predictionMode!==v.LL_EXACT_AMBIG_DETECTION){p=v.resolvesToJustOneViableAlt(g);if(p!==u.INVALID_ALT_NUMBER)break}else if(v.allSubsetsConflict(g)&&v.allSubsetsEqual(g)){a=!0,p=v.getSingleViableAlt(g);break}c=f,h!==l.EOF&&(r.consume(),h=r.LA(1))}return f.uniqueAlt!==u.INVALID_ALT_NUMBER?(this.reportContextSensitivity(e,p,f,i,r.index),p):(this.reportAmbiguity(e,t,i,r.index,a,null,f),p)},_.prototype.computeReachSet=function(e,t,n){this.debug&&console.log("in computeReachSet, starting closure: "+e),this.mergeCache===null&&(this.mergeCache=new o);var r=new f(n),s=null;for(var c=0;c<e.items.length;c++){var h=e.items[c];this.debug&&console.log("testing "+this.getTokenName(t)+" at "+h);if(h.state instanceof w){if(n||t===l.EOF)s===null&&(s=[]),s.push(h),this.debug&&console.log("added "+h+" to skippedStopStates");continue}for(var p=0;p<h.state.transitions.length;p++){var d=h.state.transitions[p],m=this.getReachableTarget(d,t);if(m!==null){var g=new a({state:m},h);r.add(g,this.mergeCache),this.debug&&console.log("added "+g+" to intermediate")}}}var y=null;s===null&&t!==l.EOF&&(r.items.length===1?y=r:this.getUniqueAlt(r)!==u.INVALID_ALT_NUMBER&&(y=r));if(y===null){y=new f(n);var b=new i,E=t===l.EOF;for(var S=0;S<r.items.length;S++)this.closure(r.items[S],y,b,!1,n,E)}t===l.EOF&&(y=this.removeAllConfigsNotInRuleStopState(y,y===r));if(s!==null&&(!n||!v.hasConfigInRuleStopState(y)))for(var x=0;x<s.length;x++)y.add(s[x],this.mergeCache);return y.items.length===0?null:y},_.prototype.removeAllConfigsNotInRuleStopState=function(e,t){if(v.allConfigsInRuleStopStates(e))return e;var n=new f(e.fullCtx);for(var r=0;r<e.items.length;r++){var i=e.items[r];if(i.state instanceof w){n.add(i,this.mergeCache);continue}if(t&&i.state.epsilonOnlyTransitions){var s=this.atn.nextTokens(i.state);if(s.contains(l.EPSILON)){var o=this.atn.ruleToStopState[i.state.ruleIndex];n.add(new a({state:o},i),this.mergeCache)}}}return n},_.prototype.computeStartState=function(e,t,n){var r=M(this.atn,t),s=new f(n);for(var o=0;o<e.transitions.length;o++){var u=e.transitions[o].target,l=new a({state:u,alt:o+1,context:r},null),c=new i;this.closure(l,s,c,!0,n,!1)}return s},_.prototype.applyPrecedenceFilter=function(e){var t,n=[],r=new f(e.fullCtx);for(var i=0;i<e.items.length;i++){t=e.items[i];if(t.alt!==1)continue;var s=t.semanticContext.evalPrecedence(this.parser,this._outerContext);if(s===null)continue;n[t.state.stateNumber]=t.context,s!==t.semanticContext?r.add(new a({semanticContext:s},t),this.mergeCache):r.add(t,this.mergeCache)}for(i=0;i<e.items.length;i++){t=e.items[i];if(t.alt===1)continue;if(!t.precedenceFilterSuppressed){var o=n[t.state.stateNumber]||null;if(o!==null&&o.equals(t.context))continue}r.add(t,this.mergeCache)}return r},_.prototype.getReachableTarget=function(e,t){return e.matches(t,0,this.atn.maxTokenType)?e.target:null},_.prototype.getPredsForAmbigAlts=function(e,t,n){var i=[];for(var s=0;s<t.items.length;s++){var o=t.items[s];e.contains(o.alt)&&(i[o.alt]=y.orContext(i[o.alt]||null,o.semanticContext))}var u=0;for(s=1;s<n+1;s++){var a=i[s]||null;a===null?i[s]=y.NONE:a!==y.NONE&&(u+=1)}return u===0&&(i=null),this.debug&&console.log("getPredsForAmbigAlts result "+r.arrayToString(i)),i},_.prototype.getPredicatePredictions=function(e,t){var n=[],r=!1;for(var i=1;i<t.length;i++){var s=t[i];e!==null&&e.contains(i)&&n.push(new p(s,i)),s!==y.NONE&&(r=!0)}return r?n:null},_.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule=function(e,t){var n=this.splitAccordingToSemanticValidity(e,t),r=n[0],i=n[1],s=this.getAltThatFinishedDecisionEntryRule(r);if(s!==u.INVALID_ALT_NUMBER)return s;if(i.items.length>0){s=this.getAltThatFinishedDecisionEntryRule(i);if(s!==u.INVALID_ALT_NUMBER)return s}return u.INVALID_ALT_NUMBER},_.prototype.getAltThatFinishedDecisionEntryRule=function(e){var t=[];for(var n=0;n<e.items.length;n++){var r=e.items[n];(r.reachesIntoOuterContext>0||r.state instanceof w&&r.context.hasEmptyPath())&&t.indexOf(r.alt)<0&&t.push(r.alt)}return t.length===0?u.INVALID_ALT_NUMBER:Math.min.apply(null,t)},_.prototype.splitAccordingToSemanticValidity=function(e,t){var n=new f(e.fullCtx),r=new f(e.fullCtx);for(var i=0;i<e.items.length;i++){var s=e.items[i];if(s.semanticContext!==y.NONE){var o=s.semanticContext.evaluate(this.parser,t);o?n.add(s):r.add(s)}else n.add(s)}return[n,r]},_.prototype.evalSemanticContext=function(e,t,n){var r=new s;for(var i=0;i<e.length;i++){var o=e[i];if(o.pred===y.NONE){r.add(o.alt);if(!n)break;continue}var u=o.pred.evaluate(this.parser,t);(this.debug||this.dfa_debug)&&console.log("eval pred "+o+"="+u);if(u){(this.debug||this.dfa_debug)&&console.log("PREDICT "+o.alt),r.add(o.alt);if(!n)break}}return r},_.prototype.closure=function(e,t,n,r,i,s){var o=0;this.closureCheckingStopState(e,t,n,r,i,o,s)},_.prototype.closureCheckingStopState=function(e,t,n,r,i,s,o){if(this.debug){console.log("closure("+e.toString(this.parser,!0)+")"),console.log("configs("+t.toString()+")");if(e.reachesIntoOuterContext>50)throw"problem"}if(e.state instanceof w){if(!e.context.isEmpty()){for(var u=0;u<e.context.length;u++){if(e.context.getReturnState(u)===E.EMPTY_RETURN_STATE){if(i){t.add(new a({state:e.state,context:E.EMPTY},e),this.mergeCache);continue}this.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex)),this.closure_(e,t,n,r,i,s,o);continue}returnState=this.atn.states[e.context.getReturnState(u)],newContext=e.context.getParent(u);var f={state:returnState,alt:e.alt,context:newContext,semanticContext:e.semanticContext};c=new a(f,null),c.reachesIntoOuterContext=e.reachesIntoOuterContext,this.closureCheckingStopState(c,t,n,r,i,s-1,o)}return}if(i){t.add(e,this.mergeCache);return}this.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex))}this.closure_(e,t,n,r,i,s,o)},_.prototype.closure_=function(e,t,n,r,i,s,o){var u=e.state;u.epsilonOnlyTransitions||t.add(e,this.mergeCache);for(var a=0;a<u.transitions.length;a++){var f=u.transitions[a],l=r&&!(f instanceof L),c=this.getEpsilonTarget(e,f,l,s===0,i,o);if(c!==null){if(!f.isEpsilon&&n.add(c)!==c)continue;var h=s;if(e.state instanceof w){if(n.add(c)!==c)continue;this._dfa!==null&&this._dfa.precedenceDfa&&f.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(c.precedenceFilterSuppressed=!0),c.reachesIntoOuterContext+=1,t.dipsIntoOuterContext=!0,h-=1,this.debug&&console.log("dips into outer ctx: "+c)}else f instanceof k&&h>=0&&(h+=1);this.closureCheckingStopState(c,t,n,l,i,h,o)}}},_.prototype.getRuleName=function(e){return this.parser!==null&&e>=0?this.parser.ruleNames[e]:"<rule "+e+">"},_.prototype.getEpsilonTarget=function(e,t,n,r,i,s){switch(t.serializationType){case T.RULE:return this.ruleTransition(e,t);case T.PRECEDENCE:return this.precedenceTransition(e,t,n,r,i);case T.PREDICATE:return this.predTransition(e,t,n,r,i);case T.ACTION:return this.actionTransition(e,t);case T.EPSILON:return new a({state:t.target},e);case T.ATOM:case T.RANGE:case T.SET:if(s&&t.matches(l.EOF,0,1))return new a({state:t.target},e);return null;default:return null}},_.prototype.actionTransition=function(e,t){return this.debug&&console.log("ACTION edge "+t.ruleIndex+":"+t.actionIndex),new a({state:t.target},e)},_.prototype.precedenceTransition=function(e,t,n,i,s){this.debug&&(console.log("PRED (collectPredicates="+n+") "+t.precedence+">=_p, ctx dependent=true"),this.parser!==null&&console.log("context surrounding pred is "+r.arrayToString(this.parser.getRuleInvocationStack())));var o=null;if(n&&i)if(s){var u=this._input.index;this._input.seek(this._startIndex);var f=t.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(u),f&&(o=new a({state:t.target},e))}else newSemCtx=y.andContext(e.semanticContext,t.getPredicate()),o=new a({state:t.target,semanticContext:newSemCtx},e);else o=new a({state:t.target},e);return this.debug&&console.log("config from pred transition="+o),o},_.prototype.predTransition=function(e,t,n,i,s){this.debug&&(console.log("PRED (collectPredicates="+n+") "+t.ruleIndex+":"+t.predIndex+", ctx dependent="+t.isCtxDependent),this.parser!==null&&console.log("context surrounding pred is "+r.arrayToString(this.parser.getRuleInvocationStack())));var o=null;if(n&&(t.isCtxDependent&&i||!t.isCtxDependent))if(s){var u=this._input.index;this._input.seek(this._startIndex);var f=t.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(u),f&&(o=new a({state:t.target},e))}else{var l=y.andContext(e.semanticContext,t.getPredicate());o=new a({state:t.target,semanticContext:l},e)}else o=new a({state:t.target},e);return this.debug&&console.log("config from pred transition="+o),o},_.prototype.ruleTransition=function(e,t){this.debug&&console.log("CALL rule "+this.getRuleName(t.target.ruleIndex)+", ctx="+e.context);var n=t.followState,r=O.create(e.context,n.stateNumber);return new a({state:t.target,context:r},e)},_.prototype.getConflictingAlts=function(e){var t=v.getConflictingAltSubsets(e);return v.getAlts(t)},_.prototype.getConflictingAltsOrUniqueAlt=function(e){var t=null;return e.uniqueAlt!==u.INVALID_ALT_NUMBER?(t=new s,t.add(e.uniqueAlt)):t=e.conflictingAlts,t},_.prototype.getTokenName=function(e){if(e===l.EOF)return"EOF";if(this.parser!==null&&this.parser.literalNames!==null){if(!(e>=this.parser.literalNames.length))return this.parser.literalNames[e]+"<"+e+">";console.log(""+e+" ttype out of range: "+this.parser.literalNames),console.log(""+this.parser.getInputStream().getTokens())}return""+e},_.prototype.getLookaheadName=function(e){return this.getTokenName(e.LA(1))},_.prototype.dumpDeadEndConfigs=function(e){console.log("dead end configs: ");var t=e.getDeadEndConfigs();for(var n=0;n<t.length;n++){var r=t[n],i="no edges";if(r.state.transitions.length>0){var s=r.state.transitions[0];if(s instanceof AtomTransition)i="Atom "+this.getTokenName(s.label);else if(s instanceof N){var o=s instanceof C;i=(o?"~":"")+"Set "+s.set}}console.error(r.toString(this.parser,!0)+":"+i)}},_.prototype.noViableAlt=function(e,t,n,r){return new A(this.parser,e,e.get(r),e.LT(1),n,t)},_.prototype.getUniqueAlt=function(e){var t=u.INVALID_ALT_NUMBER;for(var n=0;n<e.items.length;n++){var r=e.items[n];if(t===u.INVALID_ALT_NUMBER)t=r.alt;else if(r.alt!==t)return u.INVALID_ALT_NUMBER}return t},_.prototype.addDFAEdge=function(e,t,n,r){this.debug&&console.log("EDGE "+t+" -> "+r+" upon "+this.getTokenName(n));if(r===null)return null;r=this.addDFAState(e,r);if(t===null||n<-1||n>this.atn.maxTokenType)return r;t.edges===null&&(t.edges=[]),t.edges[n+1]=r;if(this.debug){var i=this.parser===null?null:this.parser.literalNames;console.log("DFA=\n"+e.toString(i))}return r},_.prototype.addDFAState=function(e,t){if(t==d.ERROR)return t;var n=t.hashString(),r=e.states[n]||null;return r!==null?r:(t.stateNumber=e.states.length,t.configs.readOnly||(t.configs.optimizeConfigs(this),t.configs.setReadonly(!0)),e.states[n]=t,this.debug&&console.log("adding new DFA state: "+t),t)},_.prototype.reportAttemptingFullContext=function(e,t,n,r,i){if(this.debug||this.retry_debug){var s=new S(r,i+1);console.log("reportAttemptingFullContext decision="+e.decision+":"+n+", input="+this.parser.getTokenStream().getText(s))}this.parser!==null&&this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,e,r,i,t,n)},_.prototype.reportContextSensitivity=function(e,t,n,r,i){if(this.debug||this.retry_debug){var s=new S(r,i+1);console.log("reportContextSensitivity decision="+e.decision+":"+n+", input="+this.parser.getTokenStream().getText(s))}this.parser!==null&&this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,e,r,i,t,n)},_.prototype.reportAmbiguity=function(e,t,n,r,i,s,o){if(this.debug||this.retry_debug){var u=new S(n,r+1);console.log("reportAmbiguity "+s+":"+o+", input="+this.parser.getTokenStream().getText(u))}this.parser!==null&&this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,e,n,r,i,s,o)},t.ParserATNSimulator=_}),r("atn/index",["require","exports","module","./ATN","./ATNDeserializer","./LexerATNSimulator","./ParserATNSimulator","./PredictionMode"],function(e,t,n){t.ATN=e("./ATN").ATN,t.ATNDeserializer=e("./ATNDeserializer").ATNDeserializer,t.LexerATNSimulator=e("./LexerATNSimulator").LexerATNSimulator,t.ParserATNSimulator=e("./ParserATNSimulator").ParserATNSimulator,t.PredictionMode=e("./PredictionMode").PredictionMode}),r("dfa/DFASerializer",["require","exports","module"],function(e,t,n){function r(e,t,n){return this.dfa=e,this.literalNames=t||[],this.symbolicNames=n||[],this}function i(e){return r.call(this,e,null),this}r.prototype.toString=function(){if(this.dfa.s0===null)return null;var e="",t=this.dfa.sortedStates();for(var n=0;n<t.length;n++){var r=t[n];if(r.edges!==null){var i=r.edges.length;for(var s=0;s<i;s++){var o=r.edges[s]||null;o!==null&&o.stateNumber!==2147483647&&(e=e.concat(this.getStateString(r)),e=e.concat("-"),e=e.concat(this.getEdgeLabel(s)),e=e.concat("->"),e=e.concat(this.getStateString(o)),e=e.concat("\n"))}}}return e.length===0?null:e},r.prototype.getEdgeLabel=function(e){return e===0?"EOF":this.literalNames!==null||this.symbolicNames!==null?this.literalNames[e-1]||this.symbolicNames[e-1]:String.fromCharCode(e-1)},r.prototype.getStateString=function(e){var t=(e.isAcceptState?":":"")+"s"+e.stateNumber+(e.requiresFullContext?"^":"");return e.isAcceptState?e.predicates!==null?t+"=>"+e.predicates.toString():t+"=>"+e.prediction.toString():t},i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.prototype.getEdgeLabel=function(e){return"'"+String.fromCharCode(e)+"'"},t.DFASerializer=r,t.LexerDFASerializer=i}),r("dfa/DFA",["require","exports","module","./DFAState","./../atn/ATNConfigSet","./DFASerializer","./DFASerializer"],function(e,t,n){function u(){return this}function a(e,t){return t===undefined&&(t=0),this.atnStartState=e,this.decision=t,this._states=new u,this.s0=null,this.precedenceDfa=!1,this}var r=e("./DFAState").DFAState,i=e("./../atn/ATNConfigSet").ATNConfigSet,s=e("./DFASerializer").DFASerializer,o=e("./DFASerializer").LexerDFASerializer;Object.defineProperty(u.prototype,"length",{get:function(){return Object.keys(this).length}}),a.prototype.getPrecedenceStartState=function(e){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";return e<0||e>=this.s0.edges.length?null:this.s0.edges[e]||null},a.prototype.setPrecedenceStartState=function(e,t){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";if(e<0)return;this.s0.edges[e]=t},a.prototype.setPrecedenceDfa=function(e){if(this.precedenceDfa!==e){this._states=new u;if(e){var t=new r(new i);t.edges=[],t.isAcceptState=!1,t.requiresFullContext=!1,this.s0=t}else this.s0=null;this.precedenceDfa=e}},Object.defineProperty(a.prototype,"states",{get:function(){return this._states}}),a.prototype.sortedStates=function(){var e=Object.keys(this._states),t=[];for(var n=0;n<e.length;n++)t.push(this._states[e[n]]);return t.sort(function(e,t){return e.stateNumber-t.stateNumber})},a.prototype.toString=function(e,t){e=e||null,t=t||null;if(this.s0===null)return"";var n=new s(this,e,t);return n.toString()},a.prototype.toLexerString=function(){if(this.s0===null)return"";var e=new o(this);return e.toString()},t.DFA=a}),r("dfa/index",["require","exports","module","./DFA","./DFASerializer","./DFASerializer","./DFAState"],function(e,t,n){t.DFA=e("./DFA").DFA,t.DFASerializer=e("./DFASerializer").DFASerializer,t.LexerDFASerializer=e("./DFASerializer").LexerDFASerializer,t.PredPrediction=e("./DFAState").PredPrediction}),r("tree/index",["require","exports","module","./Tree","./Tree"],function(e,t,n){var r=e("./Tree");t.Trees=e("./Tree").Trees,t.RuleNode=r.RuleNode,t.ParseTreeListener=r.ParseTreeListener,t.ParseTreeVisitor=r.ParseTreeVisitor,t.ParseTreeWalker=r.ParseTreeWalker}),r("error/DiagnosticErrorListener",["require","exports","module","./../Utils","./ErrorListener","./../IntervalSet"],function(e,t,n){function o(e){return i.call(this),e=e||!0,this.exactOnly=e,this}var r=e("./../Utils").BitSet,i=e("./ErrorListener").ErrorListener,s=e("./../IntervalSet").Interval;o.prototype=Object.create(i.prototype),o.prototype.constructor=o,o.prototype.reportAmbiguity=function(e,t,n,r,i,o,u){if(this.exactOnly&&!i)return;var a="reportAmbiguity d="+this.getDecisionDescription(e,t)+": ambigAlts="+this.getConflictingAlts(o,u)+", input='"+e.getTokenStream().getText(new s(n,r))+"'";e.notifyErrorListeners(a)},o.prototype.reportAttemptingFullContext=function(e,t,n,r,i,o){var u="reportAttemptingFullContext d="+this.getDecisionDescription(e,t)+", input='"+e.getTokenStream().getText(new s(n,r))+"'";e.notifyErrorListeners(u)},o.prototype.reportContextSensitivity=function(e,t,n,r,i,o){var u="reportContextSensitivity d="+this.getDecisionDescription(e,t)+", input='"+e.getTokenStream().getText(new s(n,r))+"'";e.notifyErrorListeners(u)},o.prototype.getDecisionDescription=function(e,t){var n=t.decision,r=t.atnStartState.ruleIndex,i=e.ruleNames;if(r<0||r>=i.length)return""+n;var s=i[r]||null;return s===null||s.length===0?""+n:""+n+" ("+s+")"},o.prototype.getConflictingAlts=function(e,t){if(e!==null)return e;var n=new r;for(var i=0;i<t.items.length;i++)n.add(t.items[i].alt);return"{"+n.values().join(", ")+"}"},t.DiagnosticErrorListener=o}),r("error/ErrorStrategy",["require","exports","module","./../Token","./Errors","./../atn/ATNState","./../IntervalSet","./../IntervalSet"],function(e,t,n){function h(){}function p(){return h.call(this),this.errorRecoveryMode=!1,this.lastErrorIndex=-1,this.lastErrorStates=null,this}function d(){return p.call(this),this}var r=e("./../Token").Token,i=e("./Errors"),s=i.NoViableAltException,o=i.InputMismatchException,u=i.FailedPredicateException,a=i.ParseCancellationException,f=e("./../atn/ATNState").ATNState,l=e("./../IntervalSet").Interval,c=e("./../IntervalSet").IntervalSet;h.prototype.reset=function(e){},h.prototype.recoverInline=function(e){},h.prototype.recover=function(e,t){},h.prototype.sync=function(e){},h.prototype.inErrorRecoveryMode=function(e){},h.prototype.reportError=function(e){},p.prototype=Object.create(h.prototype),p.prototype.constructor=p,p.prototype.reset=function(e){this.endErrorCondition(e)},p.prototype.beginErrorCondition=function(e){this.errorRecoveryMode=!0},p.prototype.inErrorRecoveryMode=function(e){return this.errorRecoveryMode},p.prototype.endErrorCondition=function(e){this.errorRecoveryMode=!1,this.lastErrorStates=null,this.lastErrorIndex=-1},p.prototype.reportMatch=function(e){this.endErrorCondition(e)},p.prototype.reportError=function(e,t){if(this.inErrorRecoveryMode(e))return;this.beginErrorCondition(e),t instanceof s?this.reportNoViableAlternative(e,t):t instanceof o?this.reportInputMismatch(e,t):t instanceof u?this.reportFailedPredicate(e,t):(console.log("unknown recognition error type: "+t.constructor.name),console.log(t.stack),e.notifyErrorListeners(t.getOffendingToken(),t.getMessage(),t))},p.prototype.recover=function(e,t){this.lastErrorIndex===e.getInputStream().index&&this.lastErrorStates!==null&&this.lastErrorStates.indexOf(e.state)>=0&&e.consume(),this.lastErrorIndex=e._input.index,this.lastErrorStates===null&&(this.lastErrorStates=[]),this.lastErrorStates.push(e.state);var n=this.getErrorRecoverySet(e);this.consumeUntil(e,n)},p.prototype.sync=function(e){if(this.inErrorRecoveryMode(e))return;var t=e._interp.atn.states[e.state],n=e.getTokenStream().LA(1);if(n===r.EOF||e.atn.nextTokens(t).contains(n))return;if(e.isExpectedToken(n))return;switch(t.stateType){case f.BLOCK_START:case f.STAR_BLOCK_START:case f.PLUS_BLOCK_START:case f.STAR_LOOP_ENTRY:if(this.singleTokenDeletion(e)!==null)return;throw new o(e);case f.PLUS_LOOP_BACK:case f.STAR_LOOP_BACK:this.reportUnwantedToken(e);var i=new c;i.addSet(e.getExpectedTokens());var s=i.addSet(this.getErrorRecoverySet(e));this.consumeUntil(e,s);break;default:}},p.prototype.reportNoViableAlternative=function(e,t){var n=e.getTokenStream(),i;n!==null?t.startToken.type===r.EOF?i="<EOF>":i=n.getText(new l(t.startToken,t.offendingToken)):i="<unknown input>";var s="no viable alternative at input "+this.escapeWSAndQuote(i);e.notifyErrorListeners(s,t.offendingToken,t)},p.prototype.reportInputMismatch=function(e,t){var n="mismatched input "+this.getTokenErrorDisplay(t.offendingToken)+" expecting "+t.getExpectedTokens().toString(e.literalNames,e.symbolicNames);e.notifyErrorListeners(n,t.offendingToken,t)},p.prototype.reportFailedPredicate=function(e,t){var n=e.ruleNames[e._ctx.ruleIndex],r="rule "+n+" "+t.message;e.notifyErrorListeners(r,t.offendingToken,t)},p.prototype.reportUnwantedToken=function(e){if(this.inErrorRecoveryMode(e))return;this.beginErrorCondition(e);var t=e.getCurrentToken(),n=this.getTokenErrorDisplay(t),r=this.getExpectedTokens(e),i="extraneous input "+n+" expecting "+r.toString(e.literalNames,e.symbolicNames);e.notifyErrorListeners(i,t,null)},p.prototype.reportMissingToken=function(e){if(this.inErrorRecoveryMode(e))return;this.beginErrorCondition(e);var t=e.getCurrentToken(),n=this.getExpectedTokens(e),r="missing "+n.toString(e.literalNames,e.symbolicNames)+" at "+this.getTokenErrorDisplay(t);e.notifyErrorListeners(r,t,null)},p.prototype.recoverInline=function(e){var t=this.singleTokenDeletion(e);if(t!==null)return e.consume(),t;if(this.singleTokenInsertion(e))return this.getMissingSymbol(e);throw new o(e)},p.prototype.singleTokenInsertion=function(e){var t=e.getTokenStream().LA(1),n=e._interp.atn,r=n.states[e.state],i=r.transitions[0].target,s=n.nextTokens(i,e._ctx);return s.contains(t)?(this.reportMissingToken(e),!0):!1},p.prototype.singleTokenDeletion=function(e){var t=e.getTokenStream().LA(2),n=this.getExpectedTokens(e);if(n.contains(t)){this.reportUnwantedToken(e),e.consume();var r=e.getCurrentToken();return this.reportMatch(e),r}return null},p.prototype.getMissingSymbol=function(e){var t=e.getCurrentToken(),n=this.getExpectedTokens(e),i=n.first(),s;i===r.EOF?s="<missing EOF>":s="<missing "+e.literalNames[i]+">";var o=t,u=e.getTokenStream().LT(-1);return o.type===r.EOF&&u!==null&&(o=u),e.getTokenFactory().create(o.source,i,s,r.DEFAULT_CHANNEL,-1,-1,o.line,o.column)},p.prototype.getExpectedTokens=function(e){return e.getExpectedTokens()},p.prototype.getTokenErrorDisplay=function(e){if(e===null)return"<no token>";var t=e.text;return t===null&&(e.type===r.EOF?t="<EOF>":t="<"+e.type+">"),this.escapeWSAndQuote(t)},p.prototype.escapeWSAndQuote=function(e){return e=e.replace(/\n/g,"\\n"),e=e.replace(/\r/g,"\\r"),e=e.replace(/\t/g,"\\t"),"'"+e+"'"},p.prototype.getErrorRecoverySet=function(e){var t=e._interp.atn,n=e._ctx,i=new c;while(n!==null&&n.invokingState>=0){var s=t.states[n.invokingState],o=s.transitions[0],u=t.nextTokens(o.followState);i.addSet(u),n=n.parentCtx}return i.removeOne(r.EPSILON),i},p.prototype.consumeUntil=function(e,t){var n=e.getTokenStream().LA(1);while(n!==r.EOF&&!t.contains(n))e.consume(),n=e.getTokenStream().LA(1)},d.prototype=Object.create(p.prototype),d.prototype.constructor=d,d.prototype.recover=function(e,t){var n=e._ctx;while(n!==null)n.exception=t,n=n.parentCtx;throw new a(t)},d.prototype.recoverInline=function(e){this.recover(e,new o(e))},d.prototype.sync=function(e){},t.BailErrorStrategy=d,t.DefaultErrorStrategy=p}),r("error/index",["require","exports","module","./Errors","./Errors","./Errors","./Errors","./Errors","./DiagnosticErrorListener","./ErrorStrategy","./ErrorListener"],function(e,t,n){t.RecognitionException=e("./Errors").RecognitionException,t.NoViableAltException=e("./Errors").NoViableAltException,t.LexerNoViableAltException=e("./Errors").LexerNoViableAltException,t.InputMismatchException=e("./Errors").InputMismatchException,t.FailedPredicateException=e("./Errors").FailedPredicateException,t.DiagnosticErrorListener=e("./DiagnosticErrorListener").DiagnosticErrorListener,t.BailErrorStrategy=e("./ErrorStrategy").BailErrorStrategy,t.ErrorListener=e("./ErrorListener").ErrorListener}),r("InputStream",["require","exports","module","./Token"],function(e,t,n){function i(e){e._index=0,e.data=[];for(var t=0;t<e.strdata.length;t++)e.data.push(e.strdata.charCodeAt(t));e._size=e.data.length}function s(e){return this.name="<empty>",this.strdata=e,i(this),this}var r=e("./Token").Token;Object.defineProperty(s.prototype,"index",{get:function(){return this._index}}),Object.defineProperty(s.prototype,"size",{get:function(){return this._size}}),s.prototype.reset=function(){this._index=0},s.prototype.consume=function(){if(this._index>=this._size)throw"cannot consume EOF";this._index+=1},s.prototype.LA=function(e){if(e===0)return 0;e<0&&(e+=1);var t=this._index+e-1;return t<0||t>=this._size?r.EOF:this.data[t]},s.prototype.LT=function(e){return this.LA(e)},s.prototype.mark=function(){return-1},s.prototype.release=function(e){},s.prototype.seek=function(e){if(e<=this._index){this._index=e;return}this._index=Math.min(e,this._size)},s.prototype.getText=function(e,t){return t>=this._size&&(t=this._size-1),e>=this._size?"":this.strdata.slice(e,t+1)},s.prototype.toString=function(){return this.strdata},t.InputStream=s}),r("BufferedTokenStream",["require","exports","module","./Token","./Lexer","./IntervalSet"],function(e,t,n){function o(){return this}function u(e){return o.call(this),this.tokenSource=e,this.tokens=[],this.index=-1,this.fetchedEOF=!1,this}var r=e("./Token").Token,i=e("./Lexer").Lexer,s=e("./IntervalSet").Interval;u.prototype=Object.create(o.prototype),u.prototype.constructor=u,u.prototype.mark=function(){return 0},u.prototype.release=function(e){},u.prototype.reset=function(){this.seek(0)},u.prototype.seek=function(e){this.lazyInit(),this.index=this.adjustSeekIndex(e)},u.prototype.get=function(e){return this.lazyInit(),this.tokens[e]},u.prototype.consume=function(){var e=!1;this.index>=0?this.fetchedEOF?e=this.index<this.tokens.length-1:e=this.index<this.tokens.length:e=!1;if(!e&&this.LA(1)===r.EOF)throw"cannot consume EOF";this.sync(this.index+1)&&(this.index=this.adjustSeekIndex(this.index+1))},u.prototype.sync=function(e){var t=e-this.tokens.length+1;if(t>0){var n=this.fetch(t);return n>=t}return!0},u.prototype.fetch=function(e){if(this.fetchedEOF)return 0;for(var t=0;t<e;t++){var n=this.tokenSource.nextToken();n.tokenIndex=this.tokens.length,this.tokens.push(n);if(n.type===r.EOF)return this.fetchedEOF=!0,t+1}return e},u.prototype.getTokens=function(e,t,n){n===undefined&&(n=null);if(e<0||t<0)return null;this.lazyInit();var i=[];t>=this.tokens.length&&(t=this.tokens.length-1);for(var s=e;s<t;s++){var o=this.tokens[s];if(o.type===r.EOF)break;(n===null||n.contains(o.type))&&i.push(o)}return i},u.prototype.LA=function(e){return this.LT(e).type},u.prototype.LB=function(e){return this.index-e<0?null:this.tokens[this.index-e]},u.prototype.LT=function(e){this.lazyInit();if(e===0)return null;if(e<0)return this.LB(-e);var t=this.index+e-1;return this.sync(t),t>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[t]},u.prototype.adjustSeekIndex=function(e){return e},u.prototype.lazyInit=function(){this.index===-1&&this.setup()},u.prototype.setup=function(){this.sync(0),this.index=this.adjustSeekIndex(0)},u.prototype.setTokenSource=function(e){this.tokenSource=e,this.tokens=[],this.index=-1},u.prototype.nextTokenOnChannel=function(e,t){this.sync(e);if(e>=this.tokens.length)return-1;var n=this.tokens[e];while(n.channel!==this.channel){if(n.type===r.EOF)return-1;e+=1,this.sync(e),n=this.tokens[e]}return e},u.prototype.previousTokenOnChannel=function(e,t){while(e>=0&&this.tokens[e].channel!==t)e-=1;return e},u.prototype.getHiddenTokensToRight=function(e,t){t===undefined&&(t=-1),this.lazyInit();if(e<0||e>=this.tokens.length)throw""+e+" not in 0.."+this.tokens.length-1;var n=this.nextTokenOnChannel(e+1,i.DEFAULT_TOKEN_CHANNEL),r=e+1,s=n===-1?this.tokens.length-1:n;return this.filterForChannel(r,s,t)},u.prototype.getHiddenTokensToLeft=function(e,t){t===undefined&&(t=-1),this.lazyInit();if(e<0||e>=this.tokens.length)throw""+e+" not in 0.."+this.tokens.length-1;var n=this.previousTokenOnChannel(e-1,i.DEFAULT_TOKEN_CHANNEL);if(n===e-1)return null;var r=n+1,s=e-1;return this.filterForChannel(r,s,t)},u.prototype.filterForChannel=function(e,t,n){var r=[];for(var s=e;s<t+1;s++){var o=this.tokens[s];n===-1?o.channel!==i.DEFAULT_TOKEN_CHANNEL&&r.push(o):o.channel===n&&r.push(o)}return r.length===0?null:r},u.prototype.getSourceName=function(){return this.tokenSource.getSourceName()},u.prototype.getText=function(e){this.lazyInit(),this.fill();if(e===undefined||e===null)e=new s(0,this.tokens.length-1);var t=e.start;t instanceof r&&(t=t.tokenIndex);var n=e.stop;n instanceof r&&(n=n.tokenIndex);if(t===null||n===null||t<0||n<0)return"";n>=this.tokens.length&&(n=this.tokens.length-1);var i="";for(var o=t;o<n+1;o++){var u=this.tokens[o];if(u.type===r.EOF)break;i+=u.text}return i},u.prototype.fill=function(){this.lazyInit();while(this.fetch(1e3)===1e3)continue},t.BufferedTokenStream=u}),r("CommonTokenStream",["require","exports","module","./Token","./BufferedTokenStream"],function(e,t,n){function s(e,t){return i.call(this,e),this.channel=t===undefined?r.DEFAULT_CHANNEL:t,this}var r=e("./Token").Token,i=e("./BufferedTokenStream").BufferedTokenStream;s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.prototype.adjustSeekIndex=function(e){return this.nextTokenOnChannel(e,this.channel)},s.prototype.LB=function(e){if(e===0||this.index-e<0)return null;var t=this.index,n=1;while(n<=e)t=this.previousTokenOnChannel(t-1,this.channel),n+=1;return t<0?null:this.tokens[t]},s.prototype.LT=function(e){this.lazyInit();if(e===0)return null;if(e<0)return this.LB(-e);var t=this.index,n=1;while(n<e)this.sync(t+1)&&(t=this.nextTokenOnChannel(t+1,this.channel)),n+=1;return this.tokens[t]},s.prototype.getNumberOfOnChannelTokens=function(){var e=0;this.fill();for(var t=0;t<this.tokens.length;t++){var n=this.tokens[t];n.channel===this.channel&&(e+=1);if(n.type===r.EOF)break}return e},t.CommonTokenStream=s}),r("Parser",["require","exports","module","./Token","./tree/Tree","./Recognizer","./error/ErrorStrategy","./atn/ATNDeserializer","./atn/ATNDeserializationOptions","./Lexer"],function(e,t,n){function f(e){return i.call(this),this.parser=e,this}function l(e){return s.call(this),this._input=null,this._errHandler=new o,this._precedenceStack=[],this._precedenceStack.push(0),this._ctx=null,this.buildParseTrees=!0,this._tracer=null,this._parseListeners=null,this._syntaxErrors=0,this.setInputStream(e),this}var r=e("./Token").Token,i=e("./tree/Tree").ParseTreeListener,s=e("./Recognizer").Recognizer,o=e("./error/ErrorStrategy").DefaultErrorStrategy,u=e("./atn/ATNDeserializer").ATNDeserializer,a=e("./atn/ATNDeserializationOptions").ATNDeserializationOptions;f.prototype=Object.create(i),f.prototype.constructor=f,f.prototype.enterEveryRule=function(e){console.log("enter   "+this.parser.ruleNames[e.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)},f.prototype.visitTerminal=function(e){console.log("consume "+e.symbol+" rule "+this.parser.ruleNames[this.parser._ctx.ruleIndex])},f.prototype.exitEveryRule=function(e){console.log("exit    "+this.parser.ruleNames[e.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)},l.prototype=Object.create(s.prototype),l.prototype.contructor=l,l.bypassAltsAtnCache={},l.prototype.reset=function(){this._input!==null&&this._input.seek(0),this._errHandler.reset(this),this._ctx=null,this._syntaxErrors=0,this.setTrace(!1),this._precedenceStack=[],this._precedenceStack.push(0),this._interp!==null&&this._interp.reset()},l.prototype.match=function(e){var t=this.getCurrentToken();return t.type===e?(this._errHandler.reportMatch(this),this.consume()):(t=this._errHandler.recoverInline(this),this.buildParseTrees&&t.tokenIndex===-1&&this._ctx.addErrorNode(t)),t},l.prototype.matchWildcard=function(){var e=this.getCurrentToken();return e.type>0?(this._errHandler.reportMatch(this),this.consume()):(e=this._errHandler.recoverInline(this),this._buildParseTrees&&e.tokenIndex===-1&&this._ctx.addErrorNode(e)),e},l.prototype.getParseListeners=function(){return this._parseListeners||[]},l.prototype.addParseListener=function(e){if(e===null)throw"listener";this._parseListeners===null&&(this._parseListeners=[]),this._parseListeners.push(e)},l.prototype.removeParseListener=function(e){if(this._parseListeners!==null){var t=this._parseListeners.indexOf(e);t>=0&&this._parseListeners.splice(t,1),this._parseListeners.length===0&&(this._parseListeners=null)}},l.prototype.removeParseListeners=function(){this._parseListeners=null},l.prototype.triggerEnterRuleEvent=function(){if(this._parseListeners!==null){var e=this._ctx;this._parseListeners.map(function(t){t.enterEveryRule(e),e.enterRule(t)})}},l.prototype.triggerExitRuleEvent=function(){if(this._parseListeners!==null){var e=this._ctx;this._parseListeners.slice(0).reverse().map(function(t){e.exitRule(t),t.exitEveryRule(e)})}},l.prototype.getTokenFactory=function(){return this._input.tokenSource._factory},l.prototype.setTokenFactory=function(e){this._input.tokenSource._factory=e},l.prototype.getATNWithBypassAlts=function(){var e=this.getSerializedATN();if(e===null)throw"The current parser does not support an ATN with bypass alternatives.";var t=this.bypassAltsAtnCache[e];if(t===null){var n=new a;n.generateRuleBypassTransitions=!0,t=(new u(n)).deserialize(e),this.bypassAltsAtnCache[e]=t}return t};var c=e("./Lexer").Lexer;l.prototype.compileParseTreePattern=function(e,t,n){n=n||null;if(n===null&&this.getTokenStream()!==null){var r=this.getTokenStream().tokenSource;r instanceof c&&(n=r)}if(n===null)throw"Parser can't discover a lexer to use";var i=new ParseTreePatternMatcher(n,this);return i.compile(e,t)},l.prototype.getInputStream=function(){return this.getTokenStream()},l.prototype.setInputStream=function(e){this.setTokenStream(e)},l.prototype.getTokenStream=function(){return this._input},l.prototype.setTokenStream=function(e){this._input=null,this.reset(),this._input=e},l.prototype.getCurrentToken=function(){return this._input.LT(1)},l.prototype.notifyErrorListeners=function(e,t,n){t=t||null,n=n||null,t===null&&(t=this.getCurrentToken()),this._syntaxErrors+=1;var r=t.line,i=t.column,s=this.getErrorListenerDispatch();s.syntaxError(this,t,r,i,e,n)},l.prototype.consume=function(){var e=this.getCurrentToken();e.type!==r.EOF&&this.getInputStream().consume();var t=this._parseListeners!==null&&this._parseListeners.length>0;if(this.buildParseTrees||t){var n;this._errHandler.inErrorRecoveryMode(this)?n=this._ctx.addErrorNode(e):n=this._ctx.addTokenNode(e),n.invokingState=this.state,t&&this._parseListeners.map(function(e){e.visitTerminal(n)})}return e},l.prototype.addContextToParseTree=function(){this._ctx.parentCtx!==null&&this._ctx.parentCtx.addChild(this._ctx)},l.prototype.enterRule=function(e,t,n){this.state=t,this._ctx=e,this._ctx.start=this._input.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this._parseListeners!==null&&this.triggerEnterRuleEvent()},l.prototype.exitRule=function(){this._ctx.stop=this._input.LT(-1),this._parseListeners!==null&&this.triggerExitRuleEvent(),this.state=this._ctx.invokingState,this._ctx=this._ctx.parentCtx},l.prototype.enterOuterAlt=function(e,t){this.buildParseTrees&&this._ctx!==e&&this._ctx.parentCtx!==null&&(this._ctx.parentCtx.removeLastChild(),this._ctx.parentCtx.addChild(e)),this._ctx=e},l.prototype.getPrecedence=function(){return this._precedenceStack.length===0?-1:this._precedenceStack[this._precedenceStack.length-1]},l.prototype.enterRecursionRule=function(e,t,n,r){this.state=t,this._precedenceStack.push(r),this._ctx=e,this._ctx.start=this._input.LT(1),this._parseListeners!==null&&this.triggerEnterRuleEvent()},l.prototype.pushNewRecursionContext=function(e,t,n){var r=this._ctx;r.parentCtx=e,r.invokingState=t,r.stop=this._input.LT(-1),this._ctx=e,this._ctx.start=r.start,this.buildParseTrees&&this._ctx.addChild(r),this._parseListeners!==null&&this.triggerEnterRuleEvent()},l.prototype.unrollRecursionContexts=function(e){this._precedenceStack.pop(),this._ctx.stop=this._input.LT(-1);var t=this._ctx;if(this._parseListeners!==null)while(this._ctx!==e)this.triggerExitRuleEvent(),this._ctx=this._ctx.parentCtx;else this._ctx=e;t.parentCtx=e,this.buildParseTrees&&e!==null&&e.addChild(t)},l.prototype.getInvokingContext=function(e){var t=this._ctx;while(t!==null){if(t.ruleIndex===e)return t;t=t.parentCtx}return null},l.prototype.precpred=function(e,t){return t>=this._precedenceStack[this._precedenceStack.length-1]},l.prototype.inContext=function(e){return!1},l.prototype.isExpectedToken=function(e){var t=this._interp.atn,n=this._ctx,i=t.states[this.state],s=t.nextTokens(i);if(s.contains(e))return!0;if(!s.contains(r.EPSILON))return!1;while(n!==null&&n.invokingState>=0&&s.contains(r.EPSILON)){var o=t.states[n.invokingState],u=o.transitions[0];s=t.nextTokens(u.followState);if(s.contains(e))return!0;n=n.parentCtx}return s.contains(r.EPSILON)&&e===r.EOF?!0:!1},l.prototype.getExpectedTokens=function(){return this._interp.atn.getExpectedTokens(this.state,this._ctx)},l.prototype.getExpectedTokensWithinCurrentRule=function(){var e=this._interp.atn,t=e.states[this.state];return e.nextTokens(t)},l.prototype.getRuleIndex=function(e){var t=this.getRuleIndexMap()[e];return t!==null?t:-1},l.prototype.getRuleInvocationStack=function(e){e=e||null,e===null&&(e=this._ctx);var t=[];while(e!==null){var n=e.ruleIndex;n<0?t.push("n/a"):t.push(this.ruleNames[n]),e=e.parentCtx}return t},l.prototype.getDFAStrings=function(){return this._interp.decisionToDFA.toString()},l.prototype.dumpDFA=function(){var e=!1;for(var t=0;t<this._interp.decisionToDFA.length;t++){var n=this._interp.decisionToDFA[t];n.states.length>0&&(e&&console.log(),this.printer.println("Decision "+n.decision+":"),this.printer.print(n.toString(this.literalNames,this.symbolicNames)),e=!0)}},l.prototype.getSourceName=function(){return this._input.sourceName},l.prototype.setTrace=function(e){e?(this._tracer!==null&&this.removeParseListener(this._tracer),this._tracer=new f(this),this.addParseListener(this._tracer)):(this.removeParseListener(this._tracer),this._tracer=null)},t.Parser=l}),r("index",["require","exports","module","./atn/index","./dfa/index","./tree/index","./error/index","./Token","./Token","./InputStream","./CommonTokenStream","./Lexer","./Parser","./PredictionContext","./ParserRuleContext","./IntervalSet","./Utils"],function(e,t,n){t.atn=e("./atn/index"),t.dfa=e("./dfa/index"),t.tree=e("./tree/index"),t.error=e("./error/index"),t.Token=e("./Token").Token,t.CommonToken=e("./Token").CommonToken,t.InputStream=e("./InputStream").InputStream,t.CommonTokenStream=e("./CommonTokenStream").CommonTokenStream,t.Lexer=e("./Lexer").Lexer,t.Parser=e("./Parser").Parser;var r=e("./PredictionContext");t.PredictionContextCache=r.PredictionContextCache,t.ParserRuleContext=e("./ParserRuleContext").ParserRuleContext,t.Interval=e("./IntervalSet").Interval,t.Utils=e("./Utils")}),r("lodash",function(){return e}),n("index")});
define('../genFiles/ELListener',['require','exports','module','../ANTLR.min'],function (require, exports, module) {// Generated from grammar/EL.g4 by ANTLR 4.5.3
// jshint ignore: start
var antlr4 = require('../ANTLR.min');

// This class defines a complete listener for a parse tree produced by ELParser.
function ELListener() {
	antlr4.tree.ParseTreeListener.call(this);
	return this;
}

ELListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);
ELListener.prototype.constructor = ELListener;

// Enter a parse tree produced by ELParser#eL_Program.
ELListener.prototype.enterEL_Program = function(ctx) {
};

// Exit a parse tree produced by ELParser#eL_Program.
ELListener.prototype.exitEL_Program = function(ctx) {
};


// Enter a parse tree produced by ELParser#eL_Declaration.
ELListener.prototype.enterEL_Declaration = function(ctx) {
};

// Exit a parse tree produced by ELParser#eL_Declaration.
ELListener.prototype.exitEL_Declaration = function(ctx) {
};


// Enter a parse tree produced by ELParser#negation.
ELListener.prototype.enterNegation = function(ctx) {
};

// Exit a parse tree produced by ELParser#negation.
ELListener.prototype.exitNegation = function(ctx) {
};


// Enter a parse tree produced by ELParser#dotBangPair.
ELListener.prototype.enterDotBangPair = function(ctx) {
};

// Exit a parse tree produced by ELParser#dotBangPair.
ELListener.prototype.exitDotBangPair = function(ctx) {
};


// Enter a parse tree produced by ELParser#selector.
ELListener.prototype.enterSelector = function(ctx) {
};

// Exit a parse tree produced by ELParser#selector.
ELListener.prototype.exitSelector = function(ctx) {
};


// Enter a parse tree produced by ELParser#selection.
ELListener.prototype.enterSelection = function(ctx) {
};

// Exit a parse tree produced by ELParser#selection.
ELListener.prototype.exitSelection = function(ctx) {
};


// Enter a parse tree produced by ELParser#stringList.
ELListener.prototype.enterStringList = function(ctx) {
};

// Exit a parse tree produced by ELParser#stringList.
ELListener.prototype.exitStringList = function(ctx) {
};


// Enter a parse tree produced by ELParser#option.
ELListener.prototype.enterOption = function(ctx) {
};

// Exit a parse tree produced by ELParser#option.
ELListener.prototype.exitOption = function(ctx) {
};


// Enter a parse tree produced by ELParser#eL_Query.
ELListener.prototype.enterEL_Query = function(ctx) {
};

// Exit a parse tree produced by ELParser#eL_Query.
ELListener.prototype.exitEL_Query = function(ctx) {
};


// Enter a parse tree produced by ELParser#utility.
ELListener.prototype.enterUtility = function(ctx) {
};

// Exit a parse tree produced by ELParser#utility.
ELListener.prototype.exitUtility = function(ctx) {
};


// Enter a parse tree produced by ELParser#stringOrNum.
ELListener.prototype.enterStringOrNum = function(ctx) {
};

// Exit a parse tree produced by ELParser#stringOrNum.
ELListener.prototype.exitStringOrNum = function(ctx) {
};



exports.ELListener = ELListener;
});

define('../genFiles/ELLexer',['require','exports','module','../ANTLR.min'],function (require, exports, module) {// Generated from grammar/EL.g4 by ANTLR 4.5.3
// jshint ignore: start
var antlr4 = require('../ANTLR.min');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u0012M\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0003\u0002\u0003\u0002\u0003\u0003\u0003",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0005",
    "\u0010B\n\u0010\u0003\u0010\u0006\u0010E\n\u0010\r\u0010\u000e\u0010",
    "F\u0003\u0011\u0006\u0011J\n\u0011\r\u0011\u000e\u0011K\u0002\u0002",
    "\u0012\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f",
    "\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d",
    "\u0010\u001f\u0011!\u0012\u0003\u0002\u0004\u0003\u00022;\u0006\u0002",
    "2;C\\aac|O\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002",
    "\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002",
    "\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002",
    "\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002",
    "\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002",
    "\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002",
    "\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002",
    "\u0002\u0002\u0003#\u0003\u0002\u0002\u0002\u0005%\u0003\u0002\u0002",
    "\u0002\u0007\'\u0003\u0002\u0002\u0002\t)\u0003\u0002\u0002\u0002\u000b",
    "+\u0003\u0002\u0002\u0002\r-\u0003\u0002\u0002\u0002\u000f/\u0003\u0002",
    "\u0002\u0002\u00111\u0003\u0002\u0002\u0002\u00133\u0003\u0002\u0002",
    "\u0002\u00155\u0003\u0002\u0002\u0002\u00177\u0003\u0002\u0002\u0002",
    "\u00199\u0003\u0002\u0002\u0002\u001b;\u0003\u0002\u0002\u0002\u001d",
    ">\u0003\u0002\u0002\u0002\u001fA\u0003\u0002\u0002\u0002!I\u0003\u0002",
    "\u0002\u0002#$\u0007A\u0002\u0002$\u0004\u0003\u0002\u0002\u0002%&\u0007",
    "0\u0002\u0002&\u0006\u0003\u0002\u0002\u0002\'(\u0007#\u0002\u0002(",
    "\b\u0003\u0002\u0002\u0002)*\u0007.\u0002\u0002*\n\u0003\u0002\u0002",
    "\u0002+,\u0007]\u0002\u0002,\f\u0003\u0002\u0002\u0002-.\u0007_\u0002",
    "\u0002.\u000e\u0003\u0002\u0002\u0002/0\u0007&\u0002\u00020\u0010\u0003",
    "\u0002\u0002\u000212\u0007}\u0002\u00022\u0012\u0003\u0002\u0002\u0002",
    "34\u0007\u007f\u0002\u00024\u0014\u0003\u0002\u0002\u000256\u0007`\u0002",
    "\u00026\u0016\u0003\u0002\u0002\u000278\u0007%\u0002\u00028\u0018\u0003",
    "\u0002\u0002\u00029:\u00071\u0002\u0002:\u001a\u0003\u0002\u0002\u0002",
    ";<\u0007/\u0002\u0002<=\u0007@\u0002\u0002=\u001c\u0003\u0002\u0002",
    "\u0002>?\u0007\'\u0002\u0002?\u001e\u0003\u0002\u0002\u0002@B\u0007",
    "/\u0002\u0002A@\u0003\u0002\u0002\u0002AB\u0003\u0002\u0002\u0002BD",
    "\u0003\u0002\u0002\u0002CE\t\u0002\u0002\u0002DC\u0003\u0002\u0002\u0002",
    "EF\u0003\u0002\u0002\u0002FD\u0003\u0002\u0002\u0002FG\u0003\u0002\u0002",
    "\u0002G \u0003\u0002\u0002\u0002HJ\t\u0003\u0002\u0002IH\u0003\u0002",
    "\u0002\u0002JK\u0003\u0002\u0002\u0002KI\u0003\u0002\u0002\u0002KL\u0003",
    "\u0002\u0002\u0002L\"\u0003\u0002\u0002\u0002\u0006\u0002AFK\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function ELLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

ELLexer.prototype = Object.create(antlr4.Lexer.prototype);
ELLexer.prototype.constructor = ELLexer;

ELLexer.EOF = antlr4.Token.EOF;
ELLexer.QUESTION = 1;
ELLexer.DOT = 2;
ELLexer.BANG = 3;
ELLexer.COMMA = 4;
ELLexer.LBRACKET = 5;
ELLexer.RBRACKET = 6;
ELLexer.SELECTOR = 7;
ELLexer.LBRACE = 8;
ELLexer.RBRACE = 9;
ELLexer.RETURN = 10;
ELLexer.UTILITY = 11;
ELLexer.DIVIDOR = 12;
ELLexer.ARROW = 13;
ELLexer.PAIR = 14;
ELLexer.NUMBER = 15;
ELLexer.STRING = 16;


ELLexer.modeNames = [ "DEFAULT_MODE" ];

ELLexer.literalNames = [ null, "'?'", "'.'", "'!'", "','", "'['", "']'", 
                         "'$'", "'{'", "'}'", "'^'", "'#'", "'/'", "'->'", 
                         "'%'" ];

ELLexer.symbolicNames = [ null, "QUESTION", "DOT", "BANG", "COMMA", "LBRACKET", 
                          "RBRACKET", "SELECTOR", "LBRACE", "RBRACE", "RETURN", 
                          "UTILITY", "DIVIDOR", "ARROW", "PAIR", "NUMBER", 
                          "STRING" ];

ELLexer.ruleNames = [ "QUESTION", "DOT", "BANG", "COMMA", "LBRACKET", "RBRACKET", 
                      "SELECTOR", "LBRACE", "RBRACE", "RETURN", "UTILITY", 
                      "DIVIDOR", "ARROW", "PAIR", "NUMBER", "STRING" ];

ELLexer.grammarFileName = "EL.g4";



exports.ELLexer = ELLexer;


});

define('../genFiles/ELParser',['require','exports','module','../ANTLR.min','./ELListener'],function (require, exports, module) {// Generated from grammar/EL.g4 by ANTLR 4.5.3
// jshint ignore: start
var antlr4 = require('../ANTLR.min');
var ELListener = require('./ELListener').ELListener;
var grammarFileName = "EL.g4";

var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0003\u0012r\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0003",
    "\u0002\u0003\u0002\u0005\u0002\u001b\n\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0003\u0005\u0003 \n\u0003\u0003\u0003\u0005\u0003#\n\u0003\u0003",
    "\u0003\u0003\u0003\u0007\u0003\'\n\u0003\f\u0003\u000e\u0003*\u000b",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0005\u00053\n\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003",
    "\u0007\u0003\u0007\u0005\u0007?\n\u0007\u0003\u0007\u0003\u0007\u0005",
    "\u0007C\n\u0007\u0003\u0007\u0005\u0007F\n\u0007\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0007\bL\n\b\f\b\u000e\bO\u000b\b\u0005\bQ\n\b\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0005\nX\n\n\u0003\n\u0005\n[\n\n\u0003\n",
    "\u0005\n^\n\n\u0003\n\u0003\n\u0007\nb\n\n\f\n\u000e\ne\u000b\n\u0003",
    "\n\u0003\n\u0005\ni\n\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\f\u0003\f\u0003\f\u0002\u0002\r\u0002\u0004\u0006",
    "\b\n\f\u000e\u0010\u0012\u0014\u0016\u0002\u0004\u0003\u0002\u0004\u0005",
    "\u0003\u0002\u0011\u0012w\u0002\u001a\u0003\u0002\u0002\u0002\u0004",
    "\u001f\u0003\u0002\u0002\u0002\u0006+\u0003\u0002\u0002\u0002\b.\u0003",
    "\u0002\u0002\u0002\n4\u0003\u0002\u0002\u0002\fE\u0003\u0002\u0002\u0002",
    "\u000eP\u0003\u0002\u0002\u0002\u0010R\u0003\u0002\u0002\u0002\u0012",
    "W\u0003\u0002\u0002\u0002\u0014j\u0003\u0002\u0002\u0002\u0016o\u0003",
    "\u0002\u0002\u0002\u0018\u001b\u0005\u0004\u0003\u0002\u0019\u001b\u0005",
    "\u0012\n\u0002\u001a\u0018\u0003\u0002\u0002\u0002\u001a\u0019\u0003",
    "\u0002\u0002\u0002\u001b\u001c\u0003\u0002\u0002\u0002\u001c\u001d\u0007",
    "\u0002\u0002\u0003\u001d\u0003\u0003\u0002\u0002\u0002\u001e \u0005",
    "\u0006\u0004\u0002\u001f\u001e\u0003\u0002\u0002\u0002\u001f \u0003",
    "\u0002\u0002\u0002 \"\u0003\u0002\u0002\u0002!#\u0005\n\u0006\u0002",
    "\"!\u0003\u0002\u0002\u0002\"#\u0003\u0002\u0002\u0002#$\u0003\u0002",
    "\u0002\u0002$(\u0005\b\u0005\u0002%\'\u0005\b\u0005\u0002&%\u0003\u0002",
    "\u0002\u0002\'*\u0003\u0002\u0002\u0002(&\u0003\u0002\u0002\u0002()",
    "\u0003\u0002\u0002\u0002)\u0005\u0003\u0002\u0002\u0002*(\u0003\u0002",
    "\u0002\u0002+,\u0007\u0005\u0002\u0002,-\u0007\u0005\u0002\u0002-\u0007",
    "\u0003\u0002\u0002\u0002./\t\u0002\u0002\u0002/2\u0005\f\u0007\u0002",
    "01\u0007\u000f\u0002\u000213\u0005\u000e\b\u000220\u0003\u0002\u0002",
    "\u000223\u0003\u0002\u0002\u00023\t\u0003\u0002\u0002\u000245\u0007",
    "\t\u0002\u000256\u0007\n\u0002\u000267\u0005\u000e\b\u000278\u0007\u000b",
    "\u0002\u00028\u000b\u0003\u0002\u0002\u00029:\u0007\u0007\u0002\u0002",
    ":;\u0007\u0011\u0002\u0002;F\u0007\b\u0002\u0002<F\u0005\n\u0006\u0002",
    "=?\u0007\r\u0002\u0002>=\u0003\u0002\u0002\u0002>?\u0003\u0002\u0002",
    "\u0002?@\u0003\u0002\u0002\u0002@F\u0007\u0012\u0002\u0002AC\u0007\r",
    "\u0002\u0002BA\u0003\u0002\u0002\u0002BC\u0003\u0002\u0002\u0002CD\u0003",
    "\u0002\u0002\u0002DF\u0007\u0011\u0002\u0002E9\u0003\u0002\u0002\u0002",
    "E<\u0003\u0002\u0002\u0002E>\u0003\u0002\u0002\u0002EB\u0003\u0002\u0002",
    "\u0002F\r\u0003\u0002\u0002\u0002GQ\u0007\u0012\u0002\u0002HM\u0007",
    "\u0012\u0002\u0002IJ\u0007\u0006\u0002\u0002JL\u0007\u0012\u0002\u0002",
    "KI\u0003\u0002\u0002\u0002LO\u0003\u0002\u0002\u0002MK\u0003\u0002\u0002",
    "\u0002MN\u0003\u0002\u0002\u0002NQ\u0003\u0002\u0002\u0002OM\u0003\u0002",
    "\u0002\u0002PG\u0003\u0002\u0002\u0002PH\u0003\u0002\u0002\u0002Q\u000f",
    "\u0003\u0002\u0002\u0002RS\u0007\u0007\u0002\u0002ST\u0005\u000e\b\u0002",
    "TU\u0007\b\u0002\u0002U\u0011\u0003\u0002\u0002\u0002VX\u0005\u0006",
    "\u0004\u0002WV\u0003\u0002\u0002\u0002WX\u0003\u0002\u0002\u0002XZ\u0003",
    "\u0002\u0002\u0002Y[\u0007\u0010\u0002\u0002ZY\u0003\u0002\u0002\u0002",
    "Z[\u0003\u0002\u0002\u0002[]\u0003\u0002\u0002\u0002\\^\u0005\n\u0006",
    "\u0002]\\\u0003\u0002\u0002\u0002]^\u0003\u0002\u0002\u0002^_\u0003",
    "\u0002\u0002\u0002_c\u0005\b\u0005\u0002`b\u0005\b\u0005\u0002a`\u0003",
    "\u0002\u0002\u0002be\u0003\u0002\u0002\u0002ca\u0003\u0002\u0002\u0002",
    "cd\u0003\u0002\u0002\u0002df\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002",
    "\u0002fh\u0007\u0003\u0002\u0002gi\u0005\u0014\u000b\u0002hg\u0003\u0002",
    "\u0002\u0002hi\u0003\u0002\u0002\u0002i\u0013\u0003\u0002\u0002\u0002",
    "jk\u0007\r\u0002\u0002kl\u0005\u0016\f\u0002lm\u0007\u000e\u0002\u0002",
    "mn\u0005\u0016\f\u0002n\u0015\u0003\u0002\u0002\u0002op\t\u0003\u0002",
    "\u0002p\u0017\u0003\u0002\u0002\u0002\u0011\u001a\u001f\"(2>BEMPWZ]",
    "ch"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "'?'", "'.'", "'!'", "','", "'['", "']'", "'$'", 
                     "'{'", "'}'", "'^'", "'#'", "'/'", "'->'", "'%'" ];

var symbolicNames = [ null, "QUESTION", "DOT", "BANG", "COMMA", "LBRACKET", 
                      "RBRACKET", "SELECTOR", "LBRACE", "RBRACE", "RETURN", 
                      "UTILITY", "DIVIDOR", "ARROW", "PAIR", "NUMBER", "STRING" ];

var ruleNames =  [ "eL_Program", "eL_Declaration", "negation", "dotBangPair", 
                   "selector", "selection", "stringList", "option", "eL_Query", 
                   "utility", "stringOrNum" ];

function ELParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

ELParser.prototype = Object.create(antlr4.Parser.prototype);
ELParser.prototype.constructor = ELParser;

Object.defineProperty(ELParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

ELParser.EOF = antlr4.Token.EOF;
ELParser.QUESTION = 1;
ELParser.DOT = 2;
ELParser.BANG = 3;
ELParser.COMMA = 4;
ELParser.LBRACKET = 5;
ELParser.RBRACKET = 6;
ELParser.SELECTOR = 7;
ELParser.LBRACE = 8;
ELParser.RBRACE = 9;
ELParser.RETURN = 10;
ELParser.UTILITY = 11;
ELParser.DIVIDOR = 12;
ELParser.ARROW = 13;
ELParser.PAIR = 14;
ELParser.NUMBER = 15;
ELParser.STRING = 16;

ELParser.RULE_eL_Program = 0;
ELParser.RULE_eL_Declaration = 1;
ELParser.RULE_negation = 2;
ELParser.RULE_dotBangPair = 3;
ELParser.RULE_selector = 4;
ELParser.RULE_selection = 5;
ELParser.RULE_stringList = 6;
ELParser.RULE_option = 7;
ELParser.RULE_eL_Query = 8;
ELParser.RULE_utility = 9;
ELParser.RULE_stringOrNum = 10;

function EL_ProgramContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_eL_Program;
    return this;
}

EL_ProgramContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EL_ProgramContext.prototype.constructor = EL_ProgramContext;

EL_ProgramContext.prototype.EOF = function() {
    return this.getToken(ELParser.EOF, 0);
};

EL_ProgramContext.prototype.eL_Declaration = function() {
    return this.getTypedRuleContext(EL_DeclarationContext,0);
};

EL_ProgramContext.prototype.eL_Query = function() {
    return this.getTypedRuleContext(EL_QueryContext,0);
};

EL_ProgramContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterEL_Program(this);
	}
};

EL_ProgramContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitEL_Program(this);
	}
};




ELParser.EL_ProgramContext = EL_ProgramContext;

ELParser.prototype.eL_Program = function() {

    var localctx = new EL_ProgramContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, ELParser.RULE_eL_Program);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 24;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,0,this._ctx);
        switch(la_) {
        case 1:
            this.state = 22;
            this.eL_Declaration();
            break;

        case 2:
            this.state = 23;
            this.eL_Query();
            break;

        }
        this.state = 26;
        this.match(ELParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EL_DeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_eL_Declaration;
    return this;
}

EL_DeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EL_DeclarationContext.prototype.constructor = EL_DeclarationContext;

EL_DeclarationContext.prototype.dotBangPair = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(DotBangPairContext);
    } else {
        return this.getTypedRuleContext(DotBangPairContext,i);
    }
};

EL_DeclarationContext.prototype.negation = function() {
    return this.getTypedRuleContext(NegationContext,0);
};

EL_DeclarationContext.prototype.selector = function() {
    return this.getTypedRuleContext(SelectorContext,0);
};

EL_DeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterEL_Declaration(this);
	}
};

EL_DeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitEL_Declaration(this);
	}
};




ELParser.EL_DeclarationContext = EL_DeclarationContext;

ELParser.prototype.eL_Declaration = function() {

    var localctx = new EL_DeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, ELParser.RULE_eL_Declaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 29;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,1,this._ctx);
        if(la_===1) {
            this.state = 28;
            this.negation();

        }
        this.state = 32;
        _la = this._input.LA(1);
        if(_la===ELParser.SELECTOR) {
            this.state = 31;
            this.selector();
        }

        this.state = 34;
        this.dotBangPair();
        this.state = 38;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ELParser.DOT || _la===ELParser.BANG) {
            this.state = 35;
            this.dotBangPair();
            this.state = 40;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NegationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_negation;
    return this;
}

NegationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NegationContext.prototype.constructor = NegationContext;

NegationContext.prototype.BANG = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ELParser.BANG);
    } else {
        return this.getToken(ELParser.BANG, i);
    }
};


NegationContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterNegation(this);
	}
};

NegationContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitNegation(this);
	}
};




ELParser.NegationContext = NegationContext;

ELParser.prototype.negation = function() {

    var localctx = new NegationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, ELParser.RULE_negation);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 41;
        this.match(ELParser.BANG);
        this.state = 42;
        this.match(ELParser.BANG);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DotBangPairContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_dotBangPair;
    return this;
}

DotBangPairContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DotBangPairContext.prototype.constructor = DotBangPairContext;

DotBangPairContext.prototype.selection = function() {
    return this.getTypedRuleContext(SelectionContext,0);
};

DotBangPairContext.prototype.DOT = function() {
    return this.getToken(ELParser.DOT, 0);
};

DotBangPairContext.prototype.BANG = function() {
    return this.getToken(ELParser.BANG, 0);
};

DotBangPairContext.prototype.ARROW = function() {
    return this.getToken(ELParser.ARROW, 0);
};

DotBangPairContext.prototype.stringList = function() {
    return this.getTypedRuleContext(StringListContext,0);
};

DotBangPairContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterDotBangPair(this);
	}
};

DotBangPairContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitDotBangPair(this);
	}
};




ELParser.DotBangPairContext = DotBangPairContext;

ELParser.prototype.dotBangPair = function() {

    var localctx = new DotBangPairContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, ELParser.RULE_dotBangPair);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 44;
        _la = this._input.LA(1);
        if(!(_la===ELParser.DOT || _la===ELParser.BANG)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
        this.state = 45;
        this.selection();
        this.state = 48;
        _la = this._input.LA(1);
        if(_la===ELParser.ARROW) {
            this.state = 46;
            this.match(ELParser.ARROW);
            this.state = 47;
            this.stringList();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SelectorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_selector;
    return this;
}

SelectorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectorContext.prototype.constructor = SelectorContext;

SelectorContext.prototype.SELECTOR = function() {
    return this.getToken(ELParser.SELECTOR, 0);
};

SelectorContext.prototype.LBRACE = function() {
    return this.getToken(ELParser.LBRACE, 0);
};

SelectorContext.prototype.stringList = function() {
    return this.getTypedRuleContext(StringListContext,0);
};

SelectorContext.prototype.RBRACE = function() {
    return this.getToken(ELParser.RBRACE, 0);
};

SelectorContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterSelector(this);
	}
};

SelectorContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitSelector(this);
	}
};




ELParser.SelectorContext = SelectorContext;

ELParser.prototype.selector = function() {

    var localctx = new SelectorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, ELParser.RULE_selector);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 50;
        this.match(ELParser.SELECTOR);
        this.state = 51;
        this.match(ELParser.LBRACE);
        this.state = 52;
        this.stringList();
        this.state = 53;
        this.match(ELParser.RBRACE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SelectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_selection;
    return this;
}

SelectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectionContext.prototype.constructor = SelectionContext;

SelectionContext.prototype.LBRACKET = function() {
    return this.getToken(ELParser.LBRACKET, 0);
};

SelectionContext.prototype.NUMBER = function() {
    return this.getToken(ELParser.NUMBER, 0);
};

SelectionContext.prototype.RBRACKET = function() {
    return this.getToken(ELParser.RBRACKET, 0);
};

SelectionContext.prototype.selector = function() {
    return this.getTypedRuleContext(SelectorContext,0);
};

SelectionContext.prototype.STRING = function() {
    return this.getToken(ELParser.STRING, 0);
};

SelectionContext.prototype.UTILITY = function() {
    return this.getToken(ELParser.UTILITY, 0);
};

SelectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterSelection(this);
	}
};

SelectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitSelection(this);
	}
};




ELParser.SelectionContext = SelectionContext;

ELParser.prototype.selection = function() {

    var localctx = new SelectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, ELParser.RULE_selection);
    var _la = 0; // Token type
    try {
        this.state = 67;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,7,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 55;
            this.match(ELParser.LBRACKET);
            this.state = 56;
            this.match(ELParser.NUMBER);
            this.state = 57;
            this.match(ELParser.RBRACKET);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 58;
            this.selector();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 60;
            _la = this._input.LA(1);
            if(_la===ELParser.UTILITY) {
                this.state = 59;
                this.match(ELParser.UTILITY);
            }

            this.state = 62;
            this.match(ELParser.STRING);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 64;
            _la = this._input.LA(1);
            if(_la===ELParser.UTILITY) {
                this.state = 63;
                this.match(ELParser.UTILITY);
            }

            this.state = 66;
            this.match(ELParser.NUMBER);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StringListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_stringList;
    return this;
}

StringListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StringListContext.prototype.constructor = StringListContext;

StringListContext.prototype.STRING = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ELParser.STRING);
    } else {
        return this.getToken(ELParser.STRING, i);
    }
};


StringListContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(ELParser.COMMA);
    } else {
        return this.getToken(ELParser.COMMA, i);
    }
};


StringListContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterStringList(this);
	}
};

StringListContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitStringList(this);
	}
};




ELParser.StringListContext = StringListContext;

ELParser.prototype.stringList = function() {

    var localctx = new StringListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, ELParser.RULE_stringList);
    var _la = 0; // Token type
    try {
        this.state = 78;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,9,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 69;
            this.match(ELParser.STRING);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 70;
            this.match(ELParser.STRING);
            this.state = 75;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===ELParser.COMMA) {
                this.state = 71;
                this.match(ELParser.COMMA);
                this.state = 72;
                this.match(ELParser.STRING);
                this.state = 77;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OptionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_option;
    return this;
}

OptionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OptionContext.prototype.constructor = OptionContext;

OptionContext.prototype.LBRACKET = function() {
    return this.getToken(ELParser.LBRACKET, 0);
};

OptionContext.prototype.stringList = function() {
    return this.getTypedRuleContext(StringListContext,0);
};

OptionContext.prototype.RBRACKET = function() {
    return this.getToken(ELParser.RBRACKET, 0);
};

OptionContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterOption(this);
	}
};

OptionContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitOption(this);
	}
};




ELParser.OptionContext = OptionContext;

ELParser.prototype.option = function() {

    var localctx = new OptionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, ELParser.RULE_option);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 80;
        this.match(ELParser.LBRACKET);
        this.state = 81;
        this.stringList();
        this.state = 82;
        this.match(ELParser.RBRACKET);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EL_QueryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_eL_Query;
    return this;
}

EL_QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EL_QueryContext.prototype.constructor = EL_QueryContext;

EL_QueryContext.prototype.dotBangPair = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(DotBangPairContext);
    } else {
        return this.getTypedRuleContext(DotBangPairContext,i);
    }
};

EL_QueryContext.prototype.QUESTION = function() {
    return this.getToken(ELParser.QUESTION, 0);
};

EL_QueryContext.prototype.negation = function() {
    return this.getTypedRuleContext(NegationContext,0);
};

EL_QueryContext.prototype.PAIR = function() {
    return this.getToken(ELParser.PAIR, 0);
};

EL_QueryContext.prototype.selector = function() {
    return this.getTypedRuleContext(SelectorContext,0);
};

EL_QueryContext.prototype.utility = function() {
    return this.getTypedRuleContext(UtilityContext,0);
};

EL_QueryContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterEL_Query(this);
	}
};

EL_QueryContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitEL_Query(this);
	}
};




ELParser.EL_QueryContext = EL_QueryContext;

ELParser.prototype.eL_Query = function() {

    var localctx = new EL_QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, ELParser.RULE_eL_Query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 85;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,10,this._ctx);
        if(la_===1) {
            this.state = 84;
            this.negation();

        }
        this.state = 88;
        _la = this._input.LA(1);
        if(_la===ELParser.PAIR) {
            this.state = 87;
            this.match(ELParser.PAIR);
        }

        this.state = 91;
        _la = this._input.LA(1);
        if(_la===ELParser.SELECTOR) {
            this.state = 90;
            this.selector();
        }

        this.state = 93;
        this.dotBangPair();
        this.state = 97;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===ELParser.DOT || _la===ELParser.BANG) {
            this.state = 94;
            this.dotBangPair();
            this.state = 99;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 100;
        this.match(ELParser.QUESTION);
        this.state = 102;
        _la = this._input.LA(1);
        if(_la===ELParser.UTILITY) {
            this.state = 101;
            this.utility();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UtilityContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_utility;
    return this;
}

UtilityContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UtilityContext.prototype.constructor = UtilityContext;

UtilityContext.prototype.UTILITY = function() {
    return this.getToken(ELParser.UTILITY, 0);
};

UtilityContext.prototype.stringOrNum = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(StringOrNumContext);
    } else {
        return this.getTypedRuleContext(StringOrNumContext,i);
    }
};

UtilityContext.prototype.DIVIDOR = function() {
    return this.getToken(ELParser.DIVIDOR, 0);
};

UtilityContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterUtility(this);
	}
};

UtilityContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitUtility(this);
	}
};




ELParser.UtilityContext = UtilityContext;

ELParser.prototype.utility = function() {

    var localctx = new UtilityContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, ELParser.RULE_utility);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 104;
        this.match(ELParser.UTILITY);
        this.state = 105;
        this.stringOrNum();
        this.state = 106;
        this.match(ELParser.DIVIDOR);
        this.state = 107;
        this.stringOrNum();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StringOrNumContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = ELParser.RULE_stringOrNum;
    return this;
}

StringOrNumContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StringOrNumContext.prototype.constructor = StringOrNumContext;

StringOrNumContext.prototype.STRING = function() {
    return this.getToken(ELParser.STRING, 0);
};

StringOrNumContext.prototype.NUMBER = function() {
    return this.getToken(ELParser.NUMBER, 0);
};

StringOrNumContext.prototype.enterRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.enterStringOrNum(this);
	}
};

StringOrNumContext.prototype.exitRule = function(listener) {
    if(listener instanceof ELListener ) {
        listener.exitStringOrNum(this);
	}
};




ELParser.StringOrNumContext = StringOrNumContext;

ELParser.prototype.stringOrNum = function() {

    var localctx = new StringOrNumContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, ELParser.RULE_stringOrNum);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 109;
        _la = this._input.LA(1);
        if(!(_la===ELParser.NUMBER || _la===ELParser.STRING)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


exports.ELParser = ELParser;

});




define('EL_Instructions',['lodash'],function(_){
    "use strict";
    let ELIs = {};

    ELIs.BANG = function(){
        this.data = [];
        this.bind = [];
    };

    ELIs.DOT = function(){
        this.data = [];
        this.bind = [];
    };

    ELIs.RECALL = function(){
        this.data = [];
    };

    ELIs.OPTION = function(num){
        this.num = num;
    };
    
    //Instructions:--------------------
    //Assert a fact
    ELIs.Assertion = function(){
        this.data = [];
    };

    //Retract a fact
    ELIs.Retraction = function(){
        this.data = [];
    };

    //Query for a fact
    ELIs.Query = function(){
        this.data = [];
        this.negated = false;
        this.pair = null;
        this.utility = [true, false];
    };


    return ELIs;
});

/* jshint esversion : 6 */
/**
   @module ABLParser
*/


define('EL_custom_listener',['lodash','../genFiles/ELListener','./EL_Instructions'],function(_,ELListener,ELIs){
    "use strict";
    /**
       The custom listener constructor
       @class EL_Custom_Listener
       @constructor
    */
    var Listener = function(){
        //Not ABLListener.call:
        ELListener.ELListener.call(this);
        //used to build up info
        this.parseStack = [];
        //The main object being created:
        this.parseObj = {
            data : []
        };
        return this;
    };
    //Not ABLListener.prototype, just ABLListener
    //Setup the prototype chain:
    Listener.prototype = Object.create(ELListener.ELListener.prototype);
    Listener.prototype.constructor = Listener;

    Listener.prototype.finish = function(){
        return this.parseObj;
    };
    
    //------------------------------
    //PARSING METHODS:

    Listener.prototype.enterEL_Program = function(ctx){
        
    };

    Listener.prototype.exitEL_Program = function(ctx){
    };
    
    //Create a new instruction
    Listener.prototype.enterEL_Declaration = function(ctx){
        if(ctx.negation() !== null){
            //this.parseObj.action = "retract";
            this.parseObj = new ELIs.Retraction();
        }else{
            //this.parseObj.action = "assert";
            this.parseObj = new ELIs.Assertion();
        }
        //record the current size of the parseStack
        //to know how much to pop off later
        ctx.parseStackSize = this.parseStack.length;
    };

    //take all the stack components, and combine to form the instruction data
    Listener.prototype.exitEL_Declaration = function(ctx){
        let data = [];
        while(this.parseStack.length > ctx.parseStackSize){
            data.unshift(this.parseStack.pop());
        }
        this.parseObj.data = data;
    };

    //Create the recall component
    Listener.prototype.enterSelector = function(ctx){
        this.parseStack.push(new ELIs.RECALL());
    };

    //get the stringlist, set it as the recall data
    Listener.prototype.exitSelector = function(ctx){
        let stringList = this.parseStack.pop();
        _.last(this.parseStack).data = stringList;
    };

    //put an ARRAY of strings on the stack for use
    Listener.prototype.enterStringList = function(ctx){
        let strings = ctx.STRING();
        if(strings instanceof Array){
            this.parseStack.push(ctx.STRING().map(d=>d.getText()));
        }else{
            this.parseStack.push([strings.getText()]);
        }
    };

    //Create a dot or bang component, add it to the stack
    Listener.prototype.enterDotBangPair = function(ctx){
        let dotBang = ctx.DOT() !== null ? new ELIs.DOT() : new ELIs.BANG();
        this.parseStack.push(dotBang);
    };


    Listener.prototype.enterSelection = function(ctx){
        if(ctx.LBRACKET() !== null){
            this.parseStack.push(new ELIs.OPTION(Number(ctx.NUMBER().getText())));
        }else if(ctx.NUMBER() !== null){
            let value = ctx.UTILITY() !== null ? "#" + ctx.NUMBER().getText() : Number(ctx.NUMBER().getText());;
            this.parseStack.push(value);
        }else if(ctx.STRING() !== null){
            let value = ctx.UTILITY() !== null ? "#" : "";
            value += ctx.STRING().getText();
            this.parseStack.push(value);
        }else if(ctx.selector() !== null){
            //no op, exitSelector will deal with it
        }
    };

    //finish up the instruction component 
    Listener.prototype.exitDotBangPair = function(ctx){
        let bindData,selectionData;
        if(ctx.ARROW() !== null){
            //pop the last stringList
            bindData = this.parseStack.pop();
        }
        //pop the selection
        selectionData = this.parseStack.pop();

        let current = _.last(this.parseStack);
        current.bind = bindData || [];
        current.data = selectionData;                        
    };

    //Create a query
    Listener.prototype.enterEL_Query = function(ctx){
        this.parseObj = new ELIs.Query();
        if(ctx.negation() !== null){
            this.parseObj.negated = true;
        }
        ctx.parseStackSize = this.parseStack.length;
    };

    Listener.prototype.exitEL_Query = function(ctx){
        let data = [];
        while(this.parseStack.length > ctx.parseStackSize){
            data.unshift(this.parseStack.pop());
        }
        this.parseObj.data = data;        
    };
    
    //Set a query's return values
    Listener.prototype.enterUtility = function(ctx){
        this.parseObj.utility[0] = ctx.stringOrNum(0).getText();
        this.parseObj.utility[1] = ctx.stringOrNum(1).getText();
    };
    
    return Listener;
});

/* jshint esversion : 6 */
/**
   @module EL Parser module
 */



define('ELModule',['../ANTLR.min','../genFiles/ELListener','../genFiles/ELLexer','../genFiles/ELParser','./EL_custom_listener'],function(antlr4,ELListener,ELLexer,ELParser,EL_custom_listener){
    "use strict";
    /**
       The Parse Function
       @method parseInput
       @param input The Input string to be parsed
       @param startRule The rule of the grammar to start on
       @static

       Grammar to be found in EL.g4 and ELTokens.g4
     */
    let parseInput = function(input,startRule){
        startRule = startRule || "eL_Program";
        
        if(input.length <= 0){
            throw new Error("Parser given no input");
        };
        //console.log("Parsing Input:",input);
        let chars = new antlr4.InputStream(input),
            lexer = new ELLexer.ELLexer(chars),
            tokens  = new antlr4.CommonTokenStream(lexer),
            parser = new ELParser.ELParser(tokens);
        parser.buildParseTrees = true;
        
        if(parser[startRule] === undefined){
            throw new Error("Parser does not have a rule:" + startRule);
        }        
 

        let tree = parser[startRule](),
            printer = new EL_custom_listener();

        antlr4.tree.ParseTreeWalker.DEFAULT.walk(printer,tree);

        return printer.finish();
    };


    /**
       Wraps up the parser into an easy to use function
       @class Parser
       @static
     */
    return { parse : parseInput};
});

/* jshint esversion : 6 */


define('EL_Runtime',['lodash','./ELModule','./EL_Instructions'],function(_,ELModule,ELIs){
    "use strict";
    let parser = ELModule.parse;
    
    let ELBase = function(artificialRoot){
        if(artificialRoot){
            this.root = artificialRoot;
        }else{
            this.root = new Map();
            this.root.exclusive = ELIs.DOT;
        }
        //the status of current bindings
        this.currentState = new Map();
    };

    /**
       @param string : A String to parse for actions
    */
    ELBase.prototype.parse = function(string,log){
        if(string instanceof Array){
            return string.map(d=>this.parse(d)).reduce(function(m,v){
                return m && v;
            });
        }
        let parseObj = parser(string),
            result = false;
        if(log){
            console.log(parseObj);
        }
        return this.performParse(parseObj);
    };

    ELBase.prototype.performParse = function(parseObj){
        let result;
        //DECLARATIONS
        if(parseObj instanceof ELIs.Retraction){
            result = this.retract(parseObj);
        }else if(parseObj instanceof ELIs.Assertion){
            result = this.assert(parseObj);
        }else if(parseObj instanceof ELIs.Query){
            //QUERIES
            result = this.query(parseObj);
        }else{
            return false;
        }
        //default return:
        return result;
    };

    
    ELBase.prototype.assert = function(assertObj){
        //loop through the data of the obj
        let current = this.root,
            data = _.clone(assertObj.data),
            successStatus = true;
        while(successStatus && data.length > 0){
            let next = data.shift();
            //if starting from a bound point
            if(next instanceof ELIs.RECALL){
                let selected = _.sample(next.data);
                if(!this.currentState.has(selected)){
                    throw new Error('unrecognised binding');
                }
                current = this.currentState.get(selected);
            }else if(next instanceof current.exclusive){
                //ex type matches, check for value
                if(next.data instanceof ELIs.RECALL){
                    throw new Error("recalls not supported here yet");
                }else if(next.data instanceof ELIs.OPTION){
                    //is an option, get a random number of elements?
                    throw new Error("numeric options not supported yet");
                }else if(!current.has(next.data)){
                    //no value, create
                    if(next instanceof ELIs.BANG){
                        current.clear();
                    }
                    let newMap = new Map();
                    newMap.exclusive = ELIs.DOT;
                    current.set(next.data,newMap);
                }
                current = current.get(next.data);
                this.bindToCurrentState(next.bind,current);
            }else if(!(next instanceof current.exclusive)){
                //ex type mismatch
                if(next instanceof ELIs.BANG){
                    //next is BANG, so current is not. upgrade exclusivity
                    current.exclusive = ELIs.BANG;
                }else{
                    //next is dot, so current is bang, so complain about downgrade attempt
                    successStatus = false;
                    break;
                }
                //continue by retrieving or creating:
                let theMap;
                if(current.has(next.data)){
                    theMap = current.get(next.data);
                }else{
                    theMap = new Map();
                    theMap.exclusive = ELIs.DOT;
                }
                current.clear();
                current.set(next.data,theMap);
                current = theMap;
            }else{
                throw new Error("unrecognised instruction");
            }
        }
        return successStatus;            
    };

    
    //Return true for successfull retract,
    //false if the full retraction wasnt accomplished
    ELBase.prototype.retract = function(retractObj){
        //go through each data element, and delete the last
        let current = this.root,
            data = _.clone(retractObj.data),
            successStatus = true;

        while(successStatus && data.length > 1){
            let next = data.shift();
            //RECALL a location:
            if(next instanceof ELIs.RECALL){
                let selected = _.sample(next.data);
                if(!this.currentState.has(selected)){
                    throw new Error('unrecognised binding');
                }
                current = this.currentState.get(selected);
            }else if(next instanceof current.exclusive){
                if(current.has(next.data)){
                    current = current.get(next.data);
                }else{
                    successStatus = false;
                }
            }
        }
        
        //now retract the last thing remaining:
        if(successStatus && data.length === 1 && current.has(data[0].data) && data[0] instanceof current.exclusive){
            //actually retract here:
            //todo: should this need to recursively clear the maps? no, there are no upward links
            current.delete(data[0].data);
            if(current.size === 0){
                //reset to dot if now empty
                current.exclusive = ELIs.DOT;
            }            
        }else{
            successStatus = false;
        }

        return successStatus;
    };

    /**
       Query the EL Fact base for the given sequence
     */
    ELBase.prototype.query = function(queryObj){
        let queryStatus = true,
            data = _.clone(queryObj.data),
            current = this.root,
            bindings = {},
            bindAll = d=>{
                d.bind.forEach(e=>{
                    bindings[e] = d.data;
                    this.currentState.set(e,current);
                })};
        while(queryStatus && data.length > 0){
            let next = data.shift();
            if(next instanceof ELIs.RECALL){
                let selected = _.sample(_.shuffle(next.data));
                if(!this.currentState.has(selected)){
                    throw new Error('unrecognised binding');
                }
                current = this.currentState.get(selected);
                continue;//to the next iteration
            }
            //----------
            //Mismatch exclusion type: fail the query
            if(!(next instanceof current.exclusive)){
                queryStatus = false;
                break;
            }
            //selection:
            if(next.data instanceof ELIs.OPTION){
                let selection = _.sampleSize(Array.from(current.keys()),next.data.num),
                    selectionObj = _.zipObject(next.bind,selection);
                bindings = _.assign(bindings,selectionObj);
                this.bindObjToCurrentState(selectionObj,current);
                let singleSelection = _.sample(selection);
                if(current.has(singleSelection)){
                    this.current = current.get(singleSelection);
                }
            }else if(next.data instanceof ELIs.RECALL){
                let selectionPossibilities = next.data.data,
                    selection = _.sample(selectionPossibilities);
                if(this.currentState.has(selection)){
                    this.current = this.currentState.get(selection);
                }                
            }else if(current.has(next.data)){
                current = current.get(next.data);
                bindAll(next);
                //next.bind.forEach(bindFunc);
            }else{
                queryStatus = false;
            }
        }

        //Return bindings, false utility, or true utility
        if(queryStatus && _.keys(bindings).length > 0){
            return bindings;
        }else if(queryObj.negated === true){
            if(queryStatus) { return queryObj.utility[1]; }
            return queryObj.utility[0];
        }else if(!queryStatus){
            return queryObj.utility[1];
        }else{
            return queryObj.utility[0];
        }
    };

    ELBase.prototype.clearState = function(){
        this.currentState = {};
    };

    ELBase.prototype.bindToCurrentState = function(bindValues,node){
        if(bindValues){
            bindValues.forEach(d=>this.currentState.set(d,node));
        }
    };

    ELBase.prototype.bindObjToCurrentState = function(bindObj,current){
        _.toPairs(bindObj).forEach(d=>this.currentState.set(d[0],current.get(d[1])));
    };


    //A DFS, creating a string for every leaf path
    ELBase.prototype.toStrings = function(){
        let PATHPOP = Symbol(),
            keyMapStack = [],
            currentPath = [],
            outputStrings = [],
            current,
            toPair = d=>[d,current[1].get(d)];

        keyMapStack.push(["",this.root]);
        while(keyMapStack.length > 0){
            current = keyMapStack.pop();
            if(current === PATHPOP){
                currentPath.pop();
                continue;
            }
            keyMapStack.push(PATHPOP);
            if(current[1].size > 0){
                keyMapStack = keyMapStack.concat(Array.from(current[1].keys()).map(toPair));
                currentPath.push(current[0] + (current[1].exclusive === ELIs.BANG ? '!' : '.'));
            }else{
                currentPath.push(current[0]);
                outputStrings.push(currentPath.join(""));
            }        
        }
        return outputStrings;
    };

    
    return ELBase;
});

define('lodash',function() { return _; }); return require('EL_Runtime'); }));